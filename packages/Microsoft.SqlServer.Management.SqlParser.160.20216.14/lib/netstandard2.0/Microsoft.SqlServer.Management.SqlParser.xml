<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SqlServer.Management.SqlParser</name>
    </assembly>
    <members>
        <member name="T:Babel.CodeObjectQuickInfo">
            <summary>
            Represents the IntelliSense Quick Info for a code object.
            </summary>
        </member>
        <member name="F:Babel.CodeObjectQuickInfo.Text">
            <summary>
            Gets the text of the code object Quick Info.
            </summary>
        </member>
        <member name="F:Babel.CodeObjectQuickInfo.StartLocation">
            <summary>
            Gets the start location of the code object Quick Info.
            </summary>
        </member>
        <member name="F:Babel.CodeObjectQuickInfo.EndLocation">
            <summary>
            Gets the end location of the code object Quick Info.
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.IMerge`1">
            <summary>
            Classes implementing this interface must supply a
            method that merges two location objects to return
            a new object of the same type.
            MPPG-generated parsers have the default location
            action equivalent to "@$ = @1.Merge(@N);" where N
            is the right-hand-side length of the production.
            </summary>
            <typeparam name="YYLTYPE"></typeparam>
        </member>
        <member name="T:Babel.ParserGenerator.LexLocation">
            <summary>
            This is the default class that carries location
            information from the scanner to the parser.
            If you don't declare "%YYLTYPE Foo" the parser
            will expect to deal with this type.
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.AScanner`2">
            <summary>
            Abstract scanner class that MPPG expects its scanners to extend.
            </summary>
            <typeparam name="YYSTYPE"></typeparam>
            <typeparam name="YYLTYPE"></typeparam>
        </member>
        <member name="T:Babel.ParserGenerator.IMinimalList`1">
            <summary>
            Represents an indexed counted readonly list
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Babel.ParserGenerator.StatementFlags">
            <summary>
            we aren't using this yet but since i already spent the time to track it down and i'm going ahead and including it here
            anticipating that we will need it sooner or later.
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.SimpleScannerState">
            <summary>
            State of the scanner before reading current token.
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.CompleteScannerState">
            <summary>
            Restorable complete state of the scanner. Restores also read/unread token state.
            </summary>
        </member>
        <member name="P:Babel.ParserGenerator.SimpleParserScanner.SimpleScannerState">
            <summary>
            Returns simplified current state. This state may be used only 
            for comparison.
            </summary>
        </member>
        <member name="P:Babel.ParserGenerator.SimpleParserScanner.CompleteScannerState">
            <summary>
            Returns current state including the position of the next token.
            State doesn't include batch information.
            State may be used for restarting scanner at than state.
            Note: Works only for states outside Statement
            </summary>
            <returns></returns>
        </member>
        <member name="M:Babel.ParserGenerator.SimpleParserScanner.NextToken">
            <summary>
            Invalidates current token, and prepares scanner for reading next token
            Actual token reading is deferred until Token property read. 
            It allows to change scanner state after NextToken call and before Token property read.
            </summary>
        </member>
        <member name="P:Babel.ParserGenerator.SimpleParserScanner.Token">
            <summary>
            Returns the current token. If token is not read yet then it is scanned.
            </summary>
        </member>
        <member name="M:Babel.ParserGenerator.SimpleParserScanner.GetOriginalId(System.Int32)">
            <summary>
            Gets token id at given index. If the token has been killed, it returns its
            original token id.
            </summary>
            <param name="tokenNumber">Token list index of the token to get id for.</param>
            <returns>Id of the token at the given index.</returns>
        </member>
        <member name="M:Babel.ParserGenerator.SimpleParserScanner.RepeatToken">
            <summary>
            Unsafe for multi-part tokens
            </summary>
        </member>
        <member name="M:Babel.ParserGenerator.SimpleParserScanner.RepeatToken(System.Int32)">
            <summary>
            Unsafe for multi-part tokens
            </summary>
            <param name="tokenId"></param>
        </member>
        <member name="M:Babel.ParserGenerator.ParserScanner.ForwardScannerState(Babel.ParserGenerator.CompleteScannerState,Babel.ParserGenerator.ModifiedMinimalList{Babel.ParserGenerator.TokenData},Microsoft.SqlServer.Management.SqlParser.Parser.TokenUpdateDiff)">
            <summary>
            Restores previously saved state. 
            State doesn't include batch information.
            Note: Works only for states outside Statement
            </summary>
            <param name="state"></param>
            <param name="prevTokenList"></param>
            <param name="diff"></param>
        </member>
        <member name="F:Babel.ParserGenerator.ShiftReduceParser.currentParseContext">
            <summary>
            Thread local parse context.
            </summary>
        </member>
        <member name="P:Babel.ParserGenerator.ShiftReduceParser.CurrentParseContext">
            <summary>
            Gets thread local current parse context.
            </summary>
        </member>
        <member name="M:Babel.ParserGenerator.ShiftReduceParser.Reset">
            <summary>
            Resets the parser to its initial state.
            </summary>
        </member>
        <member name="M:Babel.ParserGenerator.ShiftReduceParser.CreateErrorObject">
            <summary>
            this method creates the generate SqlErrorCodeObject which represents the error token.
            it populates the children collection of the SqlErrorCodeObject with any partially constructed objects that were constructed
            prior to getting the parse error and would be lost during error recovery due to being forced to pop the state stack
            </summary>
        </member>
        <member name="M:Babel.ParserGenerator.ShiftReduceParser.GetText(Babel.ParserGenerator.LexLocation)">
            <summary>
            Gets the text at the specified lexical location.
            </summary>
            <param name="location">Lexical location to get the text at.</param>
            <returns>The Sql text at the given location.</returns>
        </member>
        <member name="F:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryMode.Normal">
            <summary>
            normal state, we can shift or reduce using any strategy
            </summary>            
        </member>
        <member name="F:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryMode.RequireErrorObject">
            <summary>
            we've pop'd a state, which means that we MUST have an error object
            </summary>            
        </member>
        <member name="F:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryMode.Discarding">
            <summary>
            we've shifted an error object, which means we discard until we get 
            to a state where we can shift another token.  either the nextToken
            or a missing token
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryStep">
            <summary>
            this class represents a single step in the error recovery process.  
            it is effectively a linked list node which enables us to share steps that originated
            from a common parent step
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryState">
            <summary>
            this class represents a potential error recovery state.
            it represents the minimalist parser state as well as the 
            history of steps that got us to this state
            </summary>
        </member>
        <member name="M:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryState.GetErrorRecoverySteps">
            <summary>
            the history list is actual in last action -> first action order
            when the caller plays them back, he needs them in the correct order
            this method creates a new list in the correct order and returns it.
            
            The expected result is list of actions in correct order and:
            - truncated at the last error recovery action. 
              All shift/reduce actions at the end can be just dropped.
            - without discard action, and with proper DiscardCount field set for every ShiftError action.
              Any discard is associated with specific ShiftError action. Just before error is shifted, 
              the DiscardCount number of tokens are discarded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryState.SimulateNextToken(System.Int32)">
            <summary>
            this method simulates the current state processing the specified nextToken.
            
            this means that we will Reduce / DefaultReduce on nextToken and finally perform
            a single shift, followed by any additional DefaultReduces
            
            if at any point previous to the shift the nextToken is not expected, 
            then we return null
            </summary>
            <param name="nextToken"></param>
            <returns></returns>
        </member>
        <member name="T:Babel.ParserGenerator.ShiftReduceParser.ErrorRecoveryState.ShortestIsGreaterComparer">
            <summary>
            this comparison is intentionally backward, that way the priority queue
            favors states with lower cost
            </summary>
        </member>
        <member name="T:Babel.ParserGenerator.TokenData">
            <summary>
            Provides data about a token
            </summary>
        </member>
        <member name="T:Babel.LineScanner">
            <summary>
            Scans Transact-SQL statements searching for individual units of code (tokens).
            </summary>
        </member>
        <member name="M:Babel.LineScanner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Babel.LineScanner"/> class by using a default 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions"/> object.
            </summary>
        </member>
        <member name="P:Babel.LineScanner.IsSqlCmdModeEnabled">
            <summary>
            Gets or sets a value that indicates whether the scanner is enabled for Transact-SQL.
            </summary>
            <value><c>true</c> if the scanner is enabled for Transact-SQL; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Babel.LineScanner.BatchSeparator">
            <summary>
            Gets or sets the string that is used to separate a single script into multiple batches.
            </summary>
            <value>The string that is used to separate a single script into multiple batches. The default is GO.</value>
        </member>
        <member name="M:Babel.LineScanner.ScanTokenAndProvideInfoAboutIt(Babel.TokenInfo,System.Int32@)">
            <summary>
            Parses the next language token from the current line and returns information about it.
            </summary>
            <param name="tokenInfo">The <see cref="T:Babel.TokenInfo"/> object to be filled in.</param>
            <param name="state">The current state of the scanner.</param>
            <returns><c>true</c> if a token was parsed from the current line and information was returned; otherwise, <c>false</c>, which 
            indicates that there are no more tokens on the current line.</returns>
        </member>
        <member name="M:Babel.LineScanner.SetSource(System.String,System.Int32)">
            <summary>
            Sets the line to be parsed.
            </summary>
            <param name="source">The line to be tokenized.</param>
            <param name="offset">The character offset into the line to start parsing. You must pay attention to this value.</param>
            <remarks>Language service scanning is always done on a line-by-line basis. This method is called to set the line to be parsed by subsequent 
            calls to the <see cref="M:Babel.LineScanner.ScanTokenAndProvideInfoAboutIt"/> method.</remarks>
        </member>
        <member name="M:Babel.LineScanner.DefineToken(System.Int32,Babel.TokenType,Babel.TokenTriggers)">
            <summary>
            Creates a token definition and adds it to the array of token definitions.
            </summary>
            <param name="token">The token to define.</param>
            <param name="type">The <see cref="T:Babel.TokenType"/> value that specifies the token type.</param>
            <param name="trigger">A <see cref="T:Babel.TokenTriggers"/> value that specifies the trigger to set for the token.</param>
        </member>
        <member name="M:Babel.LineScanner.PopulateDefiniton(Babel.TokenInfo)">
            <summary>
            Fills the <see cref="T:Babel.TokenInfo"/> object with the token definition.
            </summary>
            <param name="tokenInfo">The <see cref="T:Babel.TokenInfo"/> object to be filled in.</param>
        </member>
        <member name="T:Babel.MethodHelpText">
            <summary>
            Provides information about a method to support IntelliSense features.
            </summary>
        </member>
        <member name="P:Babel.MethodHelpText.Name">
            <summary>
            Gets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:Babel.MethodHelpText.Description">
            <summary>
            Gets the method description.
            </summary>
            <value>The method description.</value>
        </member>
        <member name="P:Babel.MethodHelpText.Type">
            <summary>
            Gets the type of the method.
            </summary>
            <value>A string that represents the type of the method.</value>
        </member>
        <member name="P:Babel.MethodHelpText.ShouldShowParentheses">
            <summary>
            Gets a value that indicates whether to show parentheses.
            </summary>
            <value><c>true</c> if parentheses should be shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Babel.MethodHelpText.IsVarArg">
            <summary>
            Gets a value that indicates whether the method is a variable argument.
            </summary>
            <value><c>true</c> if the method is a variable argument; otherwise, <c>false</c>. </value>
        </member>
        <member name="P:Babel.MethodHelpText.Parameters">
            <summary>
            Gets the list of parameters of the method.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IList`1"/> object that contains all the parameters of the method.</value>
        </member>
        <member name="M:Babel.MethodHelpText.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Babel.MethodHelpText"/> class.
            </summary>
            <param name="name">The name of the method.</param>
            <param name="description">The description of the method.</param>
            <param name="type">A string that represents the type of the method.</param>
            <param name="shouldShowParentheses"><c>true</c> to show parentheses; otherwise, <c>false</c>.</param>
            <param name="isVarArg"><c>true</c> to indicate that the method is a variable argument; otherwise, <c>false</c></param>
        </member>
        <member name="M:Babel.MethodHelpText.ToXml">
            <summary>
            Writes the method help text as an XML string. 
            </summary>
            <returns>An XML string that represents the method help text.</returns>
        </member>
        <member name="T:Babel.Parameter">
            <summary>
            Provides information about a parameter to support IntelliSense features.
            </summary>
        </member>
        <member name="P:Babel.Parameter.Name">
            <summary>
            The name of the parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="P:Babel.Parameter.Description">
            <summary>
            The description of the parameter.
            </summary>
            <value>The description of the parameter.</value>
        </member>
        <member name="P:Babel.Parameter.Display">
            <summary>
            Gets the complete parameter declaration.
            </summary>
            <value>A string with the complete parameter declaration.</value>
        </member>
        <member name="M:Babel.Parameter.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Babel.Parameter"/> class.
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="description">The parameter description.</param>
            <param name="display">The complete parameter declaration.</param>
        </member>
        <member name="T:Babel.MethodNameAndParamLocations">
            <summary>
            Provides the name and parameter information about a method.
            </summary>
        </member>
        <member name="P:Babel.MethodNameAndParamLocations.Name">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:Babel.MethodNameAndParamLocations.NameStartLocation">
            <summary>
            Gets or sets the start location of the method name.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> object that represents the 
            start location.</value>
        </member>
        <member name="P:Babel.MethodNameAndParamLocations.NameEndLocation">
            <summary>
            Gets or sets the end location of the method name.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> object that represents the 
            end location.</value>
        </member>
        <member name="P:Babel.MethodNameAndParamLocations.ParamStartLocation">
            <summary>
            Gets or sets the start location of the parameter.
            </summary>
            <value>A value of nullable <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> type that represents the 
            start location </value>
        </member>
        <member name="P:Babel.MethodNameAndParamLocations.ParamSeperatorLocations">
            <summary>
            Gets or sets the a list that contains the locations of the parameter separators. Parameter separators are characters that separate 
            parameters in a list (for example, a comma).
            </summary>
            <value>A <see cref="T:System.Collections.Generic.List`1"/> object that contains the locations of the parameter separators.</value>
        </member>
        <member name="P:Babel.MethodNameAndParamLocations.ParamEndLocation">
            <summary>
            Gets or sets the end location of the parameter.
            </summary>
            <value>A value of nullable <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> type that represents the end location 
            of the parameter.</value>
        </member>
        <member name="M:Babel.MethodNameAndParamLocations.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Babel.MethodNameAndParamLocations"/> class by using the specified method name.
            </summary>
            <param name="name">The name of the method.</param>
        </member>
        <member name="M:Babel.MethodNameAndParamLocations.ToXml">
            <summary>
            Writes an XML string that contains the method name and parameter locations.
            </summary>
            <returns>An XML string that contains the method name and parameter locations.</returns>
        </member>
        <member name="T:Babel.Region">
            <summary>
            Provides the location of a region block.
            </summary>
        </member>
        <member name="P:Babel.Region.StartLocation">
            <summary>
            Gets the start location for the region block.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> object that represents the 
            start location.</value>
        </member>
        <member name="P:Babel.Region.EndLocation">
            <summary>
            Gets the end location for the region block.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> object that represents the 
            end location.</value>
        </member>
        <member name="M:Babel.Region.#ctor(Microsoft.SqlServer.Management.SqlParser.Parser.Location,Microsoft.SqlServer.Management.SqlParser.Parser.Location)">
            <summary>
            Inititializes a new instance of the <see cref="T:Babel.Region"/> class.
            </summary>
            <param name="startLocation">A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> object that represents the 
            start location.</param>
            <param name="endLocation">A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location"/> object that represents the 
            end location.</param>
        </member>
        <member name="T:Babel.TokenInfo">
            <summary>
            Provides information about a particular token that the Transact-SQL language parser encountered.
            </summary>
        </member>
        <member name="F:Babel.TokenInfo.Type">
            <summary>
            Determines the type of the token.
            </summary>
            <value>A <see cref="T:Babel.TokenType"/> value.</value>
        </member>
        <member name="F:Babel.TokenInfo.EndIndex">
            <summary>
            Determines the index of the last character of the token.
            </summary>
            <value>An integer specifying the last character of the token.</value>
        </member>
        <member name="F:Babel.TokenInfo.StartIndex">
            <summary>
            Determines the index of the first character of the token.
            </summary>
            <value>An integer specifying the first character of the token.</value>
        </member>
        <member name="F:Babel.TokenInfo.Token">
            <summary>
            Determines the token ID for the token.
            </summary>
            <value>An integer specifying the token ID.</value>
        </member>
        <member name="F:Babel.TokenInfo.Trigger">
            <summary>
            Determines the various triggers that can be set for the token.
            </summary>
            <value>A combination of flags from the <see cref="T:Babel.TokenTriggers"/> enumeration.</value>
        </member>
        <member name="M:Babel.TokenInfo.ToString">
            <summary>
            Returns a string representation of the token information object.
            </summary>
            <returns>A string representation of the token information object.</returns>
        </member>
        <member name="T:Babel.TokenTriggers">
            <summary>
            Specifies a set of triggers that can be fired from the <see cref="T:Babel.LineScanner"/> class.
            </summary>
            <remarks>Triggers provide a way for the scanner to signal the caller about certain language elements that might be of 
            interest to IntelliSense support.</remarks>
        </member>
        <member name="F:Babel.TokenTriggers.None">
            <summary>
            Used when no triggers are set. This is the default.
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.MemberSelect">
            <summary>
            A character that indicates that the start of a member selection has been parsed.
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.MatchBraces">
            <summary>
            The opening or closing part of a language pair has been parsed.
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.ParameterStart">
            <summary>
            A character that marks the start of a parameter list has been parsed. For example, this could be an open parenthesis, "(". 
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.ParameterNext">
            <summary>
            A character that separates parameters in a list has been parsed. For example, this could be a comma, ",". 
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.ParameterEnd">
            <summary>
            A character that marks the end of a parameter list has been parsed. For example, this could be a close parenthesis, ")".
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.Parameter">
            <summary>
            A parameter in the parameter list of a method has been parsed.
            </summary>
        </member>
        <member name="F:Babel.TokenTriggers.MethodTip">
            <summary>
            This is a mask for the flags used to govern the IntelliSense Method Tip operation. This mask is used to isolate the values Parameter, 
            ParameterStart, ParameterNext, and ParameterEnd.
            </summary>
        </member>
        <member name="T:Babel.TokenType">
            <summary>
            Specifies the token types that can be identified and returned by the language service scanner.
            </summary>
        </member>
        <member name="F:Babel.TokenType.Text">
            <summary>
            General text. This is any text not identified as a specified token type.
            </summary>            
        </member>
        <member name="F:Babel.TokenType.Keyword">
            <summary>
            A language keyword. This is an identifier that is reserved by the language. For example, CREATE, WITH, TABLE, and so on.
            </summary>
        </member>
        <member name="F:Babel.TokenType.Comment">
            <summary>
            A comment. A comment is bounded by /* and */, or is preceded by --.
            </summary>
        </member>
        <member name="F:Babel.TokenType.Identifier">
            <summary>
            An identifier or name. For example, the name of a variable.
            </summary>
        </member>
        <member name="F:Babel.TokenType.Number">
            <summary>
            A numeric literal.
            </summary>
        </member>
        <member name="F:Babel.TokenType.SqlStoredProcedure">
            <summary>
            A stored procedure.
            </summary>
        </member>
        <member name="F:Babel.TokenType.SqlSystemTable">
            <summary>
            A system table.
            </summary>
        </member>
        <member name="F:Babel.TokenType.SqlSystemFunction">
            <summary>
            A system function.
            </summary>
        </member>
        <member name="F:Babel.TokenType.SqlOperator">
            <summary>
            An operator. For example, +, =, LIKE, and so on.
            </summary>
        </member>
        <member name="F:Babel.TokenType.SqlString">
            <summary>
            A Transact-SQL string.
            </summary>
        </member>
        <member name="F:Babel.TokenType.SqlCmdCommand">
            <summary>
            A SQL Server command.
            </summary>
        </member>
        <member name="F:Babel.TokenType.Error">
            <summary>
            This is typically used for any token that the parser does not recognize, and should be considered an error in the code 
            that is being parsed.
            </summary>
        </member>
        <member name="F:Babel.TokenType.Delimiter">
            <summary>
            A delimiter. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ReusableStatementsCollection.AddReusableStatements(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Adds reusable statements to the statement stack.
            </summary>
            <param name="stmtLevelObj"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseContext">
            <summary>
            Represents parse context which includes error handler and token manager.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseContext.IsStatementReusable(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Checks if statement is out of dirty region. Check is made using old position.
            </summary>
            <param name="sqlStatement"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseContext.ParsePhaseContext.IsStatementReusable(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Checks if statement is out of dirty region. Check is made using old position.
            </summary>
            <param name="sqlStatement"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseContext.ParsePhaseContext.RegisterReduction">
            <summary>
            Registers parser reduction.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseNode">
            <summary>
            Represents a partial parse tree.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseNode.value">
            <summary>
            semantic value associated w/ this node in the parse tree
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseNode.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Write an Xml representation of this node and it's children to a stream
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.ParseNode.Xml">
            <summary>
            return an xml representation of the node
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.VersionedParserBase.ExpectKeyword(Microsoft.SqlServer.Management.SqlParser.Common.StringToken,Babel.ParserGenerator.LexLocation)">
            <summary>
            Checks whether the parse node value matches the given keyword. If it
            doesn't match, the method reports syntax error at the given location.
            </summary>
            <param name="keyword">The keyword to check for.</param>
            <param name="lexLocation">Token lexical location which is used in the error message if the check failed.</param>
            <return>True if the value matches the keyword; otherwise false.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.VersionedParserBase.ExpectKeywords(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.Common.StringToken},Babel.ParserGenerator.LexLocation)">
            <summary>
            Checks whether the parse node value matches any given keyword. If it
            doesn't match, the method reports syntax error at the given location.
            </summary>
            <param name="keywords">The keywords to check for.</param>
            <param name="lexLocation">Token lexical location which is used in the error message if the check failed.</param>
            <return>True if the value matches the keyword; otherwise false.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.VersionedParserBase.IsMaxAbsoluteIntegerValue(System.String)">
            <summary>
            Checks whether a value is a valid absolute value for an integer object.
            </summary>
            <param name="value">Value in string format to check against. Value should always be positive.</param>
            <return>True if value is less than or equal to 2147483648 which is the maximum absolute value of integer. 
            False otherwise.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.VersionedParserBase.SyntaxError(Babel.ParserGenerator.LexLocation)">
            <summary>
            Reports syntax error near token identified by its lexical location.
            </summary>
            <param name="lexLocation">Token lexical location to be used in the error message.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Internals.VersionedParserBase.SyntaxError(System.String,Babel.ParserGenerator.LexLocation)">
            <summary>
            Reports syntax error near token identified by its string value and 
            lexical location.
            </summary>
            <param name="tokenString">String value of the token to report the syntax error near.</param>
            <param name="lexLocation">Token lexical location to be used in the error message.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.StatementEventType">
            <summary>
            Describes the event type reportedby the parser.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.StatementEventType.NotReusable">
            <summary>
            Statement was not reusable. 
            That is one of the following:
            - tokens used to parse this statement were dirty
            - statement begin or end state was not defined
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.StatementEventType.Reused">
            <summary>
            Statement has been reused.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.StatementEventType.RejectedByPosition">
            <summary>
            Statement has not been reused because of position mismatch.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.StatementEventType.RejectedByState">
            <summary>
            Statement has not been reused because of state mismatch.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.IParserTestSink">
            <summary>
            Interface of parser event handler. Enables test code to gather detailed information about parsing.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.IParserTestSink.StatementEvent(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,Microsoft.SqlServer.Management.SqlParser.Parser.StatementEventType)">
            <summary>
            Called when statement is processed.
            </summary>
            <param name="sqlStatement"></param>
            <param name="eventType"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Error">
            <summary>
            Represents a Transact-SQL parsing error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.Message">
            <summary>
            Gets the error message text.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.Start">
            <summary>
            Gets the start location of the Transact-SQL text that is causing the error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.End">
            <summary>
            Gets the end location of the Transact-SQL text that is causing the error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.IsWarning">
            <summary>
            Gets a value that indicates whether the parsing error is a warning.
            </summary>
            <value>true if the parsing error is a warning; otherwise false.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.Type">
            <summary>
            Gets the ErrorType that indicates whether the error is a syntax, parsing, or binding error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.ErrorFlags">
            <summary>
            Gets the ErrorFlags that indicates more detailed type of the error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.LexLocation">
            <summary>
            Gets the lexical location associated with the error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Error.ReportingObject">
            <summary>
            Gets the code object on which this error was reported. If the error was not reported on a code object returns <c>null</c>.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Error.CompareTo(Microsoft.SqlServer.Management.SqlParser.Parser.Error)">
            <summary>
            Compares the location of this instance to the location of the specified Error object and 
            returns an integer that indicates their relative position to each other.
            </summary>
            <param name="error">The Error object to compare against.</param>
            <return>An integer that indicates the relative position of the objects being compared.
            0 indicates that both objects have the same location. A negative number indicates that this Error
            precedes the specified Error object. A positive number indicates that this Error
            follows the specified Error object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Error.Equals(Microsoft.SqlServer.Management.SqlParser.Parser.Error)">
            <summary>
            Compares the location of this instance to the location of the specified Error object.
            </summary>
            <param name="error">The Error object to compare against.</param>
            <return>true if the locations on both objects match; otherwise false.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorType">
            <summary>
            Specifies the different error types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorType.SyntaxError">
            <summary>
            A syntax error.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorType.ParseError">
            <summary>
            A parse error.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorType.BindError">
            <summary>
            A bind error.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorFlags">
            <summary>
            Specified the error subtypes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorFlags.None">
            <summary>
            No error flags.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorFlags.UnresolvedReference">
            <summary>
            Unsresolved reference.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorFlags.UnresolvedDatabaseObjectReference">
            <summary>
             Unsresolved database object reference error flag. Implies UnresolvedReference.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorFlags.UnsupportedTSql">
            <summary>
            Unsupported T-SQL Language.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.ErrorRecord">
            <summary>
            represents an error in the parsed TSQL
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence">
            <summary>
            Provides methods for escaping and unescaping strings based on the Transact-SQL language.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.Escape(System.String)">
            <summary>
            Returns the specified string with any necessary escape characters added.
            </summary>
            <param name="value">The string to escape.</param>
            <return>The specified string with escape characters added.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.Unescape(System.String)">
            <summary>
            Removes any escape characters from the specified string.
            </summary>
            <param name="value">The string to unescape.</param>
            <return>The specified string with any escape characters removed.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.RequiresEscaping(System.String)">
            <summary>
            Tests a string to see if it requires escaping to be a valid SQL token.
            </summary>
            <param name="value">The string to test.</param>
            <return>true if the string requires escaping; otherwise false.</return>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.DoubleQuotedEscapeSequence">
            <summary>
            Represents an escape sequence that uses double quotes as delimiters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.BracketedEscapeSequence">
            <summary>
            Represents an escape sequence that uses square brackets as delimiters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.SingleQuotedEscapeSequence">
            <summary>
            Represents an escape sequence that uses single quotes as delimiters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.DoubleQuotedSkipOneEscapeSequence">
            <summary>
            Escape sequence using double quote character as the delimiter characterss and skip the first character
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.SingleQuotedSkipOneEscapeSequence">
            <summary>
            Escape sequence using single quote characters as the delimiter characters and skip first character
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.UnescapeIdentifier(System.String)">
            <summary>
            Tests the specified string against each escape sequence and returns the unescaped string.
            </summary>
            <param name="value">The string to test.</param>
            <return>The specified string with the escape characters removed.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.UnescapeLiteral(System.String,System.Boolean@)">
            <summary>
            Tests the specified string literal against each escape sequence and returns the unescaped string literal.
            </summary>
            <param name="value">The string literal to test.</param>
            <param name="isUnicode">true if the string literal is a Unicode string; otherwise false.</param>
            <return>The specified string with the escape characters removed.</return>
            <exception cref="T:System.ArgumentNullException">The specified string is a null reference.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.IdentifyEscapeSequence(System.String)">
            <summary>
            Identifies the escape sequence used in the specified string.
            </summary>
            <param name="value">The string to test.</param>
            <return>The escape sequence that is used, or a null reference if the string is not escaped.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.EscapeSequence.IdentifyLiteralEscapeSequence(System.String)">
            <summary>
            tests the supplied string literal and returns the escape sequence used or 
            null if the sequence is not escaped
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Location">
            <summary>
            Represents the source location.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.Location.LineNumber">
            <summary>
            Gets the line number.
            </summary>
            <return>The line number.</return>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.Location.ColumnNumber">
            <summary>
            Gets the column number.
            </summary>
            <return>The column number.</return>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.Location.Offset">
            <summary>
            Gets the offset.
            </summary>
            <return>The offset.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Location.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the Location class with the specified line number, column number and offset.
            </summary>
            <param name="lineNumber">The line number.</param>
            <param name="columnNumber">The column number.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Location.ToString">
            <summary>
            Returns a string representation of this Location object.
            </summary>
            <return>A string representation of this Location object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Location.CompareTo(Microsoft.SqlServer.Management.SqlParser.Parser.Location)">
            <summary>
            Compares this Location object with the specified Location object and returns an integer that indicates 
            their relative positions to one another.
            </summary>
            <param name="other">The Location object to compare against.</param>
            <return>An integer that indicates the relative order of the objects being compared.
            0 indicates that both objects have the same location. A negative number
            indicates that this instance precedes the specified Location object and a positive number indicates that
            this instance follows the specified Location object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.PairMatch">
            <summary>
            Represents a matched token pair.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PairMatch.StartToken">
            <summary>
            Gets the pair start token.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PairMatch.EndToken">
            <summary>
            Gets the pair end token.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PairMatch.IsStartEnd">
            <summary>
            Gets a value that indicates whether the start token is matched with the 
            end token.
            </summary>
            <return>true if start token is matched with the end token; otherwise false.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.PairMatch.ToString">
            <summary>
            Returns the string representation of this PairMatch object.
            </summary>
            <return>String that represents this PairMatch object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions">
            <summary>
            Represents the options that affect the SQL parser operation.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.#ctor">
            <summary>
            Initializes a new instance of the ParseOptions class with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParseOptions class with the specified batch separator setting.
            </summary>
            <param name="batchSeparator">The string used to separate a single script into multiple batches.</param>
            <exception cref="T:System.ArgumentNullException">The batch separator setting is a null reference or an empty string.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ParseOptions class with the specified quoted identifier setting.
            </summary>
            <param name="isQuotedIdentifierSet">true to treat quoted strings as identifiers; otherwise false.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the ParseOptions class with the specified batch separator and quoted identifier settings.
            </summary>
            <param name="batchSeparator">The string used to separate a single script into multiple batches.</param>
            <param name="isQuotedIdentifierSet">true to treat quoted strings as identifiers; otherwise false.</param>
            <exception cref="T:System.ArgumentNullException">The batch separator setting is a null reference or an empty string.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.#ctor(System.String,System.Boolean,Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel)">
            <summary>
            Initializes a new instance of the ParseOptions class with the specified batch separator, quoted identifier setting,
            and database compatibility level.
            </summary>
            <param name="batchSeparator">The string used to separate a single script into multiple batches.</param>
            <param name="isQuotedIdentifierSet">true to treat quoted strings as identifiers; otherwise false.</param>
            <param name="compatibilityLevel">Specifies the database compatibility level.</param>
            <exception cref="T:System.ArgumentNullException">The batch separator setting is a null reference or an empty string.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.#ctor(System.String,System.Boolean,Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel,Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion)">
            <summary>
            Initializes a new instance of the ParseOptions class with the specified batch separator, quoted identifier setting,
            and database compatibility level.
            </summary>
            <param name="batchSeparator">The string used to separate a single script into multiple batches.</param>
            <param name="isQuotedIdentifierSet">true to treat quoted strings as identifiers; otherwise false.</param>
            <param name="compatibilityLevel">Specifies the database compatibility level.</param>
            <param name="transactSqlVersion">Specified the version of Transact-SQL use when parsing.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.BatchSeparator">
            <summary>
            Gets or sets the string used to separate a single script into multiple batches.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.CompatibilityLevel">
            <summary>
            Gets or sets a value that indicates the database compatibility level of the SQL parser.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.IsQuotedIdentifierSet">
            <summary>
            Gets or sets a value that indicates whether quoted strings are treated as identifiers or as strings.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.IsErrorRecoveryEnabled">
            <summary>
            Gets or sets a value that indicates whether error recovery is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.TransactSqlVersion">
            <summary>
            Get or sets the version of Transact-SQL which should be used to parse the sql.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions.Equals(Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Returns a value that indicates whether this instance is equal to the specified ParseOptions object.
            </summary>
            <param name="other">The ParseOptions object to compare against.</param>
            <return>true if this instance is equal to the specified ParseOptions object (the settings on both objects match); 
            otherwise, false.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Parser">
            <summary>
            Represents a SQL parser that parses a Transact-SQL statements and returns a SqlScript object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.Parse(System.String)">
            <summary>
            Parses the specified SQL string using default parser options.
            </summary>
            <param name="sql">The SQL string to parse.</param>
            <return>A ParseResult object that represents the parsed SQL string.</return>
            <exception cref="T:System.ArgumentNullException">The specified SQL string is a null reference.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.Parse(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Parses the specified SQL string using the specified parser options.
            </summary>
            <param name="sql">The SQL string to parse.</param>
            <param name="options">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the 
            SQL parser options.</param>
            <return>A ParseResult object that represents the parsed SQL string.</return>
            <exception cref="T:System.ArgumentNullException">The specified SQL string is a null reference.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.Parse(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions@)">
            <summary>
            Parses the specified SQL string using the specified parser options.
            </summary>
            <param name="sql">The SQL string to parse.</param>
            <param name="options">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the 
            SQL parser options.</param>
            <param name="resultOptions">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the 
            SQL parser options after parsing.</param>
            <return>A ParseResult object that represents the parsed SQL string.</return>
            <exception cref="T:System.ArgumentNullException">The specified SQL string is a null reference.</exception>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.IncrementalParse(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult)">
            <summary>
            Parses the specified SQL string using the specified parser options.
            If previous result of parsing is passed then it will be use as a base for incremental parsing.
            Only result of incremental parsing might be used as an argument for subsequent incremental parse.
            </summary>
            <param name="sql">The SQL string to parse.</param>
            <param name="prevResult">The result of previous incremental parsing.</param>
            <return>A ParseResult object that represents the parsed SQL string. 
            This result may be used for subsequent incremental parse.</return>
            <remarks>Previous parse result passed in prevResult is destroyed during incremental parsing.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.IncrementalParse(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Parses the specified SQL string using the specified parser options.
            If previous result of parsing is passed then it will be use as a base for incremental parsing.
            Only result of incremental parsing might be used as an argument for subsequent incremental parse.
            </summary>
            <param name="sql">The SQL string to parse.</param>
            <param name="prevResult">The result of previous incremental parsing.</param>
            <param name="options">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the 
            SQL parser options.</param>
            <return>A ParseResult object that represents the parsed SQL string. 
            This result may be used for subsequent incremental parse.</return>
            <remarks>Previous parse result passed in prevResult is destroyed during incremental parsing.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.IncrementalParse(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions@)">
            <summary>
            Parses the specified SQL string using the specified parser options.
            If previous result of parsing is passed then it will be use as a base for incremental parsing.
            Only result of incremental parsing might be used as an argument for subsequent incremental parse.
            </summary>
            <param name="sql">The SQL string to parse.</param>
            <param name="prevResult">The result of previous incremental parsing.</param>
            <param name="options">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the 
            SQL parser options.</param>
            <param name="resultOptions">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the 
            SQL parser options after parsing.</param>
            <return>A ParseResult object that represents the parsed SQL string. 
            This result may be used for subsequent incremental parse.</return>
            <remarks>Previous parse result passed in prevResult is destroyed during incremental parsing.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Parser.ScanSource(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Scans the given sql source and returns the token manager.
            </summary>
            <param name="sql"></param>
            <param name="options"></param>
            <returns></returns>
            <remarks>A workaround utility method for TSqlDom scripting in Dac project.</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult">
            <summary>
            Represents the parsing result.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult.BatchCount">
            <summary>
            Gets the number of batches in the supplied script.
            </summary>
            <value>The number of batches in the script.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult.Errors">
            <summary>
            Gets the parsing errors.
            </summary>
            <value>A collection that contains the parsing errors.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult.Script">
            <summary>
            Gets the SqlScript object for this parseResult.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult.GetTokenNumber(System.Int32,System.Int32)">
            <summary>
            Gets a token number.
            </summary>
            <param name="line">The line number.</param>
            <param name="col">The column number.</param>
            <return>The token number.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils">
            <summary>
            Provides helper methods to retrieve information from the parsing results.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils.RetrieveModuleDefinition(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Retrieves the module information from the Transact-SQL statement.
            </summary>
            <param name="sql">The Transact-SQL statement to parse.</param>
            <param name="parseOptions">Parse options.</param>
            <returns>Property set containing module information.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils.RetrieveStoredProcParameters(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult)">
            <summary>
            Retrieves the stored procedure parameters from the parse result.
            </summary>
            <param name="parseResult">The result from parsing the stored procedure.</param>
            <return>The collection of parameters associated with the parsed stored procedure.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils.RetrieveTriggerDefinition(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Retrieves the trigger information from the Transact-SQL statement.
            </summary>
            <param name="sql">The Transact-SQL statement to parse.</param>
            <param name="parseOptions">Parse options.</param>
            <returns>Property set containing view information.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils.RetrieveViewDefinition(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Retrieves the view information from the Transact-SQL statement.
            </summary>
            <param name="sql">The Transact-SQL statement to parse.</param>
            <param name="parseOptions">Parse options.</param>
            <returns>Property set containing view information.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils.GetExtendedQueryDefinitionText(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Returns the full definition text of the object for given first code object that belongs to the object definition.
            The script is assumed to have only single batch and single statement. The query definition will contain all non-significant tokens surrounding
            the queryDefinition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.ParseUtils.GetExtendedBodyDefinitionText(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Returns the full definition text of the object for given first code object that belongs to the object definition.
            The script is assumed to have only single batch and single statement. The definition then extends up to the end of the input.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys">
            <summary>
            Represents the possible keys appearing in property set returned by retrieve definition methods. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.BodyDefinition">
            <summary>
            Name of the property that specifies object body definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.DatabaseName">
            <summary>
            Name of the property that specifies the database name part of an object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.DefaultValue">
            <summary>
            Name of the property that specifies the default value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.HasColumnSpecification">
            <summary>
            Name of the property that indicates whether the view has column specification.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.HasCheckOption">
            <summary>
            Name of the property that indicates whether the view has check option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.ModuleType">
            <summary>
            Name of the property that specifies the type of the module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.Name">
            <summary>
            Name of the property that specifies the name of an object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.SchemaName">
            <summary>
            Name of the property that specifies the schema name part of an object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.Parameters">
            <summary>
            Name of the property that represents collection of parameters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.QueryDefinition">
            <summary>
            Name of the property that specifies view query definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Parser.PropertyKeys.TableVariableName">
            <summary>
            Name of the property that specifies the table variable name part of a table valued function.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Scanner">
            <summary>
            Scans Transact-SQL searching for individual units of code or tokens.
            </summary>
            <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.Parser"/>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Scanner.#ctor(Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Initializes a new instance of the Scanner class using the specified parser options.
            </summary>
            <param name="options">The T:Microsoft.SqlServer.Management.SqlParser.ParseOptions object that contains the SQL parser operation options.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Scanner.SetSource(System.String,System.Int32)">
            <summary>
            Sets the source text to be scanned.
            </summary>
            <param name="source">The text to be scanned.</param>
            <param name="offset">The offset in the source text at which to begin scanning.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Scanner.GetNext(System.Int32@,System.Int32@,System.Int32@,System.Boolean@,System.Boolean@)">
            <summary>
            Returns the next token, internal Lexer state, start position, and end position.
            </summary>
            <param name="state">The state of the Lexer.</param>
            <param name="start">The start position of the token.</param>
            <param name="end">The end position of the token.</param>
            <param name="isPairMatch">true if this is a matched token pair; otherwise false.</param>
            <param name="isExecAutoParamHelp">true if parameter help is requested by the token; otherwise false.</param>
            <return>The next token.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.Token">
            <summary>
            Represents a token.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.Text">
            <summary>
            Gets the token text.
            </summary>
            <value>The text representation of the token.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.Id">
            <summary>
            Gets the token Id.
            </summary>
            <value>The token Id that corresponds to the Tokens enumeration.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.Type">
            <summary>
            Gets the type of the token.
            </summary>
            <value>A string that represents the type of the token.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.StartLocation">
            <summary>
            Gets the start location of the token.
            </summary>
            <value>The Location object that contains the start location of the token.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.EndLocation">
            <summary>
            Gets the end location of the token.
            </summary>
            <value>The Location object that contains the end location of the token.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.IsSignificant">
            <summary>
            Gets a value indicating whether the token is a significant token.  White space and comments are examples of non-significant tokens.
            </summary>
            <value>true if the token is a significant token; otherwise false.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Token.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the token out to the specified T:System.Xml.XmlWriter.
            </summary>
            <param name="writer">The T:System.Xml.XmlWriter with which to write.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.Token.Xml">
            <summary>
            Gets the XML representation of the token.
            </summary>
            <value>The XML representation of the token.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.Token.ToString">
            <summary>
            Returns a string represenation of the token.
            </summary>
            <return>The string representation of the token.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager">
            <summary>
            Provides data about tokens in a string
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetOriginalId(System.Int32)">
            <summary>
            Gets token id at given index. If the token has been killed, it returns its
            original token id.
            </summary>
            <param name="tokenNumber">Token list index of the token to get id for.</param>
            <returns>Id of the token at the given index.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetText(System.Int32)">
            <summary>
            Unsafe, for multi-part tokens
            </summary>
            <param name="tokenNumber"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.Count">
            <summary>
            returns the number of total number of tokens  
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.IsTokenComment(System.Int32)">
            <summary>
            returns true if tokenId is a single line or multiline comment 
            </summary>
            <param name="tokenId"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.FindToken(System.Int32,System.Int32)">
            <summary>
            returns the nearest token to the given location
            </summary>
            <param name="line"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.RetrieveStatementName(Babel.ParserGenerator.LexLocation)">
            <summary>
            Retrieves and returns statement name using the tokens in the range
            specified.
            </summary>
            <param name="lexLocation">Statement lexical location.</param>
            <returns>A string that represents the name of the statement.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetCaretLexLocation(System.Int32,System.Int32)">
            <summary>
            Creates and returns a LexLocation object for the caret location specified
            by a line and column numbers.
            </summary>
            <param name="line">Caret line number.</param>
            <param name="col">Caret column number</param>
            <returns>LexLocation object that specifies where the caret is.</returns>
            <remarks>
            There are three possible type of locations returned by this function:
            1. Precise location - locations of width > 0 (don't have alt locations).
            2. Range location - locations of width = 0 which represent a range of
               insignificant tokens.
            3. Null location - out of range locations or comments.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetAltCaretLexLocation(Babel.ParserGenerator.LexLocation)">
            <summary>
            Returns an alternative caret location for a given caret location.
            This only applies to range locations (i.e. location width is 0).
            </summary>
            <param name="caretLocation">Caret location to retrieve it's alt location.</param>
            <returns>LexLocation object that represents the alt location, or null.</returns>
            <remarks>Specified caret location must be of width 0.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetCursorLocation(System.Int32,System.Int32)">
            <summary>
            Creates and returns a LexLocation object for the cursor location specified
            by line and column number.
            </summary>
            <param name="line">Cursor line number.</param>
            <param name="col">Cursor column number</param>
            <returns>LexLocation object that specifies where the cursor is.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetNextSignificantTokenIndex(System.Int32)">
            <summary>
            Gets the index of the first significant token after the given token index.
            </summary>
            <param name="tokenIndex">Token index to start scanning after.</param>
            <returns>Token index if a significant token is found; otherwise -1.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.GetPreviousSignificantTokenIndex(System.Int32)">
            <summary>
            Gets the index of the first significant token before the given token index.
            </summary>
            <param name="tokenIndex">Token index to start scanning before.</param>
            <returns>Token index if a significant token is found; otherwise -1.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.FindPairMatch(System.Int32,System.Int32)">
            <summary>
            Finds a PairMatch object for the token at the given line and column.
            </summary>
            <param name="line">Line number to find pair match at.</param>
            <param name="column">Column number find pair match at.</param>
            <returns>PairMatch object if a token pair is found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.FindPairEndToken(System.Int32,Microsoft.SqlServer.Management.SqlParser.Parser.TokenManager.PairTokenId)">
            <summary>
            Finds a token pair end token for a start token identified by its token
            index and using the start/end pair id provided.
            </summary>
            <param name="tokenNumber">Pair start token index.</param>
            <param name="pairId">Pair start/end token id's.</param>
            <returns>Index of the pair end token if found; otherwise -1.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.#ctor(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx,Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular})">
            <summary>
            Constructs a new binding context object with the specified server object 
            and sets the default schema of the connected database to the specified
            schema.
            </summary>
            <param name="baseBindingContext">Base BatchBindingContext instance that creates this binding context.</param>
            <param name="unnamedSchema">Module context database no-name resolution schema.</param>
            <param name="dmlTables">Dml tables collection.</param>
            <remarks>This overload is called by ModuleBindingContext.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.#ctor(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx)">
            <summary>
            Constructs a new binding context object with the specified server object 
            and sets the default schema of the connected database to the specified
            schema.
            </summary>
            <param name="baseBindingContext">Base BatchBindingContext instance that creates this binding context.</param>
            <param name="unnamedSchema">Module context database no-name resolution schema.</param>
            <remarks>This overload is called by ModuleBindingContext.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.#ctor(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx)">
            <summary>
            Creates and initializes a new instance of BatchBindingContext which shares
            the same lookup tables as the provided base BatchBindingContext object and
            with the specified database as the default database.
            </summary>
            <param name="baseBindingContext"></param>
            <param name="connectedDatabase"></param>
            <remarks>This overload is called by private class SwitchDatabaseBindingContext only.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.#ctor(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext)">
            <summary>
            Copy constructor of BatchBindingContext.
            </summary>
            <param name="baseBindingContext"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.Root">
            <summary>
            Gets the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext"/> of the current object. This 
            always returns a batch-level binding contexts. This would be the object 
            itself if called on a batch-level binding context, but will be different 
            if called on module-level binding context.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.IsRoot">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value that indicates whether the current object
            is a root (batch-level) binding context.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.ConnectedDatabase">
            <summary>
            Gets the default context database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.ConnectedDatabaseName">
            <summary>
            Gets the name of the default context database.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.GetOrCreateModuleBindingContext(Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx,Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext"/> with the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx"/> object as the no-name resolution schema. This method
            might also return the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext"/> if the specified
            schema matches its own, and if the local symbol table is empty.
            </summary>
            <param name="schema">Module default schema.</param>
            <param name="dmlTables">Special DML tables visible inside the module.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.GetServer">
            <summary>
            Returns the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindTableOrView(System.String,System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            This method query the database for a table or view that matches the given
            3-part name.
            </summary>
            <param name="databaseName">Database name, if null connected database is assumed.</param>
            <param name="schemaName">Schema name, if null no-schema resolving rules will be applied.</param>
            <param name="name">Table or view name to be found.</param>
            <param name="lexicalScope">Lexical scope of the instruction to find the table at.</param>
            <returns>Bind info object for the table or view if found, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindTempTable(System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns a database temporary table by name and at the specified 
            lexical scope.
            </summary>
            <param name="name">Name of the temporary table to find.</param>
            <param name="lexicalScope">Temporary table lookup lexical scope.</param>
            <returns>An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> if found; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindTableValuedFunction(System.String,System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns table-valued function given its database name, schema name and name.
            </summary>
            <param name="databaseName">Database name, if null connected database is assumed.</param>
            <param name="schemaName">Schema name, if null no-schema resolving rules will be applied.</param>
            <param name="name">Name of the table-valued function to be found.</param>
            <param name="lexicalScope">Lexical scope of the instruction to find the table at.</param>
            <returns>Bind info object for the specified table-valued function if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindBatchTableExpression(System.String,System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns a batch table expression for the given database, schema 
            and table names. A batch table expressions is one of the following:
                1. Tables
                2. Views
                3. TVFs
                4. CTEs
            </summary>
            <param name="databaseName">Database name, if null connected database is assumed.</param>
            <param name="schemaName">Schema name, if null no-schema resolving rules will be applied.</param>
            <param name="name">Name of the table-valued function to be found.</param>
            <param name="lexicalScope">Lexical scope of the instruction to find the table at.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindScalarValuedFunction(System.String,System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns scalar-valued function given its name, schema name and database name.
            </summary>
            <param name="databaseName">Database name, if null connected database is assumed.</param>
            <param name="schemaName">Schema name, if null no-schema resolving rules will be applied.</param>
            <param name="name">Name of the scalar-valued function to be found.</param>
            <param name="lexicalScope">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies the lexical scope of the ref statement.</param>
            <returns>Bind info object for the specified scalar-valued function if found; othrwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindUserDefinedAggregate(System.String,System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns user-defined aggregate specified by optional database and 
            schema names and its name.
            </summary>
            <param name="databaseName">Database name, if null connected database is assumed.</param>
            <param name="schemaName">Schema name, if null no-schema resolving rules will be applied.</param>
            <param name="name">Name of the module to be found.</param>
            <param name="lexicalScope">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies the lexical scope of the ref statement.</param>
            <returns>Bind info object for the specified aggregate if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindModule(System.String,System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns callable module specified by optional database and 
            schema names and its name.
            </summary>
            <param name="databaseName">Database name, if null connected database is assumed.</param>
            <param name="schemaName">Schema name, if null no-schema resolving rules will be applied.</param>
            <param name="name">Name of the module to be found.</param>
            <param name="lexicalScope">A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies the lexical scope of the ref statement.</param>
            <returns>Bind info object for the specified module if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindUserDefinedType(System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns any user-defined data type specified by its name and the
            name of the schema it belongs to.
            </summary>
            <param name="schemaName">Data type schema name.</param>
            <param name="typeName">Data type name.</param>
            <param name="lexicalScope">A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies 
            the lexical scope of the ref statement.</param>
            <returns>IUserDefinedType data type object if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindSchema(System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns schema given database and schema names
            </summary>
            <param name="databaseName">Optional database name.</param>
            <param name="schemaName">Name of the schema to find.</param>
            <param name="lexicalScope">A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies
            the lexical scope of the ref statement.</param>
            <returns>Schema object if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.FindDatabase(System.String)">
            <summary>
            Finds and returns database object given its name.
            </summary>
            <param name="databaseName">Name of the database to find.</param>
            <returns>Database object if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.GetCDASchema(System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Returns a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx"/> object for a given schema name and at the
            specified lexical location, which can be used to execute CREATE, DROP or
            ALTER.
            </summary>
            <param name="schemaName">Name of the schema to get.</param>
            <param name="lexicalScope">Lexical scope to retrieve the schema at.</param>
            <returns>A single schema object that might be the empty schema if a schema 
            with the specified name could not be found.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.GetCDASchema(System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Returns a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx"/> object for a given schema name and at the
            specified lexical location, which can be used to execute CREATE, DROP or
            ALTER.
            </summary>
            <param name="databaseName">Name of the database to get.</param>
            <param name="schemaName">Name of the schema to get.</param>
            <param name="lexicalScope">Lexical scope to retrieve the schema at.</param>
            <returns>A single schema object that might be the empty schema if a schema 
            with the specified name could not be found. Null if database could not be found.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.CreateLocalBindingContext">
            <summary>
            Creates a new local binding context that uses this object as its
            batch binding context.
            </summary>
            <returns>The newly created local binding context object.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.DatabaseCollation">
            <summary>
            Gets CollationInfo object for the database currently in scope.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.ServerCollation">
            <summary>
            Gets CollationInfo object for the connected to server.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.GetSchema(System.String,System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            For a given database name and schema name, this function returns the
            matching schema object.
            </summary>
            <param name="databaseName">Name of the database to locate the schema in.</param>
            <param name="schemaName">Name of the schema to retrieve.</param>
            <param name="lexicalScope">A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies 
            the lexical scope of the ref statement.</param>
            <returns>Schema object if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext.IsNullOrSysSchema(System.String)">
            <summary>
            Checks if the given schema name is either null or 'sys'.
            </summary>
            <param name="schemaName">Schema name to be checked.</param>
            <returns>True if the given name is null or 'sys'; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindChecks">
            <summary>
            Binder check methods.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BinderProvider">
            <summary>
            Provides methods for creating <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IBinder"/> and
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IBuildBinder"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BinderProvider.CreateBinder(Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IBinder"/> object.
            </summary>
            <param name="metadataProvider">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider"/> object,
            which provides access to the server metadata.</param>
            <return>An object that implements the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IBinder"/> interface.</return>
            <exception cref="T:System.ArgumentNullException">The specified metadataProvider is a null reference.</exception>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindMode">
            <summary>
            Represents the binding mode.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.BindMode.Batch">
            <summary>
            Specifies batch mode binding.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.BindMode.Build">
            <summary>
            Specifies build mode binding.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils">
            <summary>
            Binder helper/common methods.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Column">
            <summary>
            Column utility methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.DataType">
            <summary>
            DataType utility methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Function">
            <summary>
            Function utility methods.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Index">
            <summary>
            Index utilityMethods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.ScalarDataType">
            <summary>
            ScalarDataType utility methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Scalar">
            <summary>
            Scalar Utility Methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.ScalarFunction">
            <summary>
            Scalar Function Utility Methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Module">
            <summary>
            Module utility methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Table">
            <summary>
            Helper methods for <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.Constraint">
            <summary>
            Constraint utility methods.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.DatabaseObject">
            <summary>
            Helper methods for <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.XmlDataType">
             <summary>
            Xml Data Type Utility Methods
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BindUtils.XmlDataType.IsValidMethodForXmlNode(Microsoft.SqlServer.Management.SqlParser.Metadata.IFunction)">
            <summary>
            Returns whether specified method is valid to be used on Xml Node data type scalar.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.BindWorkList.CodeObjectValidator.VisitList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Visits the SqlCodeObjects in the input list, in order
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Names">
            <summary>
            Lists names of common database objects.
            </summary>
            <remarks>
            Names listed here are case-sensitive. If the database collation is CI then
            casing doesn't really matter. However, databases with CS collations will
            not bind those objects unless they are in the correct casing.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Lengths">
            <summary>
            Constant length limitations on various sql constructs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Lengths.MaxIdentifierLength">
            <summary>
            Maximum length allowed for a t-sql identifier
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Intervals">
            <summary>
            Refresh time intervals.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Intervals.RefreshDatabaseList">
            <summary>
            Time interval in milliseconds before refreshing database list.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Y2kCatalogViews">
            <summary>
            Lists of system tables or functions in SQL Server 2000.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Y2kCatalogViews.Server">
            <summary>
            List of system tables or functions that are master database in 
            SQL Server 2000.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.Config.Y2kCatalogViews.Database">
            <summary>
            List of system tables or functions that are in every database in 
            SQL Server 2000.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.IsMaster">
            <summary>
            Gets a value that indicates whether this database is the system master database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.IsTempDb">
            <summary>
            Gets a value that indicates whether this database is the temp database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.DefaultSchema">
            <summary>
            Gets the database default schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.DboSchema">
            <summary>
            Gets the database 'dbo' schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.SysSchema">
            <summary>
            Gets the database 'sys' schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.UnnamedSchema">
            <summary>
            Gets an object the represents a set of collections that could be looked
            up if the schema name is omitted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.EmptySchema">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx"/> object which represents the place holder empty
            schema (all object collections are empty).
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.MakeUnnamedSchema(Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx)">
            <summary>
            Creates a un-named schema using the schema name specified as the default
            schema.
            </summary>
            <param name="defaultSchema">The default schema object to be used in creating the no-name resolution schema.</param>
            <returns>Schema object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.MakeTempTableSchema">
            <summary>
            Creates and returns a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx"/> object that holds temporary 
            tables only. All schema object collections but the table collection are 
            empty.
            </summary>
            <returns>A temporary table <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.IsY2KCatalogViewName(System.String)">
            <summary>
            Checks if a given name matches one of Y2K system catalog view names.
            </summary>
            <param name="name">Name to be checked.</param>
            <returns><c>true</c> if the name mathes a Y2K system catalog view name; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.HasMSReservedNamePrefix(System.String)">
            <summary>
            Checks if a given name has MS reserved name prefix.
            </summary>
            <param name="name">Name to be checked.</param>
            <returns><c>true</c> if the name has MS reserved name prefix; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseEx.FindDatabasePrincipal(System.String,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Finds and returns <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> for the specified name 
            and at the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/>.
            </summary>
            <param name="name">Name of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> to find.</param>
            <param name="lexicalScope">Lexical scope where the object is referenced.</param>
            <returns>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> if found; otherwise, <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryUtils">
            <summary>
            Represents a dependency discovery utility which analyzes the bound parse result and returns 
            its metadata dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryUtils.FindDependencies(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult)">
            <summary>
            Finds the dependencies for given bound parse result.
            </summary>
            <param name="parseResult">Parse result.</param>
            <return>The DependencyDiscoveryResult object that represents the result of the dependency discovery.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryUtils.FindDependencies(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Finds the dependencies for given bound code object.
            </summary>
            <param name="codeObj">Code object</param>
            <return>The DependencyDiscoveryResult object that represents the result of the dependency discovery.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryResult">
            <summary>
            Represents the result of dependency discovery.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryResult.References">
            <summary>
            Gets discovered dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryResult.Dependencies">
            <summary>
            Gets discovered dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyDiscoveryResult.Errors">
            <summary>
            Gets errors encountered during discovery.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency">
            <summary>
            Represents a single object dependency.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject,Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType)">
            <summary>
            Initializes an instance of ObjectDependency struct.
            </summary>
            <param name="targetObject">Target metadata object.</param>
            <param name="dependencyType">Dependency type.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency.TargetObject">
            <summary>
            Gets a target metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency.DependencyType">
            <summary>
            Gets a dependency type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>. </param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency.Equals(Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency)">
            <summary>
            Determines whether the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/> is equal to the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/> to compare with the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>. </param>
            <returns>true if the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/> is equal to the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.ObjectDependency"/>.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType">
            <summary>
            Represents a dependency type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType.Unknown">
            <summary>
            An unknown dependency. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType.ExecuteTime">
            <summary>
            An execute time only dependency.
            Target object must exist when source object is being executed time.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType.CreateTime">
            <summary>
            A create time only dependency.
            Target object must exist when source object is being create.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType.RegularPreventsDrop">
            <summary>
            A regular dependency, preventing dropping of the target object.
            Target object must exist all the time when the source object exists.
            Target object can be altered when this dependency exists.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.DependencyType.RegularPreventsAnyChange">
            <summary>
            A regular dependency, preventing any change of the target object.
            Target object must exist all the time when the source object exists.
            Target object cannot be altered when this dependency exists.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.DmlSpecificationBindingContext">
            <summary>
            Base class for all DML specification binders.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ExecutionSimulator`1.ActionType">
            <summary>
            Defines DDL action types.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ExecutionSimulator`1.NodeBase">
            <summary>
            NodeBase
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ExecutionSimulator`1.NodeBase`1">
            <summary>
            NodeBase{N}
            </summary>
            <typeparam name="N"></typeparam>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ExecutionSimulator`1.ExecutionNode">
            <summary>
            ExecutionNode
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ExecutionSimulator`1.RootNode">
            <summary>
            RootNode
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.IBinder">
            <summary>
            Binds <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.IBinder.Bind(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult},System.String,Microsoft.SqlServer.Management.SqlParser.Binder.BindMode)">
            <summary>
            Binds the list of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult"/> objects and returns an 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.
            </summary>
            <param name="parseResults">A list of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult"/> objects to bind.</param>
            <param name="contextDatabaseName">The name of the default context database.</param>
            <param name="bindMode">A BindMode value that indicates whether to perform batch mode binding or build mode binding.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.
            If the bind does not succeed, a null reference is returned.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.CteBindMode">
            <summary>
            Defines query expression bind modes while binding CTE definition. The CTE bind
            mode determines whether CTE self referencing is not allowed, allowed or a 
            must.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteBindMode.None">
            <summary>
            Not binding CTE definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteBindMode.Anchor">
            <summary>
            CTE member can only be an anchor (i.e. no self referencing).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteBindMode.Recursive">
            <summary>
            CTE member must be recursive (i.e. must have a self reference).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteBindMode.AnchorOrRecursive">
            <summary>
            CTE member could may have a self reference.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.CteQueryFlags">
            <summary>
            Defines different flags of query expressions inside of CTE definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteQueryFlags.None">
            <summary>
            Not binding CTE definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteQueryFlags.HasUnionAll">
            <summary>
            Flag is set if top level CTE query expression has an UNITON ALL.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.CteQueryFlags.HasSelfReference">
            <summary>
            Tracks whether a CTE member query expression has a self reference.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.TemporaryBindMode">
            <summary>
            Defines a set of short-term bind modes.
            </summary>
            <remarks>
            Typically these are passed on to the binder via EnterMode/LeaveMode methods. 
            Calling EnterMode would set the binder in a temporary mode while LeaveMode
            will reset such mode. These are meant to be used by specialized binders while
            base class binders (BatchBindingContext and LocalBindingContext) should ignore
            these modes.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext">
            <summary>
            Common interface for all binding context objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.CreateLocalBindingContext">
            <summary>
            Creates and returns a new LocalBindingContext object.
            </summary>
            <returns>A new LocalBindingContext object.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.Batch">
            <summary>
            Gets the batch binding context associated with the binding context object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.DatabaseCollation">
            <summary>
            Gets CollationInfo object for the database currently in scope.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.ServerCollation">
            <summary>
            Gets CollationInfo object for the connected to server.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.MetadataFactory">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object that can be used to create
            metadata objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.LocalTableExpressions">
            <summary>
            Gets collection of local tables in the binding context.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.LocalColumnExpressions">
            <summary>
            Gets the set of local columns that exists in the binding context.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.AddLocalColumnExpression(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn)">
            <summary>
            Adds specified local scalar expression to the binding context if its name
            is unique.
            </summary>
            <param name="expression">Local column expression to be added.</param>
            <returns>
            Null if the scalar expression was successfully added, or the duplicate 
            expression the prevented the expression addition if failed.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext.AddLocalTableExpression(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Adds specified local table expression to the binding context if its name
            is unique.
            </summary>
            <param name="expression">Local table expression to be added.</param>
            <returns>
            Null if the table expression was successfully added, or the duplicate 
            expression the prevented the expression addition if failed.
            </returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScopeOverride">
            <summary>
            Defines various <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> value override actions.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScopeOverride.None">
            <summary>
            Do nothing - keep current behavior
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScopeOverride.PartitionScope">
            <summary>
            Partition lexical scope into  child scopes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScopeOverride.UseRootScope">
            <summary>
            Use the lexical scope root instead of itself.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope">
            <summary>
            This class represents binding lexical scope which defines and provides 
            visiblity and ordering.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.Global">
            <summary>
            Gets a singleton <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> instance that represents the
            global scope (i.e. is visible to all other scopes).
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.CreateScirptScope">
            <summary>
            Creates and returns <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that can be used
            to represent script lexical scope.
            </summary>
            <returns>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that represents script lexical scope.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.#ctor(System.Int32)">
            <summary>
            Creates and intitializes <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object with the 
            specified order number and with <c>null</c> parent.
            </summary>
            <param name="order">Order number of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.#ctor(Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope,System.Int32)">
            <summary>
            Creates and intitializes <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object with the 
            specified parent scope and order number.
            </summary>
            <param name="parent">The parent <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.</param>
            <param name="order">Order number of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.Root">
            <summary>
            Gets the top-most lexical scope of this <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.AbsRoot">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that represents the absolute root
            of this <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/>. The absolute root, unlike the scope
            root, does not terminate at the point when the scope has not parent; rather
            the absolute root goes all the way to the physical root of the tree. For 
            instance, the [scope] root of a statement within a CREATE/ALTER PROC body 
            would be the CREATE/ALTER statement since the body needs to isolated. The 
            absolute root of such a statement would be the statement batch containing.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.IsRootScope">
            <summary>
            Gets a value that indicates whether or not this <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/>
            object is a root scope. An object is considered a root scope if it has no 
            parent.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.OwnerScope">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that created the current
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object. This is typically the parent scope,
            however, it's different for root scope (with no parents). This is only
            used for 'IsBefore' check. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.CreateChildScope">
            <summary>
            Creates and return a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that is child of
            the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.
            </summary>
            <returns>A child <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.CreateModuleScope">
            <summary>
            Creates and return a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that can be used as
            lexical scope of a module statement.
            </summary>
            <returns>A module <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.</returns>
            <remarks>Only a lexical scope of a batch could create a module scope.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.IsBefore(Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Returns a value that indicates whether the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/>
            object is lexically before the given <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object.
            This is only applicable for sibling scopes (have the same parent).
            </summary>
            <param name="other">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object to check whether
            or not the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object is before it.
            </param>
            <returns><c>true</c> if both scopes are siblings and the current 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> is before the specified one; <c>false</c>,
            otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.IsVisibleTo(Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Returns a value that indicates whether a given <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/>
            object (represents 'use' scope) is visible to the current scope (represents
            'def' scope).
            </summary>
            <param name="other">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object to check whether
            or not the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object is visible to.
            </param>
            <returns><c>true</c> if the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> is visible 
            to the specified one; <c>false</c>, otherwise.
            </returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.ScriptLexicalScope">
            <summary>
            Script Lexical scope.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.BatchLexicalScope">
            <summary>
            Batch Lexical scope.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.ModuleLexicalScope">
            <summary>
            Module lexical scope.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope.ChildLexicalScope">
            <summary>
            Child lexical scope.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LocalBindingContext">
            <summary>
            Represents local scope binding context. In addition to providing database 
            object lookups through the associated BatchBindingContext object, this class
            also provides local expression storage and lookup functionality.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LocalBindingContext.Parent">
            <summary>
            Gets the parent binding context of current binding context.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.LocalBindingContext.Batch">
            <summary>
            Gets the BatchBindingContext object that this object is associated with. 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.LocalSymbolTable">
            <summary>
            Provides <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable"/> store and lookup functionality.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Binder.SchemaEx.EmptyTable">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object which represents the place holder empty
            table (all object collections are empty).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ScopedMetadataCollection`2.EmptyCollection">
            <summary>
            Represents an empty <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IScopedMetadataCollection`2"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ScopedMetadataCollection`2.MergeOfTwoMetadataCollectionEx">
            <summary>
            Represents the merge of two <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IScopedMetadataCollection`2"/> objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Binder.ScopedMetadataCollection`2.MergeOfThreeCollection">
            <summary>
            Represents the merge of three <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.IScopedMetadataCollection`2"/> objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel">
            <summary>
            Specifies the database compatibility level.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Current">
            <summary>
            Compatible with the latest SQL Server version.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version80">
            <summary>
            Compatible with SQL Server 2000.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version90">
            <summary>
            Compatible with SQL Server 2005.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version100">
            <summary>
            Compatible with SQL Server 2008.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version110">
            <summary>
            Compatible with SQL Server 2012.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version120">
            <summary>
            Compatible with SQL Server 2014.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version130">
            <summary>
            Compatible with SQL Server 2015.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version140">
            <summary>
            Compatible with SQL Server 2017.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Version150">
            <summary>
            Compatible with SQL Server 2019.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel.Azure">
            <summary>
            Compatible with Azure SQL DB.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion">
            <summary>
            Specifies the database compatibility level.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Current">
            <summary>
            Compatible with the latest SQL Server version.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Version105">
            <summary>
            Compatible with SQL Server 2008 R2.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Version110">
            <summary>
            Compatible with SQL Server 2012.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Version120">
            <summary>
            Compatible with SQL Server 2014.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Version130">
            <summary>
            Compatible with SQL Server 2015.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Version140">
            <summary>
            Compatible with SQL Server 2017.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Version150">
            <summary>
            Compatible with SQL Server 2019.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Common.TransactSqlVersion.Azure">
            <summary>
            Compatible with Azure SQL DB.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.CounterId">
            <summary>
            Defines all valid counter Id's.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Counters">
            <summary>
            Provides method-level execution counters.
            </summary>    
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Counters.OutputFormat">
            <summary>
            Gets or sets the output format.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Counters.PerfWriters">
            <summary>
            Gets the collection of writers that the generated report is written to.
            </summary>
            <return>The collection of writers that is used.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Counters.Begin">
            <summary>
            Resets counters, initializes a new set, and enables event recording.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Counters.Finish">
            <summary>
            Stops event recording and writes the time report to the registered writers.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Counters.Reset">
            <summary>
            Resets all counters and stops event recording.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Format">
            <summary>
            Specifies the format of the performance output.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Format.Xml">
            <summary>
            XML output format is used.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Format.Text">
            <summary>
            Text output format is used.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Format.Csv">
            <summary>
            Comma-separated value (CSV) format is used.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.PerfWriterCollection">
            <summary>
            Represents a collection of text writers that perf reports are written to.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.TimerId">
            <summary>
            Defines available timer id's.
            </summary>
            <remarks>
            Timer id's that start with 'Min_' or 'Max_' are meant to mark a range
            of timer id's and are not to be used themselves.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers">
            <summary>
            Provides code region timers.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.OutputFormat">
            <summary>
            Gets or sets the output format.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.PerfWriters">
            <summary>
            Gets the collection of writers that the generated report is written to.
            </summary>
            <return>The collection of writers that is used.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Begin(System.Int32)">
            <summary>
            Resets all timers, initializes a new list of timing records, and enables 
            timers.
            </summary>
            <param name="recordCount">The maximum number of timing events to record.</param>
            <remarks>
            An overflow error occurs if the maximum number of records is exceeded. Increase the maximum number of records and run again.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Finish">
            <summary>
            Stops event recording and writes the time report to the registered writers.
            </summary>
            <remarks>
            Calling this method also resets the timers after the report
            is generated. To resume recording, call the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Begin"/> method.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.EventType">
            <summary>
            Specifies whether a timing event marks the start or end of a code region.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Start(Microsoft.SqlServer.Management.SqlParser.Diagnostics.TimerId)">
            <summary>
            Records the timestamp at the start of the timed code region.
            </summary>
            <param name="timerId">Timer Id that identifies the timed code region.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Stop(Microsoft.SqlServer.Management.SqlParser.Diagnostics.TimerId)">
            <summary>
            Records the timestamp at the end of the timed code region.
            </summary>
            <param name="timerId">Timer Id that identifies the timed code region.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Reset">
            <summary>
            Resets all timers and stops event recording.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Record">
            <summary>
            Represents performance event record.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.GenerateTimers(System.Int32)">
            <summary>
            Generates properly nested timers using the recorded timing events.
            </summary>
            <param name="recordCount">Number of records in the timing event array.</param>
            <returns>Root timer object with properly nested child timeer objects.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.Timer">
            <summary>
            Base class for all timers.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.SimpleTimer">
            <summary>
            Represents a leaf timer with no child timers.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.ComplexTimer">
            <summary>
            Represents a non-leaf timer which could have child timers.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Diagnostics.Timers.RootTimer">
            <summary>
            Represents a root timer.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlParserException">
            <summary>
            The exception that is thrown when the SQL Server parser encounters an unhandled error.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlParserException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SqlParserException class that contains the specified error message and inner exception. 
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlParserInternalParserError">
            <summary>
            The exception that is thrown when the SQL Server parser encounters an unhandled parsing error.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlParserInternalParserError.#ctor(System.Exception)">
            Initializes a new instance of the SqlParserInternalParserError class with a reference to the inner exception.
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlParserInternalBinderError">
            <summary>
            The exception that is thrown when the SQL Server parser encounters an unhandled binding error.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlParserInternalBinderError.#ctor(System.Exception)">
            Initializes a new instance of the SqlParserInternalBinderError class with a reference to the inner exception.
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject">
             <summary>
             Base Accept methods for visitable SqlCodeObjects to override.
            
             Leaf classes in the hierarchy that are public and not abstract
             will accept their input visitor by invoking it.
            
             Leaf classes in the hierarchy that are private or internal
             will not implement this method. Most such classes will have
             a public ancestor in which case the ancestor's Accept method
             satisfies the interface. Therefore these classes are visitable as well.
            
             </summary>
            <summary>
            Provides a common base class for most Sql Code DOM (SqlCodeDOM) objects
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Statement">
            <summary>
            Gets the statement that encloses the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.CanBeBoundIndependently">
            <summary>
            Gets a value that indicates whether a SqlCodeObject can be bound
            independently. This property is used to determine if an object in the
            children collection of SqlStatementError can be bound on its own.
            Unless the object itself is a statement (i.e. SqlStatement), it may
            require to be contained in a valid statement as a requirement of binding.
            Objects that can be bound regardless whether or not they are contained in
            a valid statement should override this property and return true.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.IsStatementLevelObject">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is a statement level code object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.AsStatement">
            <summary>
            Gets the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> as <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.IsBound">
            <summary>
            True if this Sql DOM object is bound, false otherwise.
            </summary>
            <remarks>
            This property will return true if the bound bit of the state is set, regardless
            whether or not the error bit is set. In other words, this is equivelant to 
            IsBound || IsBoundWithErrors.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.HasBindingErrors">
            <summary>
            Gets a value that indicates whether this object has any binding errors.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.HasAnyBindSkipped">
            <summary>
            Gets a value that indicates whether any of the descendents or siblings of
            this object has 'BindSkipped' flag set.
            The default implementation is to forward the call to the parent. 
            Statements MUST intercept this call and return a value. Other objects,
            like SqlQuerySpecification, should intercept this call too.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetLexicalScope">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that defines the lexical
            scoping of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetChildLexicalScope(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Get the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> of the given <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            child object.
            </summary>
            <param name="child">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> child object to get the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> for.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object for the specified child object.</returns>
            <remarks>
            This method should only be overloaded but not called explicitly (sort of internal-protected).
            The main reason for having this method is to allow the parent object to set a child object
            lexical scope differently in case the child object does not store lexical scope locally.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.CreateLexicalScope(System.Boolean)">
            <summary>
            Creates and returns a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object for the current
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>. This method gets the lexical scope of the
            object's parent and asks it to create either a child or module scope.
            </summary>
            <param name="isModule">Determines whether the lexical scope to be create is module scope.</param>
            <returns>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> for the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.RegisterDatabaseContextChange(Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseContext)">
            <summary>
            Registers default database context change.
            </summary>
            <param name="databaseContext">Database context to be registered.</param>
            <remarks>
            This needs to bubble up all the way to the script which keeps a list of
            all database contexts.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetDatabaseContext(Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Retrieves database context for a given lexical scope.
            </summary>
            <param name="lexScope">Lexical scope to retrieve default database context for.</param>
            <returns>
            An object that implements IDatabaseContext if the database context is 
            different than the connected database context. Otherwise, null.
            </returns>
            <remarks>
            This needs to bubble up all the way to the script which keeps a list of
            all database contexts.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.FindSiblingTableExpressionBoundTo(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Retrieves a sibling SqlTableExpression object to the specified table 
            expression object that is bound to the specified table.
            </summary>
            <param name="tableExpression">Table expression object to find it sibling.</param>
            <param name="boundTable">Bound table that the sibling table expression to find must be bound to.</param>
            <returns>SqlTableExpression object if found; otherwise, null.</returns>
            <remarks>
            This method searches only sibling code objects before the given table 
            expression.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetBoundObject``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Utility method to retrieve a bound object of a give code object.
            </summary>
            <typeparam name="T">Type of the bound object to get.</typeparam>
            <param name="codeObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> to retrieve the bound object for.</param>
            <returns>The bound object if one is found; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetCompletionList(Babel.ParserGenerator.LexLocation,Microsoft.SqlServer.Management.SqlParser.Binder.CompletionContext)">
            <summary>
            Finds and returns the completion list at the specified location and for
            the specified completion context.
            </summary>
            <param name="caretLocation">Caret lexical location to retrieve completion list at.</param>
            <param name="completionContext">Completion context which determines items that get included in the list.</param>
            <returns>List of IMetadataObject objects or null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.FindChildContainingLocation(Babel.ParserGenerator.LexLocation@)">
            <summary>
            Finds and returns a child code object that fully contains the specified 
            lexical location.
            </summary>
            <param name="lexLocation">Lexical location to find a child object that contains it.</param>
            <returns>A SqlCodeObject if a child is found; otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.MayChildHaveCompletionList(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Returns a value that indicates whether a given child <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            may have a completion list.
            This method allows subclasses to filter child objects without needing to
            override GetCompletionList method.
            </summary>
            <param name="child">
            The child <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> to check whether it may have a completion list.
            </param>
            <returns><c>true</c> if the given object may have a completion list; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.RetrieveCompletionListItems(Microsoft.SqlServer.Management.SqlParser.Binder.CompletionContext)">
            <summary>
            Retrieves and returns completion list items for a given completion context.
            </summary>
            <param name="completionContext">Completion context which determines items that get included in the list.</param>
            <returns>List of IMetadataObject objects.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.RetrieveCompletionListItems(Babel.ParserGenerator.LexLocation,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier},Microsoft.SqlServer.Management.SqlParser.Binder.CompletionContext)">
            <summary>
            Retrieves and returns completion list items at a given caret location, list of 
            dot separated identifiers and a completion context.
            </summary>
            <param name="caretLocation">Caret lexical location.</param>
            <param name="identifiers">List of dot separated identifiers.</param>
            <param name="completionContext">Completion context which determines items that get included in the list.</param>
            <returns>List of IMetadataObject objects.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetQuickInfoText(Babel.ParserGenerator.LexLocation,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider)">
            <summary>
            Retrieves code object quick-info text at the specified cursor location.
            </summary>
            <param name="cursorLocation">Cursor location to retrieve quick-info text at.</param>
            <param name="displayInfoProvider">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/> object which provides
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> extended display info properties.</param>
            <returns>Quick-info text if the object supports it; otherwise, null.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.StartLocation">
            <summary>
            start location of the object in the source sql
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.EndLocation">
            <summary>
            end location of the object in the source sql
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Sql">
            <summary>
            Original T-Sql representation of this node and it's children
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Length">
            <summary>
            The length of the node's T-Sql representation
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Xml">
            <summary>
            return an Xml string representation of this node and it's children
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Tokens">
            <summary>
            collection of tokens (including whitespace and comments) that make up this object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.IsSqlCodeSnippet">
            <summary>
            Gets a value that indicates whether a SqlCodeObject is a code snippet object.
            That is an object which represent a code without a parsed subtree and represented 
            only by Sql text.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.relativePosition">
            <summary>
            relative position of the token / construct 
            in regards to position of the parent statement/batch.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Position">
            <summary>
            position of the token / construct as determined by the parser
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.Parent">
            <summary>
            Parent node of this object
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.PopulateIdentifiers(System.Collections.Generic.List{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier})">
            <summary>
            Adds all descendant SqlIdentifier objects to the list provided.
            </summary>
            <param name="identifiers">Identifier list to populate.</param>
            <remarks>
            This method is provided to allow UA to perform checks on identifiers and
            should not be used for any other purpose.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetSql(Babel.ParserGenerator.LexLocation)">
            <summary>
            Retrieves the sql for given location.
            </summary>
            <param name="location">Position</param>
            <returns>Sql string.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.PopulateIdentifierFromTokens(System.Collections.Generic.List{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier})">
            <summary>
            Creates a SqlIdentifier object for each ID token that belongs to this
            object and adds it to the list provided.
            </summary>
            <param name="identifiers">Identifier list to populate.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.GetSqlSource``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection{``0})">
            <summary>
            Retrieves and returns the T-SQL soucr code corrosponding to the given
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/> object.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
            <param name="collection">The collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> items 
            to retrieve source code for.</param>
            <returns>A <see cref="T:System.String"/> that represents the T-SQL source.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Write an Xml representation of this node and it's children to a stream
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportSyntaxError">
            <summary>
            Helper method that reports syntax error for the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportSyntaxErrorOnFirstToken">
            <summary>
            Helper method that reports syntax error on first token of current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportSyntaxErrorNearKeyword(System.String)">
            <summary>
            Helper method that reports syntax error near specified keyword.
            </summary>
            <param name="keyword">The keyword to be mentioned in the error message.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportSyntaxError(Babel.ParserGenerator.LexLocation)">
            <summary>
            Reports syntax error near token identified by its lexical location.
            </summary>
            <param name="lexLocation">Token lexical location to be used in the error message.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportSyntaxError(System.String,Babel.ParserGenerator.LexLocation)">
            <summary>
            Reports syntax error near token identified by its string value and 
            lexical location.
            </summary>
            <param name="tokenString">String value of the token to report the syntax error near.</param>
            <param name="lexLocation">Token lexical location to be used in the error message.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportParseError(System.String)">
            <summary>
            Helper method that reports the given error message as parse error.
            </summary>
            <param name="message">Error message to be reported.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportBindError(System.String)">
            <summary>
            Helper method that reports the given error message as bind error.
            </summary>
            <param name="message">Error message to be reported.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.ReportBindError(System.String,Microsoft.SqlServer.Management.SqlParser.Parser.ErrorFlags)">
            <summary>
            Helper method that reports the given error message as bind error.
            </summary>
            <param name="errorFlags">Error subtype to be reported.</param>
            <param name="message">Error message to be reported.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.RunConsistencyChecks">
            <summary>
            Runs Sql code DOM consistency checks.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject.RunConsistencyChecks(System.String,System.Int32)">
            <summary>
            Runs Sql code DOM consistency checks.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement">
             <summary>
             Base Accept methods for visitable SqlStatements to override.
            
             Leaf classes in the hierarchy that are public and not abstract
             will accept their input visitor by invoking it.
            
             Leaf classes in the hierarchy that are private or internal
             will not implement this method. Most such classes will have
             a public ancestor in which case the ancestor's Accept method
             satisfies the interface. Therefore these classes are visitable as well.
            
             </summary>
            <summary>
            Provides a common base class for "standalone" sql statements.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.Statement">
            <summary>
            Gets the statement that encloses the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.CanBeBoundIndependently">
            <summary>
            Gets a value that indicates whether a SqlCodeObject can be bound
            independently. This property is used to determine if an object in the
            children collection of SqlStatementError can be bound on its own.
            Unless the object itself is a statement (i.e. SqlStatement), it may
            require to be contained in a valid statement as a requirement of binding.
            Objects that can be bound regardless whether or not they are contained in
            a valid statement should override this property and return true.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsTrueLastStatement">
            <summary>
            Gets a value that indicates whether the current statement is a true last statement.
            A true last statement is a statement which grammar-wise, consumes all the subsequent
            statements in the batch ex. create / alter proc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsModuleStatement">
            <summary>
            Gets a value that indicates whether the current statement represents a module. A module
            statement is a statement that creates or alters a modeule (e.g. CREATE/ALTER PROC/FUNCTION).
            The only exception to the rule above is CREATE/ALTER inline table function. This is because
            it is a single statement and it is more of a view than multi-statement functions. The main
            problem of treating it as a module is the function becomes visible to itself allowing recursive
            references which is not valid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsReturnStatement">
            <summary>
            Gets a value that indicates whether the current statement is a module return statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsConditionalStatement">
            <summary>
            Gets a value that indicates whether this statement is a conditional statement
            (e.g. IF and WHILE statements).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsDdlStatement">
            <summary>
            Gets a value that indicates whether the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> is a DDL statement
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.AsDdlStatement">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> as <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/> if it
            extends it, or <c>null</c> if it does not.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsStatementLevelObject">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is a statement level code object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.AsStatement">
            <summary>
            Gets the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> as <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.IsInConditionalStatement">
            <summary>
            Gets a value that indicates whether this statement is in a conditional
            statement. This is true if any of the statement ancestors is a 
            conditional statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.DetachFromTree">
            <summary>
            Detaches statement from the tree. Statement will have no parent.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.BeforeParserState">
            <summary>
            Parser state just before shifting the statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.AfterParserState">
            <summary>
            Parser state just after shifting the statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.BeforeScannerState">
            <summary>
            Scanner state just before shifting the statement.
            Used to determine if before state is matching and if statement can be reused.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.AfterScannerState">
            <summary>
            Scanner state just after shifting the statement.
            Used to restore the complete state after. Including read/unread token state, 
            and all changes done after reading the token.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.LookaheadTokenIndex">
            <summary>
            Lookahead token index when shifting the statement.
            Used to determine if the read lookahead token is completely in clean region.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement.YYLoc">
            <summary>
            Parser YYloc created during reduction of the statement. 
            Can be sometimes different than pos.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression">
            <summary>
            Represents aggregate built-in function call expression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.InvalidAggregateFunctionCallExpression">
            <summary>
            Represents an invalid aggregate function call expression. Only useful when binding.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.Create(System.String,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetQuantifier,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression})">
            <remarks>INTERNAL ONLY - DO NOT MAKE PUBLIC</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.Create(System.String)">
            <remarks>INTERNAL ONLY - DO NOT MAKE PUBLIC</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression.SetQuantifier">
            <summary>
            Gets function set quantifier (i.e. ALL or DISTINCT).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression">
            <summary>
            Class for the ALL, SOME, ANY predicates from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.ComparisonType">
            <summary>
            The left side expression of the comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Left">
            <summary>
            The left side expression of the comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Right">
            <summary>
            The right side expression of the comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.ComparisonOperator">
            <summary>
            The comparison operator of the expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption">
            <summary>
            Represents the ALLOW_PAGE_LOCKS index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlAllowPageLocksIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlAllowPageLocksIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption">
            <summary>
            Represents the ALLOW_ROW_LOCKS index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlAllowRowLocksIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlAllowRowLocksIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentError">
            <summary>
            represents a missing or mal-formed assignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentError.Value">
            <summary>
            Gets the value (i.e. the righthand side) of an assignment.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression">
            <summary>
            Represents invocation of a AT TIME ZONE function
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.DateValue">
            <summary>
            The date/time value to be converted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.TimeZone">
            <summary>
            Time Zone Identifier to which time zone date/time value will be converted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch">
            <summary>
            A collection of Sql Statments that are parsed as a single submission to the database server.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Statement">
            <summary>
            Gets the statement that encloses the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.GetFinalDatabaseContext">
            <summary>
            Returns the final <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseContext"/> upon finishing binding all
            statements in the batch if called after calling Bind. Otherwise, it returns
            the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseContext"/> at the last bound statement.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.DatabaseContext"/> object at the last bound statement in the batch.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Statements">
            <summary>
            Gets the collection of statements that belongs to the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Output an xml representation of the batch
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression">
            <summary>
            Between predicate from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.HasNot">
            <summary>
            Has the NOT boolean operator  
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.TestExpression">
            <summary>
            The first expression in the between predicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.BeginExpression">
            <summary>
            The left operand of the between comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.EndExpression">
            <summary>
            The right operand in the between expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression">
            <summary>
            Bynary boolean expression 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Operator">
            <summary>
            The boolean operator associated
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Left">
            <summary>
            left operand for the binary expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Right">
            <summary>
            right operand for the binary expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression">
            <summary>
            Represents the filter expressions combined together with an AND operator in filter clause in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterExpression,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterExpression)">
            <summary>
            Creates a SqlBinaryFilterExpression object.
            </summary>
            <param name="left">SqlFilterExpression which is the left operand.</param>
            <param name="right">SqlFilterExpression which is the right operand.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Left">
            <summary>
            Gets the SqlFilterExpression which is the left operand in this combined filter expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Right">
            <summary>
            Gets the SqlFilterExpression which is the right operand in this combined filter expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression">
            <summary>
            Represents binary query expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Operator">
            <summary>
            the type of this binary query expression, union, union all, or intersect
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Left">
            <summary>
            query expression on the left of the operator
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Right">
            <summary>
            query expression on the right of the operator
            </summary>        
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression">
            <summary>
            A class that represents a binary scalar expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Operator">
            <summary>
            The type of the binary scalar expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Left">
            <summary>
            The left side of the binary scalar expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Right">
            <summary>
            The right side of the binary scalar expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpressionError">
            <summary>
            Represents an error in boolean expressions
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpressionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpressionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpressionError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression">
            <summary>
            Represents the filter expression in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Creates a SqlBooleanFilterExpression object.
            </summary>
            <param name="expression">SqlComparisonBooleanExpression which represents the Sql comparison expression.</param>
            <returns>SqlBooleanFilterExpression object which contains the comparison expression.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Creates a SqlBooleanFilterExpression object.
            </summary>
            <param name="expression">SqlInBooleanExpression which represents the Sql 'in' expression.</param>
            <returns>SqlBooleanFilterExpression object which contains the 'in' expression.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Creates a SqlBooleanFilterExpression object.
            </summary>
            <param name="expression">SqlComparisonBooleanExpression which represents the Sql 'is null' expression.</param>
            <returns>SqlBooleanFilterExpression object which contains the 'is null' expression.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Expression">
            <summary>
            Gets the SqlBooleanExpression which is the boolean predicate represented by this object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression">
            <summary>
            Represents built-in scalar function call.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.BoundFunction">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarFunction"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.FunctionName">
            <summary>
            Gets built-in function name that is called.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression.IsStar">
            <summary>
            Gets a value that indicates whether '*' is specified as function call arguments.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression">
            <summary>
            Represents invocation of a CAST function
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.IsValidFilterExpressionConstant">
            <summary>
            Checks if this is a valid Sql Filter expression.
            </summary>
            <returns>Returns true if valid Sql Filter expression, false otherwise.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.DataType">
            <summary>
            The data type to be cast to
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext">
            <summary>
            Represents a ChangeTrackingContext for a query expression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint">
            <summary>
            Represents Sql check constraint.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.NotForReplication">
            <summary>
            Gets a value that indicates whether NOT FOR REPLICATION is specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.Expression">
            <summary>
            Gets CHECK constriant logical expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier">
            <summary>
            Represents the Sql CLR Assembly.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Creates a SqlClrAssemblySpecifier object.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.AssemblyName">
            <summary>
            Gets assembly name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier">
            <summary>
            Represents information of a class contained in an assembly.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Creates a SqlClrClassSpecifier object.
            </summary>
            <param name="assemblyName">Name of the assembly in which the class is contained.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Creates a SqlClrClassSpecifier object.
            </summary>
            <param name="assemblyName">Name of the assembly in which the class is contained.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.ClassName">
            <summary>
            Gets class name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition">
            <summary>
            Represents Sql CLR function body definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.AsSqlClrFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.AsSqlInlineFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.AsSqlMultistatementFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.ClrMethodSpecifier">
            <summary>
            Gets the method specifier body.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier">
            <summary>
            Repesents a clr method specification.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier.MethodName">
            <summary>
            Gets method name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression">
            <summary>
            Represents Sql collate expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Constructor using input scalar expression and the collation to be cast to. Verification of inputs - whether scalarExpr
            is a string expression and whether collation is one of the valid collations - is done at bind time.
            </summary>
            <param name="expression"> The scalar expression that is being cast to a collation. </param>
            <param name="collation"> The collation that the expression is being cast to.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Collation">
            <summary>
            Collation the scalar expression is cast to
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Expression">
            <summary>
            The inner scalar expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation">
            <summary>
            Represents Sql collation.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.BoundCollation">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object that represents the bound collation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.Name">
            <summary>
            Gets the collation name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment">
            <summary>
            represents an assignement of a new value to a column
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Column">
            <summary>
            column that will be assigned a new value to
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Value">
            <summary>
            Gets the value (i.e. the righthand side) of an assignment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint">
            <summary>
            Represents Sql column default value specification.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint.Expression">
            <summary>
            Gets default column default value expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition">
            <summary>
            Represents Sql column definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.BoundColumn">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents the bound column
            of the column definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Name">
            <summary>
            Gets column name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.DataType">
            <summary>
            Gets the type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Collation">
            <summary>
            Gets the collation of the column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Constraints">
            <summary>
            Gets a collection of all column constraints.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.SparseOption">
            <summary>
            Gets the type of sparse option specified on the column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.GeneratedAlwaysType">
            <summary>
            Gets the type of generated always specified on the column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity">
            <summary>
            Represent column identity specification.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Seed">
            <summary>
            Gets column identitiy seed value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Increment">
            <summary>
            Gets column identity increment value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.NotForReplicationClause">
            <summary>
            Gets whether not for replication clause has been specified for the identity.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression">
            <summary>
            A class that represents a column reference.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression.BoundColumn">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that this 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression"/> object is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression.ColumnName">
            <summary>
            The name of the column.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression">
            <summary>
            Represents T-SQL common table expression (CTE).
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.Name">
            <summary>
            Gets common table expression name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.ColumnList">
            <summary>
            Gets common table expression result set column list.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.QueryExpression">
            <summary>
            Gets common table expression query definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression">
            <summary>
            Comparison Predicate from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Left">
            <summary>
            The left side expression of the comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Right">
            <summary>
            The right side expression of the comparison
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.ComparisonOperator">
            <summary>
            The comparison operator of the expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange">
            <summary>
            Represents the partition range specified in the DATA_COMPRESSION index option specified in the Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Creates a SqlCompressionPartitionRange object.
            </summary>
            <param name="from">Partition expression that represents the start of the partition range.</param>
            <param name="to">Partition expression that represents the end of the partition range.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Creates a SqlCompressionPartitionRange object.
            </summary>
            <param name="from">Partition expression that represents the only partition in the range.
            End of the partition range is null for this object.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.From">
            <summary>
            Gets the starting partition or the only partition in the partition range represented by this object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.To">
            <summary>
            Gets the final partition in the partition range represented by this object.
            Is null when the range consists of only one partition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition">
            <summary>
            Represents a Sql table computed column definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.Expression">
            <summary>
            Gets the expression that defines the value of the column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.IsPersisted">
            <summary>
            Gets a value that indicates whether the value of the column is physically 
            persisted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause">
            <summary>
            object that represents a conditional clause -- can be either a where or an on clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause.Expression">
            <summary>
            The Search Condition
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint">
            <summary>
            Represents Sql constraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.TypeOnlyConstraint">
            <summary>
            Represents a type-only constraints that could be used to transfer its type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.TypeOnlyConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.TypeOnlyConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.TypeOnlyConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.TypeOnlyConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.TypeOnlyConstraint.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.Name">
            <summary>
            Gets the constraint name.
            </summary>
            <remarks>The name might not be set.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.Type">
            <summary>
            Gets the constraint type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.ToString">
            <summary>
            Returns a string representation of the constraint type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.Null">
            <summary>
            Constructs and returns NULL column constraint object.
            </summary>
            <returns>A constraint object that represents NULL constrant.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.NotNull">
            <summary>
            Constructs and returns NOT NULL column constraint object.
            </summary>
            <returns>A constraint object that represents NOT NULL constrant.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint.RowGuidCol">
            <summary>
            Constructs and returns ROWGUIDCOL column constraint object.
            </summary>
            <returns>A constraint object that represents ROWGUIDCOL constrant.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression">
            <summary>
            Represents invocation of a CONVERT function
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption">
            <summary>
            Represents the create use option
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem">
            <summary>
            Represents the Cube grouping set
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem.Items">
            <summary>
            The Arguments for the rollup grouping set
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.IsStatementLevelObject">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is a statement level code object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Variable">
            <summary>
            Gets the variable being assigned to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.SelectStatement">
            <summary>
            Gets the select statement specified in the assignment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Options">
            <summary>
            Gets the specified cursor options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression.VariableName">
            <summary>
            Gets the name of the variable.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpressionError">
            <summary>
            represents a missing variable, ex: set  = expr
            </summary>
            <summary>
            represents a missing variable, ex: set  = expr
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpressionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpressionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption">
            <summary>
            Represents the DATA_COMPRESSION index option in the Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange})">
            <summary>
            Creates a SqlDataCompressionIndexOption object.
            </summary>
            <param name="compressionType">SqlDataCompressionType which represents the type of compression.</param>
            <param name="partitions">Represents the partitions over which compression is applied.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.CompressionType">
            <summary>
            Gets the SqlDataCompressionType which is the type of compression specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType">
            <summary>
            A class that represents a sql scalar datatype.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.ObjectIdentifier">
            <summary>
            The datatype name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.National">
            <summary>
            Gets a value that indicates whether NATIONAL is specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.Varying">
            <summary>
            Is the datatype varying (i.e. varchar)
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.GetTypeSpec">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that provides system data type
            specification.
            </summary>
            <returns>
            The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that provides data type specification 
            if this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType"/> represents a system data type; otherwise 
            <c>null</c>.
            </returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification">
            <summary>
            The specification for a scalar datatype
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.BoundType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.ReportInvalidTypeBindError(System.String,System.Boolean)">
            <summary>
            Reports an invalid type bind error for the specified parameter, variable or
            column name.
            </summary>
            <param name="name">Parameter, variable or column name to be specified in error message.</param>
            <param name="isColumn">Indicates that the error message is for a column rather than a parameter or variable.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Constructs scalar data type specification object with the specified data
            type and numeric argument.
            </summary>
            <param name="dataType">Data type object to create specification for.</param>
            <param name="arg1"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.DataType">
            <summary>
            The datatype
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Argument1">
            <summary>
            The first argument to the datatype declaration.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Argument2">
            <summary>
            The second argument to the datatype declaration.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.IsMaximum">
            <summary>
            Gets a value that indicates whether the data type maximum storage is
            specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.IsCursor">
            <summary>
            Gets a value that indicates whether this data type specification 
            represents a cursor.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.XmlDocumentConstraint">
            <summary>
            Gets the document constraint specified for Xml types.
            </summary>
            <remarks>
            If the data type is not Xml or if it is un-typed Xml then this value
            should be ignored.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.XmlSchemaCollection">
            <summary>
            Gets an identifier that specifies the Xml schema collection name for typed
            Xml data types.
            </summary>
            <remarks>
            If the data type is not Xml or if it is un-typed Xml then this value must
            be set to null.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification.RunConsistencyChecks(System.String,System.Int32)">
            <summary>
            Runs Sql code DOM consistency checks.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition">
            <summary>
            Represents Sql ddl trigger definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.TargetType">
            <summary>
            Gets target type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.Events">
            <summary>
            Get trigger events.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource">
            <summary>
            represents using default values as an insert source of an insert merge action
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource">
            <summary>
            represents using default values as an insert source of an insert specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction">
            <summary>
            represents a delete action of a merge specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification">
            <summary>
            Represents a delete specification in Transact Sql.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression">
            <summary>
            Represents a derived table in the FROM clause.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Bind(Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext)">
            <summary>
            Bind for Derived tables does following things:
              (1) determine the column output list for the query that defines the derived table
              (2) adds to the input BindingContext a table-source named by the alias of the derived table with above column list
            </summary>
            <param name="bindingContext"></param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.QueryExpression">
            <summary>
            The query expression that defines the derived table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Alias">
            <summary>
            The required alias of the derived table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.ColumnList">
            <summary>
            The optional list of output column aliases of the derived table
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource">
            <summary>
            represents a dml specification with an output clause that is then used as a table source in another expression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.DmlSpecification">
            <summary>
            The dml specification that defines the dml specification source 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.Alias">
            <summary>
            The required alias of the dml specification source 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.ColumnList">
            <summary>
            The optional list of output column aliases of the dml specification source
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition">
            <summary>
            Represents Sql dml trigger definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.IsNotForReplication">
            <summary>
            Gets a value that indicates whether NOT FOR REPLICATION is specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.IsWithAppend">
            <summary>
            Gets a value that specifies that an additional trigger of an existing type should be added.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.Actions">
            <summary>
            Gets trigger actions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.TargetName">
            <summary>
            Gets target table or view name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption">
            <summary>
            Represents the DROP_EXISTING index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlDropExistingIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlDropExistingIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlErrorCodeObject">
            <summary>
            object which represents an error inside of the tsql object model
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlErrorCodeObject.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlErrorCodeObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlErrorCodeObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlErrorCodeObject.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlErrorCodeObject.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument">
            <summary>
            Represents an argument that is used to invoke a module.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.BoundParameter">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter"/> that represents the module argument
            bound object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Parameter">
            <summary>
            Gets a reference to the parameter.
            </summary>
            <remarks>This field is optional (i.e. may be null).</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Value">
            <summary>
            Gets the value of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.IsOutput">
            <summary>
            Gets a value that specifies whether the parameter is an output parameter.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause">
            <summary>
            Represents execution context of a user-defined module.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.BoundExecutionContext">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that represents the 
            bound metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Type">
            <summary>
            Gets module execution context type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.UserName">
            <summary>
            Get EXECUTE AS user name.
            </summary>
            <remarks>Unless the module execution type is set to 'User', this property will return null.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.IsValid">
            <summary>
            Gets a value that indicates whether or not this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause"/>
            object is valid.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Caller">
            <summary>
            Creates and returns SqlExecuteAsClause that represents EXECUTE AS CALLER.
            </summary>
            <returns>A SqlExecuteAsClause object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Owner">
            <summary>
            Creates and returns SqlExecuteAsClause that represents EXECUTE AS OWNER.
            </summary>
            <returns>A SqlExecuteAsClause object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Self">
            <summary>
            Creates and returns SqlExecuteAsClause that represents EXECUTE AS SELF.
            </summary>
            <returns>A SqlExecuteAsClause object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.User(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates and returns SqlExecuteAsClause that represents EXECUTE AS 'user_name'.
            </summary>
            <returns>A SqlExecuteAsClause object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.Invalid(System.String)">
            <summary>
            Creates and returns SqlExecuteAsClause that represents an invalid EXECUTE AS
            clause.
            </summary>
            <returns>A SqlExecuteAsClause object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.ExecuteAsCaller">
            <summary>
            Represents EXECUTE AS CALLER.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.ExecuteAsOwner">
            <summary>
            Represents EXECUTE AS OWNER.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.ExecuteAsSelf">
            <summary>
            Represents EXECUTE AS SELF.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.ExecuteAsUser">
            <summary>
            Represents EXECUTE AS 'user_name'
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause.InvalidExecuteAs">
            <summary>
            Represents an invalid EXECUTE AS clause.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression">
            <summary>
            Exists Predicate from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression.QueryExpression">
            <summary>
            Expression for the exists predicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption">
            <summary>
            Represents the FILLFACTOR index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates a SqlFillFactorIndexOption object.
            </summary>
            <param name="fillFactor">SqlLiteralExpression which is the integer value for new object.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.FillFactor">
            <summary>
            Gets SqlLiteralExpression which is the value for this object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption.IsValid">
            <summary>
            Gets the boolean value which indicates whether this fillfactor index option is valid.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause">
            <summary>
            Represents the filter clause in the TSql statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause.FilterExpression">
            <summary>
            Gets the filter expression contained in this filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause">
            <summary>
            Represents the For Browse clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint">
            <summary>
            Represents Sql FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.Columns">
            <summary>
            Gets the list of columns from the table with the FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.ReferencedTable">
            <summary>
            Gets the name of the table referenced by the FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.ReferencedColumns">
            <summary>
            Gets the list of columns from the table referenced by the FOREIGN KEY 
            constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.DeleteAction">
            <summary>
            Gets the action taken when the row that is referenced by the foreign key 
            is deleted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.UpdateAction">
            <summary>
            Gets the action taken when the row that is referenced by the foreign key 
            is updated.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.NotForReplication">
            <summary>
            Get a value that specifies whether the foreign key is available for 
            replication.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause">
            <summary>
            FOR XML AUTO
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause">
            <summary>
            For XML Clause
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.SqlForXmlInvalidClause">
            <summary>
            FOR XML NONE
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.SqlForXmlInvalidClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.SqlForXmlInvalidClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.SqlForXmlInvalidClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.SqlForXmlInvalidClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.Directives">
            <summary>
            Xml directives that allow for output shape specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective">
            <summary>
            Xml directive for the for xml clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective.Type">
            <summary>
            The type  of the directive for the element
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective.Argument">
            <summary>
            Argument for the directive
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause">
            <summary>
            FOR XML EXPLICIT
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause">
            <summary>
            FOR XML PATH
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause.ElementName">
            <summary>
            The argument for Path
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause">
            <summary>
            FOR XML RAW
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause.ElementName">
            <summary>
            The argument for raw
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause">
            <summary>
            Object which represents a from clause in a select, update, or delete statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause.TableExpressions">
            <summary>
            Gets a collection containing the table expressions in this FROM clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression">
            <summary>
            Represents a full text boolean expression in the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.FunctionName">
            <summary>
            The function name either Fulltext or Contains
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.ColumnList">
            <summary>
            Full Text Column List
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.SearchString">
            <summary>
            String to search for in the columns values
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.LangExpression">
            <summary>
            Language Expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn">
            <summary>
            The full text column for the fulltext_predicate
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.ColumnRefExpression">
            <summary>
            Column Refference Expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.SelectStarExpression">
            <summary>
            Select Star Expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition">
            <summary>
            Represents Sql function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.IsTableValuedFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.IsInlineTableFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.IsClrFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a SQL CLR function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.IsStatementLevelObject">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is a statement level code object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Name">
            <summary>
            Gets stored procedure name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Parameters">
            <summary>
            Gets the parameter declarations for the stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition.Options">
            <summary>
            Gets function definition options.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError">
            <summary>
            Represents invalid Sql function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.ReturnType">
            <summary>
            Gets function return type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.BodyDefinition">
            <summary>
            Gets function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinitionError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression">
            <summary>
            represents a reference to a global scalar variable
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.BoundVariable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> which represents the bound global 
            variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression.VariableName">
            <summary>
            Gets the name of the global variable referenced.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem">
            <summary>
            Represents the Grand Total Grouping Set
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet">
            <summary>
            Represents the grand total grouping set
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet.Item">
            <summary>
            Grand total group set
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause">
            <summary>
            Represents the Group By Clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.HasAll">
            <summary>
            Has the by All option 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Items">
            <summary>
            The collection of items by which grouping is performed
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Option">
            <summary>
            One or none of the Cube or Rollup options specified 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets">
            <summary>
            Represents the group by grouping sets method
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets.Sets">
            <summary>
            Represents a grouping Set
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection">
            <summary>
            Represents a collection of grouping sets , used in GROUP BY GROUPING SETS(...)
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection.Items">
            <summary>
            The collection of grouping sets by wich to group
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause">
            <summary>
            Having Clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier">
            <summary>
            represents an identifier in TSQL -- encapsulates escaping reserved words and embded special characters
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.Value">
            <summary>
            The unescaped name of the identifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.ToString">
            <summary>
            returns the string of the identifier
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.IsEmpty">
            <summary>
            Gets a value that indicates whether the value is empty string.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.IsTempName">
            <summary>
            Indicates whether the value represents temp name.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.IsNullOrEmpty(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Indicates whether the specified SqlIdentifier object is a null reference 
            or its value is the empty string.
            </summary>
            <param name="identifier">A SqlIdentifier reference.</param>
            <returns>true if the value parameter is a null reference or its value is empty string; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.IsNull(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Indicates whether the specified SqlIdentifier object is a null reference 
            or its value is the empty string.
            </summary>
            <param name="identifier">A SqlIdentifier reference.</param>
            <returns>true if the value parameter is a null reference or its value is empty string; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.RetrieveValue(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Retrieves and returns the <see cref="T:System.String"/> that represents the specified 
            identifier value.
            </summary>
            <param name="identifier">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier"/> object to retrieve its value.</param>
            <returns>The <see cref="T:System.String"/> value of the specified identifier.</returns>
            <remarks>This method returns <c>null</c> if the passed in identifier is <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.Null">
            <summary>
            Null-valued SqlIdentifier which could be used in place of null references.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier.NullSqlIdentifier">
            <summary>
            Represents a singleton null-valued SqlIdentifier.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression">
            <summary>
            Represents IDENTITY function expression which is used a SELECT statement with
            an INTO table clause to insert an identity column into a new table. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption">
            <summary>
            Represents the MAXDOP index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlIgnoreDupKeyIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlIgnoreDupKeyIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression">
            <summary>
            In Predicate from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.ComparisonValue">
            <summary>
            The InPredicate value in the grammar
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.InExpression">
            <summary>
            The Expression for the In Predicate
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.HasNot">
            <summary>
            Has the NOT boolean in the statement " expression NOT IN"  
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue">
            <summary>
            The abstract class for the in_predicate_vlaue from the grammar as a collection of expressions
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue.Values">
            <summary>
            The InpredicateValue from the grammar
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue">
            <summary>
            The abstract class for the in_predicate_vlaue from the grammar as query
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue.Value">
            <summary>
            The InpredicateValue from the grammar
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn">
            <summary>
            Represents a Sql server column that is participating in an index.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.BoundColumn">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn"/> bound column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.Name">
            <summary>
            Gets the name of the column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.SortOrder">
            <summary>
            Gets the order in which the column is sorted.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint">
            <summary>
            Table hint that is an index
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.Arguments">
            <summary>
            The value of the index  hints
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.IsIndexHint">
            <summary>
            Property that is true indicating that it is an index table hint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.AsSqlIndexHint">
            <summary>
            Returns this (the object that represents the index table hint) 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError">
            <summary>
            Represents error in specified index options in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionError.#ctor">
            <summary>
            Creates a SqlIndexOptionError object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint">
            <summary>
            Represents a SqlInlineIndexConstraint .
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption})">
            <summary>
            Constructor for SqlInlineIndexConstraint
            </summary>
            <param name="id">SqlIdentifier for this constraint</param>
            <param name="options">index options</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.Options">
            <summary>
            Collection of SqlIndexOption instances
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint.Children">
            <summary>
            return children of this.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition">
            <summary>
            Represents Sql inline function body definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.AsSqlClrFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.AsSqlInlineFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.AsSqlMultistatementFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.QueryWithClause">
            <summary>
            Get the query with clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.QueryExpression">
            <summary>
            Get the query expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition">
            <summary>
            Represents Sql inline table relational function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.IsTableValuedFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.IsInlineTableFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.IsClrFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a SQL CLR function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.BodyDefinition">
            <summary>
            Gets function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration">
            <summary>
            Represents SQL table variable declaration.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.BoundTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> that represents the inline table
            variable bound object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Name">
            <summary>
            The name of the variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Definition">
            <summary>
            Gets table type definition object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction">
            <summary>
            represents a insert action of a merge specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.TargetColumns">
            <summary>
            optional collection of columns to be inserted into
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.Source">
            <summary>
            the source values to insert
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification">
            <summary>
            represents an insert specification in Transact Sql
            </summary>          
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.TargetColumns">
            <summary>
            optional collection of columns to be inserted into
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.Source">
            <summary>
            the source for the insert specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause">
            <summary>
            represents an into clause used for inserting a result set into a table expression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Target">
            <summary>
            The target of the into clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Columns">
            <summary>
            The optional collection of columns to insert into.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>           
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression">
            <summary>
            Is Null Predicate from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.HasNot">
            <summary>
            Has the NOT booleean in the statement ( expression IS NOT null  )
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.Expression">
            <summary>
            The expression to be checked
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation">
            <summary>
            Represents the storage information for the large data in Sql CREATE TABLE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.TextAndImageStorageSpecification">
            <summary>
            Gets the text and image storage specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.FileStreamStorageSpecification">
            <summary>
            Gets the filestream storage specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression">
            <summary>
            Like predicate from the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.HasNot">
            <summary>
            Has the NOT boolean operator
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.Expression">
            <summary>
            the expression to be compared
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.LikePattern">
            <summary>
            the expression to be compared with
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.EscapeClause">
            <summary>
            optional escape clause
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression">
            <summary>
            Represents a literal value.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Value">
            <summary>
            Gets string representation of the literal value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Type">
            <summary>
            Gets literal expression value type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.#ctor(System.String,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType)">
            <summary>
            Constructs a literal expression with the given value and type.
            </summary>
            <param name="value">String representation of the literal value.</param>
            <param name="type">Type of the literal value.</param>
            <remarks>INTERNAL ONLY</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.String(System.String)">
            <summary>
            Creates a new literal expression object for a string value.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>SqlLiteralExpression object that represents the value specified.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Integer(System.Int32)">
            <summary>
            Creates a new literal expression object for a 32-bit integer value.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>SqlLiteralExpression object that represents the value specified.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Integer(System.Int64)">
            <summary>
            Creates a new literal expression object for a 64-bit integer value.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>SqlLiteralExpression object that represents the value specified.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Integer(System.String)">
            <summary>
            Creates an integer literal expression for a given string value.
            </summary>
            <param name="value">String representation of the integer literal value.</param>
            <returns>SqlLiteralExpression object that represents the given value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Integer(System.String,System.Boolean)">
            <summary>
            Creates an integer literal expression for a given string value.
            </summary>
            <param name="value">String representation of the integer literal value.</param>
            <param name="isNegative">indicates wether the string should be negated</param>
            <returns>SqlLiteralExpression object that represents the given value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Real(System.Single)">
            <summary>
            Creates a new literal expression object for a 32-bit float value.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>SqlLiteralExpression object that represents the value specified.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Real(System.Double)">
            <summary>
            Creates a new literal expression object for a 64-bit float value.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>SqlLiteralExpression object that represents the value specified.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Real(System.String)">
            <summary>
            Creates an real literal expression for a given string value.
            </summary>
            <param name="value">String representation of the integer literal value.</param>
            <returns>SqlLiteralExpression object that represents the given value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Real(System.String,System.Boolean)">
            <summary>
            Creates an real literal expression for a given string value.
            </summary>
            <param name="value">String representation of the integer literal value.</param>
            <param name="isNegative">indicates wether the string should be negated</param>
            <returns>SqlLiteralExpression object that represents the given value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Numeric(System.String)">
            <summary>
            Creates numeric literal expression for a given string value.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>Literal expression that represents NULL value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Numeric(System.String,System.Boolean)">
            <summary>
            Creates numeric literal expression for a given string value.
            </summary>
            <param name="value">Expression literal value.</param>
            <param name="isNegative">indicates wether the string should be negated</param>
            <returns>Literal expression that represents NULL value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Binary(System.String)">
            <summary>
            Creates a binary (32-bit hex number) literal expression for a given value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Null(System.String)">
            <summary>
            Creates NULL value expression.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>Literal expression that represents NULL value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Default(System.String)">
            <summary>
            Creates DEFAULT value expression.
            </summary>
            <param name="value">Expression literal value.</param>
            <returns>Literal expression that represents DEFAULT value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.Identifier(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Creates a literal expression object for a given Sql identifier.
            </summary>
            <param name="identifier">Sql identifier that holds the literal value.</param>
            <returns>SqlLiteralExpression object that represents the identifier specified.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.StringLiteralExpression">
            <summary>
            Represents string literal value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.UnicodeStringLiteralExpression">
            <summary>
            Represents unicode string literal value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.NullLiteralExpression">
            <summary>
            Represents NULL literal value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.DefaultLiteralExpression">
            <summary>
            Represents DEFAULT literal value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.IdentifierLiteralExpression">
            <summary>
            Represents Sql identifier literal value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.NumericLiteralExpression">
            <summary>
            Represents numeric literal value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.IntegerLiteralExpression">
            <summary>
            Represents an integer literal expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.RealLiteralExpression">
            <summary>
            Represents a real literal expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.BinaryLiteralExpression">
            <summary>
            Represents a binary literal expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression.MoneyLiteralExpression">
            <summary>
            Represents a money literal expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword">
            <summary>
            Represents Sql CREATE LOGIN PASSWORD expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.Password">
            <summary>
            Gets SqlLiteralExpression which is the password value in CREATE LOGIN PASSWORD expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.IsHashed">
            <summary>
            Gets bool indicating is the HASHED option is present in CREATE LOGIN PASSWORD expression.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.MustChange">
            <summary>
            Gets bool indicating is the MUST_CHANGE option is present in CREATE LOGIN PASSWORD expression.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption">
            <summary>
            Represents the MAXDOP index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates a SqlMaxDegreeOfParallelismIndexOption object.
            </summary>
            <param name="degreeOfParallelism">Represents the integer value for new object.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,System.Boolean)">
            <summary>
            Creates a SqlMaxDegreeOfParallelismIndexOption object, without checking the correctness of degree of parallelism provided.
            </summary>
            <param name="degreeOfParallelism">Represents the integer valud for new object.</param>
            <param name="isValid">Represents whether new object is valid or not.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.DegreeOfParallelism">
            <summary>
            Gets SqlLiteralExpression which is the value for this object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption.IsValid">
            <summary>
            Gets the boolean value which indicates whether this max degree of parallelism index option is valid.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause">
            <summary>
            represents a action clause of a merge specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.MergeConditionType">
            <summary>
            condtion that applies to this merge action clause
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.SearchCondition">
            <summary>
            an addition, optional, search condition for the Merge Action Clause
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.Action">
            <summary>
            the action to perform which the criteria of the action clause is met
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification">
            <summary>
            represents a merge specification in Transact SQL
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Alias">
            <summary>
            SqlIdentifier which serves as an alias .  Maybe null if no alias was specified
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Source">
            <summary>
            source table expression of the merge specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.OnClause">
            <summary>
            on clause of the merge specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.ActionClauses">
            <summary>
            Action clauses associated with this merge specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMissingInsertSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMissingInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMissingInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMissingInsertSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption">
            <summary>
            Represents CREATE/ALTER WITH RETURNS NULL ON NULL INPUT option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption">
            <summary>
            Represents CREATE/ALTER WITH ENCRYPTION option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption">
            <summary>
            Represents CREATE/ALTER EXECUTE AS option
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption">
            <summary>
            Base class for Sql module options.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.InvalidOption">
            <summary>
            Represents an invalid CREATE WITH option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.InvalidOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.InvalidOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.InvalidOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.InvalidOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.Type">
            <summary>
            Gets the option type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.TypeMask">
            <summary>
            Returns internal type mask.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.DisplayName">
            <summary>
            Gets option display name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption.Create(System.String)">
            <summary>
            Creates a module option for a given option name.
            </summary>
            <param name="name">Option name to create an option object for.</param>
            <returns>Module option object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption">
            <summary>
            Represents CREATE/ALTER WITH RECOMPILE option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption">
            <summary>
            Represents CREATE/ALTER WITH RETURNS NULL ON NULL INPUT option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption">
            <summary>
            Represents CREATE/ALTER WITH SCHEMABINDING option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption">
            <summary>
            Represents CREATE/ALTER WITH VIEW_METADATA option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition">
            <summary>
            Represents Sql multistatement function body definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.AsSqlClrFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.AsSqlInlineFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.AsSqlMultistatementFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.CompoundStatement">
            <summary>
            Get the statement body.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition">
            <summary>
            Represents Sql multistatement table relational function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.IsTableValuedFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.IsInlineTableFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.IsClrFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a SQL CLR function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.BoundTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> that represents the inline table
            variable bound object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.VariableName">
            <summary>
            Gets function return variable name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.ReturnType">
            <summary>
            Gets function return type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.BodyDefinition">
            <summary>
            Gets function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression">
            <summary>
            Represents a boolean expression in the grammar
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression.Expression">
            <summary>
            Has the not boolean operator in front
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullAssignment.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullAssignment.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullAssignment.Value">
            <summary>
            Gets the value (i.e. the righthand side) of an assignment.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullInsertSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullInsertSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullQueryExpression">
            <summary>
            Represents null SqlQueryExpression which serves as a placeholder for 
            unimplemented query expressions.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullQueryExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullQueryExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullQueryExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullQueryExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression">
            <summary>
            Represents null scalar expression which serves as a placeholder for 
            unimplemented scalar expressions.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullScalarExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullTableExpression">
            <summary>
            Represents null table expression which serves as a placeholder for 
            unimplemented table expressions.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier">
            <summary>
            Represents a multi-part name that identifies a database object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.ServerName">
            <summary>
            Server name of this object identifier.  Maybe null if it was not specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.DatabaseName">
            <summary>
            Database name of this object identifier.  Maybe null if it was not specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.SchemaName">
            <summary>
            Schema name of this object identifier.  Maybe null if it was not specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.ObjectName">
            <summary>
            object name of this object identifier
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.IsMultiPartName">
            <summary>
            Gets a value that indicates whether the object identifier is a multi-part
            name.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.OnePartObjectIdentifier">
            <summary>
            Represents 1-part name object identifier.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.OnePartObjectIdentifier.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.TwoPartObjectIdentifier">
            <summary>
            Represents 2-part name object identifier.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.TwoPartObjectIdentifier.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.ThreePartObjectIdentifier">
            <summary>
            Represents 3-part name object identifier.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.FourPartObjectIdentifier">
            <summary>
            Represents 4-part name object identifier.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.MultiPartObjectIdentifier">
            <summary>
            Represents N-part name object identifier.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier.MultiPartObjectIdentifier.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference">
            <summary>
            Represents a reference to Sql object that could be either directly using an 
            identifier, or inderictly using a variable reference.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.ObjectIdentifier">
            <summary>
            Gets module name.
            </summary>
            <remarks>Module name and variable are mutually exclusive.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.Variable">
            <summary>
            Gets a reference to a locally defined variable that represents the module name.
            </summary>
            <remarks>Module name and variable are mutually exclusive.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnClauseError">
            <summary>
            represents a missing or malformed On clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnClauseError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnClauseError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnClauseError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnClauseError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption">
            <summary>
            Represents the ONLINE index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlOnlineIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlOnlineIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption">
            <summary>
            Represents the OPTIMIZE_FOR_SEQUENTIAL_KEY index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlOptimizeForSequentialKeyIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlOptimizeForSequentialKeyIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption">
            <summary>
            Represents the RESUMABLE index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlResumableIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlResumableIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption">
            <summary>
            Represents the BUCKET_COUNT index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates a SqlBucketCountIndexOption object.
            </summary>
            <param name="bucketCount">Represents the bucket count value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption.BucketCount">
            <summary>
            Gets the bucket count value for this SqlBucketCountIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption">
            <summary>
            Represents the COMPRESSION_DELAY index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates a SqlCompressionDelayIndexOption object.
            </summary>
            <param name="compressionDelay">Represents the compression delay value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption.CompressionDelay">
            <summary>
            Gets the compression delay value for this SqlCompressionDelayIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption">
            <summary>
            Represents the MAX_DURATION index option in Sql index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates a SqlMaxDurationIndexOption object.
            </summary>
            <param name="maxDuration">Represents the max duration value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption.MaxDuration">
            <summary>
            Gets the max duration value for this SqlMaxDurationIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause">
            <summary>
            Represents OFFSET-FETCH clause, used in ORDER BY clause.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause.Offset">
            <summary>
            The OFFSET value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause.Fetch">
            <summary>
            The FETCH value. Can be null.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause">
            <summary>
            Represents an ORDER BY clause.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.Items">
            <summary>
            The collection of items to order by
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.OffsetFetchClause">
            <summary>
            The offset-fetch clause of the order by. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem">
            <summary>
            Order by item for the OrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.SortOrder">
            <summary>
            The order option : descending or ascending or none
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.Expression">
            <summary>
            The expression to order by
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause">
            <summary>
            An output clause for a dml statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause.OutputExpressions">
            <summary>
            expressions to output
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause">
            <summary>
            an output into clause for a dml statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause.IntoClause">
            <summary>
            Gets into clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption">
            <summary>
            Represents the PAD_INDEX index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlPadIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlPadIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration">
            <summary>
            Represents Sql parameter declaration.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration.IsOutput">
            <summary>
            Gets a value that specifies whether the parameter is an output parameter.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration.IsReadOnly">
            <summary>
            Gets a value that specifies whether the parameter is read only.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOptionType)">
            <summary>
            Constructs a SqlParameterOption object with the type specified.
            </summary>
            <param name="type">Parameter option type.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.Output">
            <summary>
            Creates and returns a new OUTPUT option object.
            </summary>
            <returns>SqlParameter object that represents OUTPUT.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.ReadOnly">
            <summary>
            Creates and returns a new READONLY option object.
            </summary>
            <returns>SqlParameter object that represents READONLY.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.Create(System.String)">
            <summary>
            Creates a parameter option for a given option name.
            </summary>
            <param name="name">Option name to create a SqlParameterOption object for.</param>
            <returns>SqlParameterOption object that represents the given name.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.OutputOption">
            <summary>
            Represents parameter OUTPUT options.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.ReadOnlyOption">
            <summary>
            Represents READONLY parameter option.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterOption.InvalidOption">
            <summary>
            Represents an invalid parameter option.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause">
            <summary>
            Represetns T-SQL PIVOT table clause.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.AggregateFunctionName">
            <summary>
            Gets PIVOT operator aggrigation function name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.AggregatedColumns">
            <summary>
            Gets the value columns of the PIVOT operator.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.PivotedColumn">
            <summary>
            Gets the pivot column of the PIVOT operator.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.ColumnList">
            <summary>
            Gets list of values in the pivot column that will become the column names
            of the output table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression">
            <summary>
            Represents T-SQL PIVOT table expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Source">
            <summary>
            Gets the PIVOT operator source table expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.PivotClause">
            <summary>
            Gets PivotClause object which specifies PIVOT operator output table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Alias">
            <summary>
            Gets PIVOT table alias.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint">
            <summary>
            Represent a column PRIMARY KEY constraint.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification">
            <summary>
            Represents the storage specification for statements such as CREATE TABLE and CREATE INDEX etc.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition">
            <summary>
            Represents Sql stored procedure definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Name">
            <summary>
            Gets stored procedure name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Number">
            <summary>
            Gets procedure group number.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Parameters">
            <summary>
            Gets the parameter declarations for the stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.IsForReplication">
            <summary>
            Gets a value that specifies whether the stored procedure is available for replication.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Options">
            <summary>
            Get procedure options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression">
            <summary>
            Represent a Join Table Expression that is qualified (i.e. has an on clause)
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression.OnClause">
            <summary>
            On clause associated w/ this join table expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification">
            <summary>
            A query specification consisting of a select clause, and optionally, a from, where, having, and group by clauses
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.SelectClause">
            <summary>
            Gets SELECT clause of the query specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.IntoClause">
            <summary>
            Gets INTO clause of the query specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.FromClause">
            <summary>
            Gets FROM clause of this query specification.  May be empty but will not be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.WhereClause">
            <summary>
            Gets WHERE clause of the query specification.  May be empty but will not be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.GroupByClause">
            <summary>
            Gets GROUP BY clause of the query specification.  May be empty but will not be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.HavingClause">
            <summary>
            Gets HAVING clause of the query specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.OrderByClause">
            <summary>
            Gets ORDER BY clause of the query specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.ForClause">
            <summary>
            Gets FOR xml or FOR browse clause of the query specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause">
            <summary>
            Represents T-SQL With Clause that can be applied to a query expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.CanBeBoundIndependently">
            <summary>
            Gets a value that indicates whether a SqlCodeObject can be bound
            independently. This property is used to determine if an object in the
            children collection of SqlStatementError can be bound on its own.
            Unless the object itself is a statement (i.e. SqlStatement), it may
            require to be contained in a valid statement as a requirement of binding.
            Objects that can be bound regardless whether or not they are contained in
            a valid statement should override this property and return true.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.CommonTableExpressions">
            <summary>
            Gets the list of Common Table Expressions (CTE) in the clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem">
            <summary>
            Represents the RollUp grouping set
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem.Items">
            <summary>
            The Arguments for the rollup grouping set
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression">
            <summary>
            represents a row constructor in TSQL
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression.Values">
            <summary>
            Collection of scalar value expressions for this row constructor expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>        
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition">
            <summary>
            Represents Sql scalar CLR function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.IsTableValuedFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.IsInlineTableFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.IsClrFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a SQL CLR function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.ReturnType">
            <summary>
            Gets function return type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.BodyDefinition">
            <summary>
            Gets function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError">
            <summary>
            Represents an error scalar expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.Identifiers">
            <summary>
            Gets an IEnumerable object that allows for enumerating over all 
            identifiers in the scalar expression error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType">
            <summary>
            Represents Sql scalar function return type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.AsSqlScalarFunctionReturnType">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.AsSqlTableFunctionReturnType">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.DataType">
            <summary>
            Gets function return datatype specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression">
            <summary>
            Represents a scalar reference expression that could be a column reference or 
            a UDT property reference.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.GetBoundObjectForIdentifier(System.Int32)">
            <summary>
            Returns the bound object for the identifier specified by its index in the
            expression multipart identifier.
            </summary>
            <param name="index">Index of the identifier in this expression multipart identifier.</param>
            <returns>IMetadataObject object is one is found; otherwise, null.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.SqlColumnOrPropertyRefExpression">
            <summary>
            Private class that represents either a column or UDT property ref 
            expression. At parse time we cannot determine whether the multipart name
            references a column or a UDT property. For instance, a 3-part name can be
            interpreted as S.T.C, T.C.P or C.P.P. This can only be determined after
            we bind the expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.SqlColumnOrPropertyRefExpression.ColumnOrPropertyName">
            <summary>
            Returns the name of the column or property.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.MultipartIdentifier">
            <summary>
            Gets the list of identifiers that make up the scalar ref expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.ToString">
            <summary>
            Returns a string representation of the scalar multi-part identifier.
            </summary>
            <returns>The string representation of the scalar reference.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition">
            <summary>
            Represents Sql scalar relational function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.IsTableValuedFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.IsInlineTableFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.IsClrFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a SQL CLR function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.ReturnType">
            <summary>
            Gets function return type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.BodyDefinition">
            <summary>
            Gets function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression">
            <summary>
            Represents scalar sub-query expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.QueryExpression">
            <summary>
            The query expression that defines the scalar subquery
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment">
            <summary>
            Represents variable assignment expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Variable">
            <summary>
            Gets the variable for which a value is to be assigned.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Value">
            <summary>
            Gets the value (i.e. the righthand side) of an assignment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression">
            <summary>
            Represents a variable reference.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.BoundVariable">
            <summary>
            Gets thw <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable"/> which this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression.VariableName">
            <summary>
            Gets the name of the variable.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpressionError">
            <summary>
            represents a missing variable, ex: set  = expr
            </summary>
            <summary>
            represents a missing variable, ex: set  = expr
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpressionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpressionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript">
            <summary>
            represents a script of Sql which may contain multiple batches
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Statement">
            <summary>
            Gets the statement that encloses the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Batches">
            <summary>
            Gets the collection of batches contained by this script.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.RetrieveAllIdentifiers">
            <summary>
            Retrieves and returns a list of all SqlIdentifier objects in the script.
            </summary>
            <returns>List of SqlIdentifier objects.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Children">
            <summary>
            returns the batches contained in this script
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.Errors">
            <summary>
            returns the errors in this script
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.IsIncrementalMode">
            <summary>
            Gets a value indicating whether script has been parsed in incremental mode.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Output an xml representation of the script
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression">
            <summary>
            Searched case expression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression.WhenClauses">
            <summary>
            The collection of WHEN clauses of a searched CASE expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause">
            <summary>
            Searched case expression of the form: 
                   CASE 
                        WHEN boolean-expression1 THEN result1
                        ...
                        ELSE else-result
                    END
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.WhenExpression">
            <summary>
            Gets the the test expression of a searched CASE expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.ThenExpression">
            <summary>
            The result scalar expression of a searched CASE expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause">
            <summary>
            Select clause of a Select Statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.Top">
            <summary>
            The top specification associated w/ this object maybe empty if no top specification is present
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.IsDistinct">
            <summary>
            returns whether the select clause is distinct or not
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.SelectExpressions">
            <summary>
            List of select expressions in this select clause
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause.#ctor(System.Boolean,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,System.Collections.Generic.List{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectExpression})">
            <summary>
            Constructs a SqlSelectClause given whether DISTINCT was specified, Top clause and select-list
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause.IntoTarget">
            <summary>
            Gets into target.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression">
            <summary>
            represents a scalar expression in a select clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Alias">
            <summary>
            optional alias assigned to the select expression, maybe null if no alias is present
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Expression">
            <summary>
            The scalar expression 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression.SqlSelectIdentityFunctionExpression">
            <summary>
            This PRIVATE class represents identity function select scalar expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification">
            <summary>
            represents a top level select specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.QueryExpression">
            <summary>
            the query expression of the select specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.OrderByClause">
            <summary>
            having clause of the select specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.ForClause">
            <summary>
            for xml or for browse clause of the select specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource">
            <summary>
            represents a select specification which is the source for an insert specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource.SelectSpecification">
            <summary>
            the select specification of the insert source
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression">
            <summary>
            represents a * (star) expression in a select clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression.Qualifier">
            <summary>
            the table ref qualifier for the star expression.  may be null if one is not specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression">
            <summary>
            Represents Sql SELECT local variable assignment.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression.VariableAssignment">
            <summary>
            Gets a SqlVariableAssignment object which represents the varaible 
            assignment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause">
            <summary>
            represents a set clause of an update specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause.Assignments">
            <summary>
            the assignments of the set clause
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClauseError">
            <summary>
            represents a missing or mal-formed set clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClauseError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClauseError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClauseError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClauseError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression">
            <summary>
            Simple case expression of the form: 
                   CASE scalar-expression 
                        WHEN scalar-expression1 THEN result1
                         .... 
                        ELSE else-result 
                    END
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.TestExpression">
            <summary>
            The scalar expression that is the test expression for a simple case-expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.WhenClauses">
            <summary>
            The collection of WHEN clauses of a simple CASE expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem">
            <summary>
            Represents the simple group by item
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem.Expression">
            <summary>
            Expression that represents the simpple group by item
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause">
            <summary>
            Represents a simple order by clause.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause.Items">
            <summary>
            The collection of items to order by
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem">
            <summary>
            Order by item for the SimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.SortOrder">
            <summary>
            The order option : descending or ascending or none
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.ColumnName">
            <summary>
            The column name to order by
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause">
            <summary>
            WHEN clause of a simple case expression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.WhenExpression">
            <summary>
            The scalar expression that is the test expression of a simple CASE expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.ThenExpression">
            <summary>
            The scalar expression that is the result expression of a simple CASE expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption">
            <summary>
            Represents the SORTED_DATA index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlSortedDataIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlSortedDataIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption">
            <summary>
            Represents the SORTED_DATA_REORG index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlSortedDataReorgIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlSortedDataReorgIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption">
            <summary>
            Represents the SORT_IN_TEMPDB index option in Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlSortInTempDbIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlSortInTempDbIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption">
            <summary>
            Represents the STATISTICS_INCREMENTAL index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlStatisticsIncrementalIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlStatisticsIncrementalIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption">
            <summary>
            Represents the STATSTICS_NORECOMPUTE index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlStatisticsNoRecomputeIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlStatisticsNoRecomputeIndexOption object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption">
            <summary>
            Represents the STATSTICS_ONLY index option in the Sql Index definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Creates a SqlStatisticsOnlyIndexOption object.
            </summary>
            <param name="value">Represents the integer value for the object to be created.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue)">
            <summary>
            Creates a SqlStatisticsOnlyIndexOption object.
            </summary>
            <param name="onOffValue">Represents ON/OFF value for the object to be created.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.OnOffValue">
            <summary>
            Gets the ON/OFF value for this SqlStatisticsOnlyIndexOption object.
            Will be SqlOnOffValue.None if this object has a integer value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption.Value">
            <summary>
            Gets the SqlLiteralExpression which represents value assigned for this SqlStatisticsOnlyIndexOption object. 
            Will be null if this object has a value of type ON/OFF.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition">
            <summary>
            Represents Sql table CLR function definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.IsTableValuedFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.IsInlineTableFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a table-valued or scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.IsClrFunction">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition"/> represents
            a SQL CLR function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.ReturnType">
            <summary>
            Gets function return type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.OrderByClause">
            <summary>
            Gets function order-by clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.BodyDefinition">
            <summary>
            Gets function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression">
            <summary>
            represents a inline table expression 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression.Rows">
            <summary>
            Collection of row constructor expressions for this table constructor expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource">
            <summary>
            represents a table constructor (values clause) used in an insert specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource.TableConstructorExpression">
            <summary>
            Gets the TableConstructorExpression for the insert source.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition">
            <summary>
            Represents SQL table definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.ColumnDefinitions">
            <summary>
            Gets a collection of all columns that belong to the table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.Constraints">
            <summary>
            Gets a collection of all table constraints.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.TemporalPeriodDefinitions">
            <summary>
            Gets a collection of all temporal periods that belong to the table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError">
            <summary>
            Represents an error table expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError.Identifiers">
            <summary>
            Gets an IEnumerable object that allows for enumerating over all 
            identifiers in the scalar expression error.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType">
            <summary>
            Represents Sql table function return type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.AsSqlScalarFunctionReturnType">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.AsSqlTableFunctionReturnType">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.TableDefinition">
            <summary>
            Gets function return table definition specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint">
            <summary>
            Table hint that has one of the values defined in SqlTableHintType enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.Type">
            <summary>
            Type of the table hint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.IsTableHint">
            <summary>
            Property returning true indicating that it is a flag table hint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint.AsSqlTableHint">
            <summary>
            Property that returns this
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression">
            <summary>
            concrete class which represents a reference to a object (table or view) in the database
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Identifiers">
            <summary>
            Gets an IEnumerable object that allows for enumerating over all 
            identifiers in the column ref expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Hints">
            <summary>
            Optional Table hints specified with keyword "WITH"
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.ObjectIdentifier">
            <summary>
            3 part name of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Alias">
            <summary>
            SqlIdentifier associated with this table.  Maybe null if no alias was specified
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression">
            <summary>
            Represents a reference to a table-valued function.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.ObjectIdentifier">
            <summary>
            Gets 3 part name of the object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Alias">
            <summary>
            Gets table-valued function reference alias.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Arguments">
            <summary>
            Gets the collection of arguments of the function invocation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.ColumnList">
            <summary>
            Gets the list of output column aliases.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression">
            <summary>
            Represents a reference to a table variable.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Name">
            <summary>
            Gets table variable name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Alias">
            <summary>
            Gets SqlIdentifier associated with this table.
            </summary>
            <remarks>Maybe null if no alias was specified.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression">
            <summary>
            Represents a scalar expression that invokes a table method of a UDT.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Arguments">
            <summary>
            Gets the collection of arguments of the method invocation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Alias">
            <summary>
            Gets table-valued function reference alias.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.ColumnList">
            <summary>
            Gets the list of output column aliases.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression">
            <summary>
            Target table data source
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.TargetColumnList">
            <summary>
            Columns in which data will be inserted
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Name">
            <summary>
            Name of the target; this can be the name of a table, view, inline user TVF or a 
            system TVF such as OpenRowset, OpenQuery or OpenDataSource.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Arguments">
            <summary>
            The argument list if the target is an inline user TVF or a system TVF such as 
            OpenRowset, OpenQuery or OpenDataSource.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.OpenDataSourceObject">
            <summary>
            If Name is OpenDataSource then this is the 3-part name of the object that is specified following OpenDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.OpenDataSourceCommandString">
            <summary>
            If the target is OpenDataSource then this is the command string that is followed specified following OpenDataSource
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.TableHints">
            <summary>
            Table Hints
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Name">
            <summary>
            Gets the period name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Type">
            <summary>
            Gets the period type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.ToString">
            <summary>
            Returns a string representation of the period type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.RowStartColumnName">
            <summary>
            Gets row start column name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.RowEndColumnName">
            <summary>
            Gets row start column name
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification">
            <summary>
            represents a top specification on in a select clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.Value">
            <summary>
            Top Value 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.IsPercent">
            <summary>
            Indicates that the query returns only the first expression percent of rows from the result set.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.IsWithTies">
            <summary>
            Specifies that additional rows be returned from the base result set with the same value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction">
            <summary>
            Sql trigger action.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction.Type">
            <summary>
            Gets the action type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction.DisplayName">
            <summary>
            Gets the action display name.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError">
            <summary>
            Represents invalid Sql trigger definition.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.IsNotForReplication">
            <summary>
            Gets a value that indicates whether NOT FOR REPLICATION is specified.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.IsWithAppend">
            <summary>
            Gets a value that specifies that an additional trigger of an existing type should be added.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.TargetType">
            <summary>
            Gets trigger type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Events">
            <summary>
            Get trigger events.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Actions">
            <summary>
            Get trigger actions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.TargetName">
            <summary>
            Gets target table of view name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinitionError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent">
            <summary>
            Sql trigger event.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent.Name">
            <summary>
            Gets the event name.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression">
            <summary>
            Represents a scalar expression that retrieves a field or property of a UDT
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression">
            <summary>
            Represents a scalar expression that invokes a method of a UDT.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression.Arguments">
            <summary>
            Gets the collection of arguments of the method invocation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression">
            <summary>
            Represents a scalar expression that retrieves a static field or property of a UDT.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression">
            <summary>
            Represents a scalar expression that invokes static methods of a UDT.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression.Arguments">
            <summary>
            Gets the collection of arguments of the method invocation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression">
            <summary>
            A class that represents a unary scalar expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Operator">
            <summary>
            The type of the unary scalar expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Expression">
            <summary>
            The expression being acted upon.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression.IsValidFilterExpressionConstant">
            <summary>
            Checks if this is a valid Sql Filter expression.
            </summary>
            <returns>Returns true if valid Sql Filter expression, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint">
            <summary>
            Represent a column UNIQUE constraint.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause">
            <summary>
            Represetns T-SQL PIVOT table clause.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.ValueColumn">
            <summary>
            Gets the value columns of the PIVOT operator.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.PivotedColumn">
            <summary>
            Gets the pivot column of the PIVOT operator.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.ColumnList">
            <summary>
            Gets list of values in the pivot column that will become the column names
            of the output table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression">
            <summary>
            Represents T-SQL UNPIVOT table expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.ValueAndPivotedColumns">
            <summary>
            Gets an enumerator over value and pivoted columns of unpivoted clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Source">
            <summary>
            Gets the PIVOT operator source table expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.UnpivotClause">
            <summary>
            Gets UnpivotClause object which specifies PIVOT operator output table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Alias">
            <summary>
            Gets PIVOT table alias.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression">
            <summary>
            Represent a Join Table Expression that is qualified (i.e. has an on clause)
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression">
            <summary>
            Represents a boolean function (namely Update)
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression.ColumnName">
            <summary>
            Theneme of the column to test
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction">
            <summary>
            represents a update action of a merge specification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction.SetClause">
            <summary>
            Set Clause of the update action
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction.Children">
            <summary>
            Gets child objects of the current object.
            </summary>  
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification">
            <summary>
            Represents an update specification in Transact-SQL.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification.SetClause">
            <summary>
            Gets SET clause of the update specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression">
            <summary>
            Represents user-defined scalar function invocation.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.BoundFunction">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarFunction"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.ObjectIdentifier">
            <summary>
            Name of the function being invoked
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource">
            <summary>
            /// represents a values clause used in an insert merge action 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource.Values">
            <summary>
            Collection of scalar value expressions 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource.Children">
            <summary>
            Gets child objects of the current object.
            </summary>        
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment">
            <summary>
            represents a assignment a single value to both a variable and a column
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Value">
            <summary>
            Gets the value (i.e. the righthand side) of an assignment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Variable">
            <summary>
            the variable being assigned to
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Column">
            <summary>
            the column being assigned to
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration">
            <summary>
            Base class of all SQL variable declaration objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.BoundVariable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Name">
            <summary>
            Gets the name of the variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Type">
            <summary>
            Gets the data type of the variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Value">
            <summary>
            Gets the variable initial value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition">
            <summary>
            The Create/Alter View Definition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Name">
            <summary>
            The name of the View 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.ColumnList">
            <summary>
            Optional column list 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.QueryExpression">
            <summary>
            the query specifiaction for the view
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.QueryWithClause">
            <summary>
            Gets query-with-clause of the view definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.HasCheckOption">
            <summary>
            inidicates if it was specified with "WITH CHECK OPTION" 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Options">
            <summary>
            Gets view definition options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause">
            <summary>
            Sql Where Clause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration">
            <summary>
            Represents an XmlNamespacesDeclaration for a query expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement">
            <summary>
            Represents Sql ALTER FUNCTION statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement">
            <summary>
            Represents Sql ALTER LOGIN statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.LoginName">
            <summary>
            The SqlIdentifier which is the login name in ALTER LOGIN statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Password">
            <summary>
            Gets SqlLoginPassword which is the PASSWORD in ALTER LOGIN statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.OldPassword">
            <summary>
            Gets SqlLoginPassword which is the OLD_PASSWORD in ALTER LOGIN statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.DefaultDatabase">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_DATABASE option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.DefaultLanguage">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_LANGUAGE option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Credential">
            <summary>
            Gets SqlIdentifier which is the CREDENTIAL option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.CheckExpiration">
            <summary>
            Gets SqlOnOffValue which is the CHECK_EXPIRATION option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.CheckPolicy">
            <summary>
            Gets SqlOnOffLiteral which is the CHECK_POLICY option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.Name">
            <summary>
            Gets SqlIdentifier which is the NAME option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement.NoCredential">
            <summary>
            Gets bool which is the NO CREDENTIAL option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement">
            <summary>
            Represents Sql ALTER PROC statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement">
            <summary>
            Represents Sql ALTER TRIGGER statement.
            </summary>
            
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement">
            <summary>
            Alter View Statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement">
            <summary>
            Represents T-SQL BACKUP CERTIFICATE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement.SqlDumpCertificateStatement">
            <summary>
            This private class differentiate between DUMP and BACKUP CERTIFICATE.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement">
            <summary>
            Represents T-SQL BACKUP DATABASE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement.SqlDumpDatabaseStatement">
            <summary>
            This private class differentiate between DUMP DATABASE and BACKUP DATABASE.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement">
            <summary>
            Represents T-SQL BACKUP LOG statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.SqlDumpLogStatement">
            <summary>
            Represents DUMP LOG statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.SqlBackupTransactionStatement">
            <summary>
            Represents BACKUP TRANSACTION statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement.SqlDumpTransactionStatement">
            <summary>
            Represents DUMP TRANSACTION statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement">
            <summary>
            Represents T-SQL BACKUP MASTER KEY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement.SqlDumpMasterKeyStatement">
            <summary>
            This private class differentiate between DUMP and BACKUP MASTER KEY.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement">
            <summary>
            Represents T-SQL BACKUP SERVICE MASTER KEY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement.SqlDumpServiceMasterKeyStatement">
            <summary>
            This private class differentiate between DUMP and BACKUP SERVICE MASTER KEY.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement">
            <summary>
            Represents T-SQL BACKUP TABLE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement.SqlDumpTableStatement">
            <summary>
            This private class differentiate between DUMP TABLE and BACKUP TABLE.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement">
            <summary>
            Represents the Break statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement">
            <summary>
            Represents a statement consisting of a single comment. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement">
            <summary>
            Represents a series of Sql statements enclosed in BEGIN and END.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Statements">
            <summary>
            Gets the collection of statements that belongs to the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement">
            <summary>
            Represents the Continue statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement">
            <summary>
            Represents Sql ALTER FUNCTION statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement">
            <summary>
            Represents the SQL CREATE INDEX statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.BoundIndex">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex"/> object that represents the 
            created index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.PostBindFinalize">
            <summary>
            Replaces the proxy object in the collection with the "real" IRelationIndex metadata, 
            which has been created by the factory.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IRelationalIndexProxy">
            <summary>
            RelationalIndex proxy class.
            Will finalize the underlying relation index metadata on first access to any property.
            
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.HasDropExistingOption">
            <summary>
            Gets a value that indicates whether the current CREATE INDEX statement is with DROP_EXISTING options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IsUnique">
            <summary>
            Gets boolean value which indicates whether the Index was specified as unique or not.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.ClusterOption">
            <summary>
            Gets the SqlClusterOption which indicates the specified clustering option on the index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Name">
            <summary>
            Gets the SqlIdentifier which is the name of the Index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.TargetObject">
            <summary>
            Gets the SqlObjectIdentifier which indicates the target object for which Index is defined.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IndexedColunms">
            <summary>
            Gets the SqlIndexedColumnCollection which is the collection of columns on which Index is defined.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.IncludedColumns">
            <summary>
            Gets the SqlIdentifierCollection which indicates the collection of columns included in the Index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.FilterClause">
            <summary>
            Gets the SqlFilterClause which is the filter clause specified in the definition of the index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Options">
            <summary>
            Gets the SqlIndexOptionCollection which represents the options mentioned in the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.StorageSpecification">
            <summary>
            Gets the SqlStorageSpecification which represents the ON clause mentioned in the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.FileStream">
            <summary>
            Gets the SqlStorageSpecification which represents the FILESTREAM clause mentioned in the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement">
            <summary>
            Represents Sql CREATE LOGIN FROM ASYMETRIC KEY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.MetadataLoginType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType"/> of the login object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.AsymKeyName">
            <summary>
            Gets SqlIdentifier which is the ASYMETRIC KEY NAME in CREATE LOGIN FROM ASYMETRIC KEY statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Credential">
            <summary>
            Gets SqlIdentifier which is the CREDENTIAL option in CREATE LOGIN FROM ASYMETRIC KEY statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement">
            <summary>
            Represents Sql CREATE LOGIN FROM CERTIFICATE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.MetadataLoginType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType"/> of the login object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.CertificateName">
            <summary>
            Gets SqlIdentifier which is the CERTIFICATE NAME in CREATE LOGIN FROM CERTIFICATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Credential">
            <summary>
            Gets SqlIdentifier which is the CREDENTIAL option in CREATE LOGIN FROM CERTIFICATE statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement">
            <summary>
            Represents Sql CREATE LOGIN FROM WINDOWS statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.MetadataLoginType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType"/> of the login object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.DefaultDatabase">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_DATABASE option in CREATE LOGIN FROM WINDOWS statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.DefaultLanguage">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_LANGUAGE option in CREATE LOGIN FROM WINDOWS statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement">
            <summary>
            Represents Sql CREATE LOGIN WITH PASSWORD statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.MetadataLoginType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType"/> of the login object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.SqlPassword">
            <summary>
            Gets SqlCreateLoginPassword which is the password in CREATE LOGIN WITH PASSWORD statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Sid">
            <summary>
            Gets SqlIdentifier which is the SID option in CREATE LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.DefaultDatabase">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_DATABASE option in CREATE LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.DefaultLanguage">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_LANGUAGE option in CREATE LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Credential">
            <summary>
            Gets SqlIdentifier which is the CREDENTIAL option in CREATE LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.CheckExpiration">
            <summary>
            Gets SqlOnOffValue which is the CHECK_EXPIRATION option in CREATE LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.CheckPolicy">
            <summary>
            Gets SqlOnOffLiteral which is the CHECK_POLICY option in CREATE LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement">
            <summary>
            Represents Sql CREATE PROC statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement">
            <summary>
            Represents Sql CREATE ROLE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.BoundRole">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> object that represents the 
            created database role.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Creates a SqlCreateRoleStatement object.
            </summary>
            <param name="name">Name of the new role.</param>
            <param name="owner">Owner for the new role specified by AUTHORIZATION keyword.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Name">
            <summary>
            Gets name of the role.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Owner">
            <summary>
            Gets owner of the role specified by AUTHORIZATION keyword.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement">
            <summary>
            Represents sql CREATE SCHEMA statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.BoundSchema">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that represents the created schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement})">
            <summary>
            Creates a SqlCreateSchemaStatement object.
            </summary>
            <param name="name">Specifies the name of the schema.</param>
            <param name="owner">Specifies the owner of the schema.</param>
            <param name="schemaElements">Specifies the list of schema elements.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Name">
            <summary>
            Gets SqlIdentifier which is the user name in CREATE SCHEMA statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Owner">
            <summary>
            Gets SqlIdentifier which is the owner in CREATE SCHEMA statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.SchemaElements">
            <summary>
            Gets SqlSchemaElementCollection which is the schema element in CREATE SCHEMA statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement">
            <summary>
            Create synonym statement.
            </summary>
            <summary>
            Represents Sql CREATE SYNONYM statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.BoundSynonym">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object that represents the 
            created synonym.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Name">
            <summary>
            Gets synonym name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.BaseObjectName">
            <summary>
            Gets base object name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement">
            <summary>
            Represents Sql CREATE TABLE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.BoundTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement"/> bound table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Name">
            <summary>
            Gets table name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Definition">
            <summary>
            Gets definition of the table to be created.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.StorageSpecification">
            <summary>
            Gets the storage specification for this table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.LargeDataStorageInformation">
            <summary>
            Gets the storage information of large data in the table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement">
            <summary>
            Represents Sql CREATE TRIGGER statement.
            </summary>
            
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement">
            <summary>
            Represents the Sql CREATE TYPE statement which defines a User Defined Data Type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedDataTypeNullState)">
            <summary>
            Creates a SqlCreateUserDefinedDataTypeStatement object.
            </summary>
            <param name="name">Represents the name information of the new data type.</param>
            <param name="dataType">Represents the specification of the new data type.</param>
            <param name="nullState">Represents whether the new data type is allowed to have null values.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.DataType">
            <summary>
            Gets the SqlDataTypeSpecification which is the information about the User Defined Data Type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.NullState">
            <summary>
            Gets the SqlUserDefinedDataTypeNullState which represents whether this data type is allowed to have null values.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement">
            <summary>
            Represents the Sql CREATE TYPE statement which defines a User Defined Table Type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Creates a SqlCreateUserDefinedTableTypeStatement.
            </summary>
            <param name="name">Represents the name information of the new data type.</param>
            <param name="tableDefinition">Represents the table definition of the user defined table taype.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.TableDefinition">
            <summary>
            Gets SqlTableDefinition which is the definition of this User Defined Table Type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement">
            <summary>
            Represents the sql CREATE TYPE statement which creates a user defined type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Creates a SqlCreateUserDefinedTypeStatement object.
            </summary>
            <param name="name">Represents the name information of the new data type.</param>
            <param name="clrClassSpecifier">Represents assembly and class information about User Defined Type.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.ClrClassSpecifier">
            <summary>
            Gets SqlClrClassSpecifier which contains assembly and class information about User Defined Type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement">
            <summary>
            Represents Sql CREATE USER FROM ASYMMETRIC KEY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.AsymKeyName">
            <summary>
            Gets the SqlIdentifier which is the ASYMETRIC KEY NAME in CREATE USER FROM ASYMMETRIC KEY statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement">
            <summary>
            Represents Sql CREATE USER FROM CERFIFICATE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.CertificateName">
            <summary>
            Gets the SqlIdentifier which is the CERTIFICATE NAME in CREATE USER FROM CERFIFICATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement">
            <summary>
            Represents Sql CREATE USER statement that has implicit authentication.
            </summary>
            <summary>
            Represents Sql CREATE USER statement that has implicit authentication.
            </summary>
            <summary>
            Represents Sql CREATE USER statement that has implicit authentication.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement">
            <summary>
            Represents Sql CREATE USER FROM LOGIN statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.LoginName">
            <summary>
            Gets the SqlIdentifier which is the LOGIN NAME in CREATE USER FROM LOGIN statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement">
            <summary>
            Represents Sql CREATE USER FROM EXTERNAL PROVIDER statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError">
            /// <summary>
            Represents invalid Sql CREATE USER statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatementError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement">
            <summary>
            Represents Sql CREATE USER WITHOUT LOGIN statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement">
            <summary>
            Create View Statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement">
            <summary>
            DBCC statement 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement.CommandType">
            <summary>
            The command type for the DBCC statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement">
            <summary>
            represents a Transact-SQL delete statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement.DeleteSpecification">
            <summary>
            The delete specification for the delete statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement">
            <summary>
            Represents sql DENY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement.#ctor">
            <summary>
            Creates a SqlDenyStatement object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement">
            <summary>
            Drop Aggregate
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement">
            <summary>
            Drop database
            </summary>
            <summary>
            Drop database
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.DatabaseNames">
            <summary>
            List of database names to be droped
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement">
            <summary>
            Drop Default
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement">
            <summary>
            Drop Function
            </summary>
            <summary>
            Drop Function
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement">
            <summary>
            Drop Login
            </summary>
            <summary>
            Drop Login
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.LoginName">
            <summary>
            The name of the login
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement">
            <summary>
            Drop Procedure
            </summary>
            <summary>
            Drop Procedure
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement">
            <summary>
            Drop Rule
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement">
            <summary>
            Drop Schema
            </summary>
            <summary>
            Drop Schema
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.SchemaName">
            <summary>
            The name of the schema
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement">
            <summary>
            Drop Security Policy
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement">
            <summary>
            Drop Sequence
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement">
            <summary>
            Drop Synonym
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement">
            <summary>
            Drop Table
            </summary>
            <summary>
            Drop Table
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement">
            <summary>
            Drop Trigger
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.TargetScope">
            <summary>
            Gets the trigger target scope
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement">
            <summary>
            Drop Type
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.TypeName">
            <summary>
            The name of the type
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement">
            <summary>
            Drop User
            </summary>
            <summary>
            Drop User
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.UserName">
            <summary>
            The name of the user
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement">
            <summary>
            Drop View
            </summary>
            <summary>
            Drop View
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Objects">
            <summary>
            Gets <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection"/> which contains the set of
            objects to be dropped.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement">
            <summary>
            Represents Sql EXECUTE module statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.BoundModule">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICallableModule"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Number">
            <summary>
            Gets procedure group number.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.ReturnValue">
            <summary>
            Gets EXECUTE statement return value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Module">
            <summary>
            Gets a reference to the module to call.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Arguments">
            <summary>
            Gets the parameters to invoke the module with.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.ModuleOption">
            <summary>
            Gets the execute module option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement">
            <summary>
            Represents Sql EXECUTE string statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement">
            <summary>
            Represents sql GRANT statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement.#ctor">
            <summary>
            Creates a SqlGrantStatement object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement">
            <summary>
            Represents the If / If ... Else ... statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.FalseStatement">
            <summary>
            The statement that is executed when the condition is false
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement">
            <summary>
            Represents SQL table variable declare statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Declaration">
            <summary>
            Gets table declaration.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement">
            <summary>
            class which represents a sql insert statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement.InsertSpecification">
            <summary>
            the insert specification of this insert statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement">
            <summary>
            represents a merge statement in transact SQL
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement.MergeSpecification">
            <summary>
            the merge specification of this merge statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement">
            <summary>
            Represents null statement which serves as a placeholder for unimplemented
            statements.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNullStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement">
            <summary>
            Represents T-SQL RESTORE DATABASE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement.SqlLoadDatabaseStatement">
            <summary>
            This private class differentiate between LOAD DATABASE and RESTORE DATABASE.
            The class itself should be private and the check should be performed on
            the base type and ISqlLoadLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement">
            <summary>
            Represents T-SQL RESTORE backup information statement.
            Specifically it represents these statements:
                RESTORE FILELISTONLY
                RESTORE HEADERONLY
                RESTORE LABELONLY
                RESTORE REWINDONLY
                RESTORE VERIFYONLY
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement.SqlLoadInformationStatement">
            <summary>
            This private class differentiate between LOAD and RESTORE.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement">
            <summary>
            Represents T-SQL RESTORE LOG statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.SqlLoadLogStatement">
            <summary>
            Represents LOAD LOG statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.SqlRestoreTransactionStatement">
            <summary>
            Represents RESTORE TRANSACTION statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement.SqlLoadTransactionStatement">
            <summary>
            Represents LOAD TRANSACTION statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement">
            <summary>
            Represents T-SQL RESTORE MASTER KEY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement.SqlLoadMasterKeyStatement">
            <summary>
            This private class differentiate between LOAD and RESTORE RESTORE MASTER KEY.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement">
            <summary>
            Represents T-SQL RESTORE SERVICE MASTER KEY statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement.SqlLoadServiceMasterKeyStatement">
            <summary>
            This private class differentiate between LOAD and RESTORE SERVICE MASTER KEY.
            The class itself should be private and the check should be performed on
            the base type and ISqlDumpLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement">
            <summary>
            Represents T-SQL RESTORE TABLE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement.SqlLoadTableStatement">
            <summary>
            This private class differentiate between LOAD TABLE and RESTORE TABLE.
            The class itself should be private and the check should be performed on
            the base type and ISqlLoadLoadStatement interface.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement">
            <summary>
            Represents Sql RETURN statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.IsReturnStatement">
            <summary>
            Gets a value that indicates whether the current statement is a module return statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Expression">
            <summary>
            Gets return expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement">
            <summary>
            Represents sql REVOKE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement.#ctor">
            <summary>
            Creates a SqlRevokeStatement object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement">
            <summary>
            Represents a select statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.BoundTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object that represents the 
            created table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.QueryWithClause">
            <summary>
            Gets the select statement Common Table Expression (CTE) clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.SelectSpecification">
            <summary>
            The select specifcation for the select statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement">
            <summary>
            Represents Sql local variable assignment statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.VariableAssignment">
            <summary>
            Gets a SqlVariableAssignment object which represents the varaible 
            assignment.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError">
            <summary>
            represents a SET with no body
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatementError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError">
            <summary>
            Represents an error statements.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementError.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement">
            <summary>
            Represents Sql TRY...CATCH statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.TryBlock">
            <summary>
            Gets the statements in the try block.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.CatchBlock">
            <summary>
            Gets the statements in the catch block.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement">
            <summary>
            represents a Transact-SQL Update Statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement.UpdateSpecification">
            <summary>
            the update specification for the update statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement">
            <summary>
            Represents T-Sql USE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.DatabaseName">
            <summary>
            Gets the name of the database used in this statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement">
            <summary>
            Represents a SQL statement that declares a list of scalar variables
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Declarations">
            <summary>
            List of sql declarations.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement">
            <summary>
            The While Statement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts a visitor
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor">
            <summary>
            An implementation of the visitor design pattern for SqlCodeObjects
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1">
            <summary>
            An implementation of the visitor design pattern for SqlCodeObjects
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1">
            <summary>
            An implementation of the visitor design pattern for SqlCodeObjects
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression,`0)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression,`0)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption,`0)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption,`0)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment,`0)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression,`0)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch,`0)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression,`0)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression,`0)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression,`0)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression,`0)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression,`0)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression,`0)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression,`0)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression,`0)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression,`0)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext,`0)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint,`0)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier,`0)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier,`0)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier,`0)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression,`0)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation,`0)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment,`0)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint,`0)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition,`0)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity,`0)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression,`0)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression,`0)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression,`0)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange,`0)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition,`0)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause,`0)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint,`0)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression,`0)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption,`0)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem,`0)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption,`0)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment,`0)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression,`0)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption,`0)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,`0)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,`0)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition,`0)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource,`0)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource,`0)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction,`0)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification,`0)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression,`0)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource,`0)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition,`0)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption,`0)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument,`0)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause,`0)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression,`0)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption,`0)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause,`0)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause,`0)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint,`0)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause,`0)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause,`0)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective,`0)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause,`0)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause,`0)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause,`0)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause,`0)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression,`0)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn,`0)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition,`0)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression,`0)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem,`0)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet,`0)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause,`0)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets,`0)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection,`0)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause,`0)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,`0)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression,`0)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption,`0)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression,`0)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue,`0)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue,`0)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn,`0)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint,`0)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption,`0)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint,`0)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction,`0)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification,`0)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause,`0)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression,`0)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation,`0)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression,`0)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,`0)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword,`0)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption,`0)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause,`0)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification,`0)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource,`0)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption,`0)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption,`0)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption,`0)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption,`0)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption,`0)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption,`0)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption,`0)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption,`0)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption,`0)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression,`0)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression,`0)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,`0)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,`0)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,`0)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference,`0)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption,`0)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption,`0)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption,`0)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption,`0)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption,`0)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption,`0)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause,`0)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause,`0)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem,`0)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause,`0)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause,`0)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption,`0)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration,`0)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause,`0)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression,`0)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint,`0)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification,`0)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition,`0)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression,`0)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification,`0)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause,`0)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem,`0)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression,`0)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition,`0)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType,`0)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression,`0)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression,`0)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment,`0)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression,`0)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,`0)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression,`0)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause,`0)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause,`0)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause,`0)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression,`0)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification,`0)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource,`0)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression,`0)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression,`0)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause,`0)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression,`0)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem,`0)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause,`0)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem,`0)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause,`0)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption,`0)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption,`0)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption,`0)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption,`0)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption,`0)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption,`0)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition,`0)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression,`0)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource,`0)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition,`0)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType,`0)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint,`0)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression,`0)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression,`0)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression,`0)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression,`0)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression,`0)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition,`0)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,`0)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction,`0)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition,`0)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent,`0)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression,`0)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression,`0)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression,`0)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression,`0)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression,`0)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint,`0)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause,`0)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression,`0)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression,`0)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression,`0)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction,`0)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification,`0)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression,`0)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource,`0)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment,`0)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration,`0)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition,`0)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause,`0)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration,`0)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2">
            <summary>
            An implementation of the visitor design pattern for SqlCodeObjects
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression,`1)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression,`1)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption,`1)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption,`1)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment,`1)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression,`1)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch,`1)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression,`1)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression,`1)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression,`1)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression,`1)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression,`1)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression,`1)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression,`1)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression,`1)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression,`1)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext,`1)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint,`1)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier,`1)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier,`1)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier,`1)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression,`1)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation,`1)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment,`1)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint,`1)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition,`1)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity,`1)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression,`1)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression,`1)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression,`1)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange,`1)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition,`1)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause,`1)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint,`1)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression,`1)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption,`1)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem,`1)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption,`1)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment,`1)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression,`1)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption,`1)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,`1)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,`1)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition,`1)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource,`1)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource,`1)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction,`1)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification,`1)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression,`1)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource,`1)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition,`1)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption,`1)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument,`1)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause,`1)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression,`1)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption,`1)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause,`1)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause,`1)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint,`1)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause,`1)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause,`1)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective,`1)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause,`1)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause,`1)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause,`1)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause,`1)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression,`1)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn,`1)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition,`1)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression,`1)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem,`1)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet,`1)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause,`1)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets,`1)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection,`1)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause,`1)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,`1)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression,`1)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption,`1)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression,`1)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue,`1)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue,`1)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn,`1)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint,`1)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption,`1)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint,`1)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction,`1)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification,`1)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause,`1)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression,`1)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation,`1)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression,`1)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,`1)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword,`1)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption,`1)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause,`1)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification,`1)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource,`1)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption,`1)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption,`1)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption,`1)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption,`1)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption,`1)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption,`1)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption,`1)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption,`1)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption,`1)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression,`1)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression,`1)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,`1)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,`1)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,`1)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference,`1)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption,`1)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption,`1)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption,`1)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption,`1)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption,`1)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption,`1)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause,`1)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause,`1)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem,`1)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause,`1)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause,`1)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption,`1)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration,`1)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause,`1)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression,`1)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint,`1)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification,`1)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition,`1)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression,`1)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification,`1)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause,`1)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem,`1)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression,`1)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition,`1)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType,`1)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression,`1)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression,`1)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment,`1)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression,`1)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,`1)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression,`1)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause,`1)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause,`1)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause,`1)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression,`1)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification,`1)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource,`1)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression,`1)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression,`1)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause,`1)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression,`1)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem,`1)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause,`1)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem,`1)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause,`1)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption,`1)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption,`1)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption,`1)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption,`1)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption,`1)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption,`1)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition,`1)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression,`1)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource,`1)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition,`1)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType,`1)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint,`1)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression,`1)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression,`1)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression,`1)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression,`1)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression,`1)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition,`1)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,`1)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction,`1)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition,`1)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent,`1)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression,`1)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression,`1)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression,`1)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression,`1)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression,`1)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint,`1)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause,`1)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression,`1)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression,`1)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression,`1)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction,`1)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification,`1)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression,`1)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource,`1)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment,`1)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration,`1)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition,`1)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause,`1)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration,`1)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor">
            <summary>
            An implementation of the visitor design pattern for SqlStatements
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1">
            <summary>
            An implementation of the visitor design pattern for SqlStatements
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1">
            <summary>
            An implementation of the visitor design pattern for SqlStatements
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`0)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`0)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`0)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`0)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`0)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`0)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`0)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`0)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`0)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`0)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`0)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`0)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`0)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`0)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`0)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`0)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`0)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`0)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`0)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`0)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`0)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`0)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`0)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`0)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`0)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`0)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`0)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`0)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`0)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`0)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`0)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`0)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`0)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`0)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`0)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`0)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`0)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`0)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`0)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`0)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`0)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`0)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`0)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`0)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`0)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`0)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`0)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`0)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`0)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`0)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`0)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`0)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`0)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`0)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`0)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`0)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`0)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`0)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`0)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`0)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`0)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`0)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`0)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`0)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`0)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`0)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`0)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2">
            <summary>
            An implementation of the visitor design pattern for SqlStatements
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`1)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`1)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`1)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`1)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`1)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`1)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`1)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`1)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`1)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`1)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`1)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`1)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`1)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`1)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`1)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`1)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`1)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`1)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`1)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`1)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`1)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`1)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`1)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`1)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`1)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`1)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`1)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`1)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`1)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`1)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`1)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`1)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`1)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`1)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`1)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`1)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`1)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`1)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`1)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`1)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`1)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`1)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`1)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`1)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`1)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`1)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`1)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`1)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`1)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`1)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`1)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`1)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`1)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`1)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`1)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`1)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`1)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`1)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`1)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`1)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`1)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`1)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`1)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`1)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`1)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`1)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`1)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement">
            <summary>
            Represents Sql CREATE LOGIN statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.MetadataLoginType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType"/> of the login object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.BoundLogin">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that represents the 
            created login.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginStatement.Name">
            <summary>
            The SqlIdentifier which is the login name in CREATE LOGIN statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement">
            <summary>
            Abstract base class for Sql CREATE TYPE statements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.BoundDataType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType"/> object that represents the 
            created data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Sets the name to the newly defined type in CREATE TYPE statement.
            </summary>
            <param name="name">Name of the newly defined type.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo)">
            <summary>
            Creates an instance of the class that appropriately represents the CREATE TYPE statement.
            </summary>
            <param name="name">Name of the newly defined data type.</param>
            <param name="createTypeStatementInfo">Type information of the newly defined data type.</param>
            <returns>SqlCreateTypeStatement object if successful, null otherwise.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTypeStatement.Name">
            <summary>
            Gets the SqlObjectIdentifier which is the name in the CREATE TYPE statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement">
            <summary>
            Represents Sql CREATE USER statement base.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.MetadataUserType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> of the user object that this CREATE statement
            represents.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.BoundUser">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents the 
            created login.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.Name">
            <summary>
            Gets SqlIdentifier which is the user name in CREATE USER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement.DefaultSchema">
            <summary>
            Gets SqlIdentifier which is the user default schema in CREATE USER statement.
            Can be null.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStatement">
            <summary>
            Represents Sql EXECUTE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement">
            <summary>
            Represents Sql SET statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement.StatementPhrase">
            <summary>
            Gets a <see cref="T:System.String"/> that describes the current statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase">
            <summary>
            Base class for CREATE and ALTER PROC statements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.IsTrueLastStatement">
            <summary>
            Gets a value that indicates whether the current statement is a true last statement.
            A true last statement is a statement which grammar-wise, consumes all the subsequent
            statements in the batch ex. create / alter proc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.IsModuleStatement">
            <summary>
            Gets a value that indicates whether the current statement represents a module. A module
            statement is a statement that creates or alters a modeule (e.g. CREATE/ALTER PROC/FUNCTION).
            The only exception to the rule above is CREATE/ALTER inline table function. This is because
            it is a single statement and it is more of a view than multi-statement functions. The main
            problem of treating it as a module is the function becomes visible to itself allowing recursive
            references which is not valid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.BoundStoredProc">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> object that represents the 
            created/altered stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.Definition">
            <summary>
            Gets stored procedure definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.Statements">
            <summary>
            Gets the collection of statements included in the compound statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterProcedureStatementBase.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase">
            <summary>
            Base class for CREATE and ALTER TRIGGER statements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.IsTrueLastStatement">
            <summary>
            Gets a value that indicates whether the current statement is a true last statement.
            A true last statement is a statement which grammar-wise, consumes all the subsequent
            statements in the batch ex. create / alter proc.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.IsModuleStatement">
            <summary>
            Gets a value that indicates whether the current statement represents a module. A module
            statement is a statement that creates or alters a modeule (e.g. CREATE/ALTER PROC/FUNCTION).
            The only exception to the rule above is CREATE/ALTER inline table function. This is because
            it is a single statement and it is more of a view than multi-statement functions. The main
            problem of treating it as a module is the function becomes visible to itself allowing recursive
            references which is not valid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.BoundTrigger">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger"/> object that represents the 
            created/altered trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.Definition">
            <summary>
            Gets trigger definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.Statements">
            <summary>
            Gets the collection of statements included in the compound statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterTriggerStatementBase.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase">
            <summary>
            Base class for CREATE and ALTER FUNCTION statements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.IsModuleStatement">
            <summary>
            Gets a value that indicates whether the current statement represents a module. A module
            statement is a statement that creates or alters a modeule (e.g. CREATE/ALTER PROC/FUNCTION).
            The only exception to the rule above is CREATE/ALTER inline table function. This is because
            it is a single statement and it is more of a view than multi-statement functions. The main
            problem of treating it as a module is the function becomes visible to itself allowing recursive
            references which is not valid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.BoundFunction">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction"/> object that represents the 
            created/altered function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.Definition">
            <summary>
            Gets function definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterFunctionStatementBase.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionalStatement">
            <summary>
            Base class for the control of flow statements
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionalStatement.IsConditionalStatement">
            <summary>
            Gets a value that indicates whether this statement is a conditional statement
            (e.g. IF and WHILE statements).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionalStatement.Condition">
            <summary>
            The condition that is evaluated 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionalStatement.TrueStatement">
            <summary>
            The statement that is executed when the condition is evaluated to true
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement">
            <summary>
            Base class for all SQL Data Definition Language (DDL) statements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.IsDdlStatement">
            <summary>
            Gets a value that indicates whether the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> is a DDL statement
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.AsDdlStatement">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> as <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/> if it
            extends it, or <c>null</c> if it does not.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.InitiateBindStatement(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,Microsoft.SqlServer.Management.SqlParser.Binder.StatementBindMode)">
            <summary>
            Initiate bind of an object is executed only if Bind method has been explicitly called on the object.
            This method should avoid resolving or referencing other objects, as they may be not initialized yet.
            The valid reference resolutions or set properties are:
            * Used to initiate and register object metadata stub.
            * Metadata properties used in circular referencing.
            </summary>
            <remarks>
            This method may modify any collections or properties.
            </remarks>
            <param name="bindingContext">Binding context.</param>
            <param name="bindMode">Bind mode.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.FinalizeBindStatement(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,Microsoft.SqlServer.Management.SqlParser.Binder.StatementBindMode)">
            <summary>
            Object will be finalized before its reference is accessed.
            * In sequential mode finalization is done right after bind initiation.
            * In out of order mode finalization is done on first access to the object.
            
            FinalizeBind may be fired in any moment after bind initiation. 
            This includes also during any moment of any other object bind initiation or finalization.
            </summary>
            <remarks>
            This method should not modify any object or properties which does not belong to the finalized object.
            </remarks>
            <param name="bindingContext">Binding context.</param>
            <param name="bindMode">Bind mode.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement.PostBindFinalize">
            <summary>
            PostBindFinalize will be called any time after FinalizeBind.
            If method is called during execution of some other Bind (initiate or finalize) method,
            then it is called right away after the bind initiation and finalization of the current object,
            during the explicit execution of current object Bind method.
            </summary>
            /// <remarks>
            This method may modify any collections or properties.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropStatement">
            <summary>
            Base class for the Drop Object Statements
            </summary>
            <summary>
            Base class for the Drop Object Statements
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropStatement.IsCreateStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL CREATE statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropStatement.IsAlterStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL ALTER statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropStatement.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropStatement.IsDropIfExists">
            <summary>
            Indicator for DROP IF EXISTS statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase">
            <summary>
            Base class for Create /Alter View statements
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase.IsDropStatement">
            <summary>
            Gets a value that indicates whether the current statement is a DDL DROP statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase.TargetObjectType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType"/> value that represents the type of the object
            that is  target of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlStatement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase.BoundView">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> object that represents the 
            created/altered view.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase.Definition">
            <summary>
            The definition for the view 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateAlterViewStatementBase.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition">
            <summary>
            Represents Sql function body definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition.AsSqlClrFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition.AsSqlInlineFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition.AsSqlMultistatementFunctionBodyDefinition">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionBodyDefinition.IsStatementLevelObject">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is a statement level code object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType">
            <summary>
            Represents Sql function return type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType.AsSqlScalarFunctionReturnType">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType.AsSqlTableFunctionReturnType">
            <summary>
            Returns the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionReturnType"/> cast to <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType"/>
            if it is of this type; otherwise, it returns <c>null</c>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression">
            <summary>
            abstract class which represents a scalar expression in a tsql statement
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Creates a scalar expression wrapped in a SqlCollateExpression if collation is not null.
            </summary>
            <param name="expression"> The inner scalar expression</param>
            <param name="collation"> The collation</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression.IsOfType(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ScalarExpressionType)">
            <summary>
            Utility method that returns true if the scalar expression type is of
            a given type.
            </summary>
            <param name="type">Scalar expression type to check for.</param>
            <returns>True if this scalar expression type is of the given type; false, otherwise.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCaseExpression">
            <summary>
            Abstract base class for the two flavors of case expressions
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCaseExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCaseExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCaseExpression.elseExpression">
            <summary>
            Internal field for ELSE expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCaseExpression.ElseExpression">
            <summary>
            The ELSE clause scalar expression in the CASE expression
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtMemberExpression">
            <summary>
            Base class for both instance and static UDT member expressions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtMemberExpression.IsValidFilterExpressionConstant">
            <summary>
            Gets a value that indicates whether this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/> is a valid filter expression constant.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtMemberExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtMemberExpression.MemberName">
            <summary>
            Gets the name of the UDT field, property or method referenced in the expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption">
            <summary>
            Represents index option in the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption.Phrase">
            <summary>
            Gets the <see cref="T:System.String"/> that describes the current index option.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType)">
            <summary>
            Creates a SqlIndexOption object.
            </summary>
            <param name="type">Represents the type of option to create.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption.Type">
            <summary>
            Gets the SqlIndexOptionType which is the type of the index option this object represents.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor">
            <summary>
            Visitor implementing a default traversal for SqlCodeObject
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.VisitList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Visits the SqlCodeObjects in the input list, in order
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1">
            <summary>
            Visitor implementing a default traversal for SqlCodeObject
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.VisitList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Visits the SqlCodeObjects in the input list, in order
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1">
            <summary>
            Visitor implementing a default traversal for SqlCodeObject
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.VisitList``1(System.Collections.Generic.IEnumerable{``0},`0)">
            <summary>
            Visits the SqlCodeObjects in the input list, in order
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression,`0)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression,`0)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption,`0)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption,`0)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment,`0)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression,`0)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch,`0)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression,`0)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression,`0)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression,`0)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression,`0)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression,`0)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression,`0)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression,`0)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression,`0)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression,`0)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext,`0)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint,`0)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier,`0)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier,`0)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier,`0)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression,`0)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation,`0)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment,`0)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint,`0)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition,`0)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity,`0)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression,`0)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression,`0)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression,`0)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange,`0)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition,`0)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause,`0)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint,`0)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression,`0)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption,`0)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem,`0)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption,`0)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment,`0)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression,`0)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption,`0)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,`0)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,`0)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition,`0)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource,`0)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource,`0)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction,`0)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification,`0)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression,`0)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource,`0)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition,`0)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption,`0)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument,`0)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause,`0)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression,`0)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption,`0)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause,`0)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause,`0)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint,`0)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause,`0)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause,`0)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective,`0)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause,`0)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause,`0)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause,`0)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause,`0)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression,`0)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn,`0)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition,`0)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression,`0)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem,`0)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet,`0)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause,`0)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets,`0)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection,`0)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause,`0)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,`0)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression,`0)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption,`0)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression,`0)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue,`0)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue,`0)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn,`0)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint,`0)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption,`0)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint,`0)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction,`0)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification,`0)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause,`0)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression,`0)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation,`0)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression,`0)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,`0)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword,`0)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption,`0)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause,`0)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification,`0)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource,`0)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption,`0)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption,`0)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption,`0)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption,`0)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption,`0)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption,`0)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption,`0)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption,`0)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption,`0)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression,`0)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression,`0)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,`0)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,`0)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,`0)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference,`0)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption,`0)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption,`0)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption,`0)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption,`0)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption,`0)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption,`0)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause,`0)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause,`0)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem,`0)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause,`0)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause,`0)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption,`0)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration,`0)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause,`0)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression,`0)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint,`0)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification,`0)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition,`0)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression,`0)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification,`0)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause,`0)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem,`0)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression,`0)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition,`0)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType,`0)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression,`0)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression,`0)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment,`0)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression,`0)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,`0)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression,`0)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause,`0)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause,`0)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause,`0)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression,`0)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification,`0)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource,`0)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression,`0)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression,`0)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause,`0)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression,`0)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem,`0)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause,`0)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem,`0)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause,`0)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption,`0)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption,`0)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption,`0)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption,`0)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption,`0)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption,`0)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition,`0)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression,`0)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource,`0)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition,`0)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType,`0)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint,`0)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression,`0)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression,`0)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression,`0)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression,`0)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression,`0)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition,`0)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,`0)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction,`0)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition,`0)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent,`0)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression,`0)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression,`0)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression,`0)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression,`0)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression,`0)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint,`0)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause,`0)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression,`0)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression,`0)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression,`0)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction,`0)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification,`0)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression,`0)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource,`0)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment,`0)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration,`0)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition,`0)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause,`0)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration,`0)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`0)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`0)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`0)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`0)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`0)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`0)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`0)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`0)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`0)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`0)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`0)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`0)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`0)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`0)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`0)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`0)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`0)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`0)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`0)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`0)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`0)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`0)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`0)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`0)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`0)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`0)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`0)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`0)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`0)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`0)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`0)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`0)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`0)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`0)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`0)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`0)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`0)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`0)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`0)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`0)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`0)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`0)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`0)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`0)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`0)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`0)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`0)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`0)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`0)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`0)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`0)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`0)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`0)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`0)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`0)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`0)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`0)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`0)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`0)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`0)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`0)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`0)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`0)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`0)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`0)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`0)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`0)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2">
            <summary>
            Visitor implementing a default traversal for SqlCodeObject
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.VisitList``1(System.Collections.Generic.IEnumerable{``0},`1)">
            <summary>
            Visits the SqlCodeObjects in the input list, in order
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression,`1)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression,`1)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption,`1)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption,`1)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment,`1)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression,`1)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch,`1)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression,`1)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression,`1)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression,`1)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression,`1)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression,`1)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression,`1)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression,`1)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression,`1)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression,`1)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext,`1)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint,`1)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier,`1)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier,`1)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier,`1)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression,`1)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation,`1)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment,`1)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint,`1)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition,`1)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity,`1)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression,`1)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression,`1)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression,`1)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange,`1)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition,`1)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause,`1)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint,`1)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression,`1)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption,`1)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem,`1)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption,`1)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment,`1)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression,`1)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption,`1)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,`1)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,`1)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition,`1)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource,`1)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource,`1)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction,`1)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification,`1)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression,`1)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource,`1)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition,`1)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption,`1)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument,`1)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause,`1)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression,`1)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption,`1)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause,`1)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause,`1)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint,`1)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause,`1)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause,`1)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective,`1)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause,`1)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause,`1)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause,`1)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause,`1)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression,`1)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn,`1)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition,`1)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression,`1)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem,`1)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet,`1)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause,`1)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets,`1)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection,`1)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause,`1)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,`1)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression,`1)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption,`1)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression,`1)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue,`1)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue,`1)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn,`1)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint,`1)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption,`1)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint,`1)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction,`1)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification,`1)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause,`1)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression,`1)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation,`1)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression,`1)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,`1)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword,`1)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption,`1)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause,`1)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification,`1)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource,`1)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption,`1)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption,`1)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption,`1)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption,`1)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption,`1)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption,`1)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption,`1)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption,`1)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption,`1)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression,`1)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression,`1)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,`1)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,`1)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,`1)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference,`1)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption,`1)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption,`1)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption,`1)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption,`1)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption,`1)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption,`1)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause,`1)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause,`1)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem,`1)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause,`1)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause,`1)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption,`1)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration,`1)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause,`1)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression,`1)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint,`1)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification,`1)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition,`1)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression,`1)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification,`1)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause,`1)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem,`1)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression,`1)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition,`1)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType,`1)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression,`1)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression,`1)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment,`1)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression,`1)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,`1)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression,`1)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause,`1)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause,`1)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause,`1)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression,`1)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification,`1)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource,`1)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression,`1)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression,`1)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause,`1)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression,`1)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem,`1)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause,`1)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem,`1)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause,`1)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption,`1)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption,`1)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption,`1)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption,`1)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption,`1)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption,`1)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition,`1)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression,`1)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource,`1)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition,`1)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType,`1)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint,`1)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression,`1)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression,`1)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression,`1)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression,`1)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression,`1)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition,`1)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,`1)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction,`1)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition,`1)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent,`1)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression,`1)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression,`1)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression,`1)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression,`1)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression,`1)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint,`1)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause,`1)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression,`1)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression,`1)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression,`1)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction,`1)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification,`1)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression,`1)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource,`1)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment,`1)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration,`1)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition,`1)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause,`1)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration,`1)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`1)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`1)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`1)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`1)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`1)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`1)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`1)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`1)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`1)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`1)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`1)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`1)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`1)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`1)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`1)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`1)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`1)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`1)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`1)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`1)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`1)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`1)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`1)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`1)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`1)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`1)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`1)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`1)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`1)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`1)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`1)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`1)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`1)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`1)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`1)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`1)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`1)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`1)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`1)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`1)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`1)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`1)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`1)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`1)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`1)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`1)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`1)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`1)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`1)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`1)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`1)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`1)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`1)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`1)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`1)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`1)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`1)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`1)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`1)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`1)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`1)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`1)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`1)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`1)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`1)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`1)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectRecursiveContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`1)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor">
            <summary>
            Default visitor for SqlCodeObject.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1">
            <summary>
            Default visitor for SqlCodeObject returning a generic type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1">
            <summary>
            Default visitor for SqlCodeObject.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression,`0)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression,`0)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption,`0)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption,`0)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment,`0)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression,`0)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch,`0)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression,`0)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression,`0)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression,`0)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression,`0)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression,`0)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression,`0)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression,`0)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression,`0)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression,`0)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext,`0)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint,`0)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier,`0)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier,`0)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier,`0)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression,`0)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation,`0)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment,`0)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint,`0)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition,`0)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity,`0)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression,`0)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression,`0)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression,`0)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange,`0)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition,`0)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause,`0)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint,`0)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression,`0)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption,`0)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem,`0)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption,`0)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment,`0)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression,`0)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption,`0)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,`0)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,`0)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition,`0)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource,`0)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource,`0)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction,`0)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification,`0)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression,`0)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource,`0)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition,`0)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption,`0)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument,`0)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause,`0)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression,`0)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption,`0)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause,`0)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause,`0)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint,`0)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause,`0)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause,`0)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective,`0)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause,`0)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause,`0)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause,`0)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause,`0)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression,`0)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn,`0)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition,`0)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression,`0)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem,`0)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet,`0)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause,`0)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets,`0)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection,`0)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause,`0)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,`0)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression,`0)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption,`0)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression,`0)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue,`0)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue,`0)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn,`0)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint,`0)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption,`0)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint,`0)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction,`0)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification,`0)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause,`0)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression,`0)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation,`0)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression,`0)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,`0)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword,`0)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption,`0)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause,`0)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification,`0)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource,`0)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption,`0)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption,`0)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption,`0)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption,`0)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption,`0)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption,`0)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption,`0)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption,`0)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption,`0)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition,`0)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression,`0)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression,`0)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,`0)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,`0)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,`0)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference,`0)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption,`0)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption,`0)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption,`0)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption,`0)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption,`0)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption,`0)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause,`0)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause,`0)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem,`0)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause,`0)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause,`0)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption,`0)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration,`0)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause,`0)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression,`0)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint,`0)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification,`0)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition,`0)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression,`0)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification,`0)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause,`0)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem,`0)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression,`0)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition,`0)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType,`0)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression,`0)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition,`0)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression,`0)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment,`0)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression,`0)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,`0)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression,`0)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause,`0)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause,`0)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause,`0)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression,`0)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification,`0)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource,`0)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression,`0)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression,`0)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause,`0)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression,`0)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem,`0)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause,`0)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem,`0)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause,`0)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption,`0)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption,`0)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption,`0)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption,`0)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption,`0)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption,`0)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition,`0)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression,`0)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource,`0)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition,`0)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType,`0)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint,`0)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression,`0)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression,`0)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression,`0)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression,`0)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression,`0)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition,`0)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,`0)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction,`0)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition,`0)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent,`0)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression,`0)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression,`0)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression,`0)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression,`0)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression,`0)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint,`0)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause,`0)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression,`0)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression,`0)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression,`0)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction,`0)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification,`0)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression,`0)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource,`0)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment,`0)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration,`0)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition,`0)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause,`0)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration,`0)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`0)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`0)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`0)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`0)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`0)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`0)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`0)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`0)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`0)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`0)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`0)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`0)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`0)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`0)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`0)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`0)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`0)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`0)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`0)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`0)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`0)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`0)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`0)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`0)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`0)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`0)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`0)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`0)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`0)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`0)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`0)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`0)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`0)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`0)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`0)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`0)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`0)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`0)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`0)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`0)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`0)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`0)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`0)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`0)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`0)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`0)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`0)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`0)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`0)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`0)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`0)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`0)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`0)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`0)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`0)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`0)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`0)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`0)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`0)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`0)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`0)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`0)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`0)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`0)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`0)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`0)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`0)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2">
            <summary>
            Default visitor for SqlCodeObject returning a generic type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAggregateFunctionCallExpression,`1)">
            <summary>
            Visit SqlAggregateFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllAnyComparisonBooleanExpression,`1)">
            <summary>
            Visit SqlAllAnyComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowPageLocksIndexOption,`1)">
            <summary>
            Visit SqlAllowPageLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAllowRowLocksIndexOption,`1)">
            <summary>
            Visit SqlAllowRowLocksIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment,`1)">
            <summary>
            Visit SqlAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAtTimeZoneExpression,`1)">
            <summary>
            Visit SqlAtTimeZoneExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatch,`1)">
            <summary>
            Visit SqlBatch
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBetweenBooleanExpression,`1)">
            <summary>
            Visit SqlBetweenBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryBooleanExpression,`1)">
            <summary>
            Visit SqlBinaryBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryFilterExpression,`1)">
            <summary>
            Visit SqlBinaryFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryExpression,`1)">
            <summary>
            Visit SqlBinaryQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarExpression,`1)">
            <summary>
            Visit SqlBinaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression,`1)">
            <summary>
            Visit SqlBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanFilterExpression,`1)">
            <summary>
            Visit SqlBooleanFilterExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBuiltinScalarFunctionCallExpression,`1)">
            <summary>
            Visit SqlBuiltinScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCastExpression,`1)">
            <summary>
            Visit SqlCastExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlChangeTrackingContext,`1)">
            <summary>
            Visit SqlChangeTrackingContext
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCheckConstraint,`1)">
            <summary>
            Visit SqlCheckConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrAssemblySpecifier,`1)">
            <summary>
            Visit SqlClrAssemblySpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier,`1)">
            <summary>
            Visit SqlClrClassSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlClrFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrMethodSpecifier,`1)">
            <summary>
            Visit SqlClrMethodSpecifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollateScalarExpression,`1)">
            <summary>
            Visit SqlCollateScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollation,`1)">
            <summary>
            Visit SqlCollation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAssignment,`1)">
            <summary>
            Visit SqlColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultConstraint,`1)">
            <summary>
            Visit SqlDefaultConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinition,`1)">
            <summary>
            Visit SqlColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnIdentity,`1)">
            <summary>
            Visit SqlColumnIdentity
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpression,`1)">
            <summary>
            Visit SqlColumnRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpression,`1)">
            <summary>
            Visit SqlCommonTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpression,`1)">
            <summary>
            Visit SqlComparisonBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRange,`1)">
            <summary>
            Visit SqlCompressionPartitionRange
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComputedColumnDefinition,`1)">
            <summary>
            Visit SqlComputedColumnDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConditionClause,`1)">
            <summary>
            Visit SqlConditionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraint,`1)">
            <summary>
            Visit SqlConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConvertExpression,`1)">
            <summary>
            Visit SqlConvertExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOption,`1)">
            <summary>
            Visit SqlCreateUserOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeGroupByItem,`1)">
            <summary>
            Visit SqlCubeGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorOption,`1)">
            <summary>
            Visit SqlCursorOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableAssignment,`1)">
            <summary>
            Visit SqlCursorVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorVariableRefExpression,`1)">
            <summary>
            Visit SqlCursorVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionIndexOption,`1)">
            <summary>
            Visit SqlDataCompressionIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataType,`1)">
            <summary>
            Visit SqlDataType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,`1)">
            <summary>
            Visit SqlDataTypeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerDefinition,`1)">
            <summary>
            Visit SqlDdlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertMergeActionSource,`1)">
            <summary>
            Visit SqlDefaultValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDefaultValuesInsertSource,`1)">
            <summary>
            Visit SqlDefaultValuesInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteMergeAction,`1)">
            <summary>
            Visit SqlDeleteMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteSpecification,`1)">
            <summary>
            Visit SqlDeleteSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDerivedTableExpression,`1)">
            <summary>
            Visit SqlDerivedTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecificationTableSource,`1)">
            <summary>
            Visit SqlDmlSpecificationTableSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlTriggerDefinition,`1)">
            <summary>
            Visit SqlDmlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropExistingIndexOption,`1)">
            <summary>
            Visit SqlDropExistingIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgument,`1)">
            <summary>
            Visit SqlExecuteArgument
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteAsClause,`1)">
            <summary>
            Visit SqlExecuteAsClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExistsBooleanExpression,`1)">
            <summary>
            Visit SqlExistsBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFillFactorIndexOption,`1)">
            <summary>
            Visit SqlFillFactorIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterClause,`1)">
            <summary>
            Visit SqlFilterClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForBrowseClause,`1)">
            <summary>
            Visit SqlForBrowseClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyConstraint,`1)">
            <summary>
            Visit SqlForeignKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlAutoClause,`1)">
            <summary>
            Visit SqlForXmlAutoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlClause,`1)">
            <summary>
            Visit SqlForXmlClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirective,`1)">
            <summary>
            Visit SqlForXmlDirective
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlExplicitClause,`1)">
            <summary>
            Visit SqlForXmlExplicitClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlPathClause,`1)">
            <summary>
            Visit SqlForXmlPathClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlRawClause,`1)">
            <summary>
            Visit SqlForXmlRawClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFromClause,`1)">
            <summary>
            Visit SqlFromClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextBooleanExpression,`1)">
            <summary>
            Visit SqlFullTextBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumn,`1)">
            <summary>
            Visit SqlFullTextColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFunctionDefinition,`1)">
            <summary>
            Visit SqlFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGlobalScalarVariableRefExpression,`1)">
            <summary>
            Visit SqlGlobalScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupByItem,`1)">
            <summary>
            Visit SqlGrandTotalGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrandTotalGroupingSet,`1)">
            <summary>
            Visit SqlGrandTotalGroupingSet
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByClause,`1)">
            <summary>
            Visit SqlGroupByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupBySets,`1)">
            <summary>
            Visit SqlGroupBySets
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemsCollection,`1)">
            <summary>
            Visit SqlGroupingSetItemsCollection
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHavingClause,`1)">
            <summary>
            Visit SqlHavingClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier,`1)">
            <summary>
            Visit SqlIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentityFunctionCallExpression,`1)">
            <summary>
            Visit SqlIdentityFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIgnoreDupKeyIndexOption,`1)">
            <summary>
            Visit SqlIgnoreDupKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpression,`1)">
            <summary>
            Visit SqlInBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionCollectionValue,`1)">
            <summary>
            Visit SqlInBooleanExpressionCollectionValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionQueryValue,`1)">
            <summary>
            Visit SqlInBooleanExpressionQueryValue
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn,`1)">
            <summary>
            Visit SqlIndexedColumn
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexHint,`1)">
            <summary>
            Visit SqlIndexHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption,`1)">
            <summary>
            Visit SqlIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineIndexConstraint,`1)">
            <summary>
            Visit SqlInlineIndexConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlInlineFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlInlineTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclaration,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeAction,`1)">
            <summary>
            Visit SqlInsertMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSpecification,`1)">
            <summary>
            Visit SqlInsertSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIntoClause,`1)">
            <summary>
            Visit SqlIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIsNullBooleanExpression,`1)">
            <summary>
            Visit SqlIsNullBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLargeDataStorageInformation,`1)">
            <summary>
            Visit SqlLargeDataStorageInformation
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLikeBooleanExpression,`1)">
            <summary>
            Visit SqlLikeBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpression,`1)">
            <summary>
            Visit SqlLiteralExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLoginPassword,`1)">
            <summary>
            Visit SqlLoginPassword
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDegreeOfParallelismIndexOption,`1)">
            <summary>
            Visit SqlMaxDegreeOfParallelismIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClause,`1)">
            <summary>
            Visit SqlMergeActionClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeSpecification,`1)">
            <summary>
            Visit SqlMergeSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource,`1)">
            <summary>
            Visit SqlInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleCalledOnNullInputOption,`1)">
            <summary>
            Visit SqlModuleCalledOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleEncryptionOption,`1)">
            <summary>
            Visit SqlModuleEncryptionOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecuteAsOption,`1)">
            <summary>
            Visit SqlModuleExecuteAsOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleNativeCompilationOption,`1)">
            <summary>
            Visit SqlModuleNativeCompilationOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOption,`1)">
            <summary>
            Visit SqlModuleOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleRecompileOption,`1)">
            <summary>
            Visit SqlModuleRecompileOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleReturnsNullOnNullInputOption,`1)">
            <summary>
            Visit SqlModuleReturnsNullOnNullInputOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleSchemaBindingOption,`1)">
            <summary>
            Visit SqlModuleSchemaBindingOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleViewMetadataOption,`1)">
            <summary>
            Visit SqlModuleViewMetadataOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementFunctionBodyDefinition,`1)">
            <summary>
            Visit SqlMultistatementFunctionBodyDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultistatementTableRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlMultistatementTableRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlNotBooleanExpression,`1)">
            <summary>
            Visit SqlNotBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression,`1)">
            <summary>
            Visit SqlQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression,`1)">
            <summary>
            Visit SqlScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression,`1)">
            <summary>
            Visit SqlTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifier,`1)">
            <summary>
            Visit SqlObjectIdentifier
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectReference,`1)">
            <summary>
            Visit SqlObjectReference
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnlineIndexOption,`1)">
            <summary>
            Visit SqlOnlineIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOptimizeForSequentialKeyIndexOption,`1)">
            <summary>
            Visit SqlOptimizeForSequentialKeyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlResumableIndexOption,`1)">
            <summary>
            Visit SqlResumableIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBucketCountIndexOption,`1)">
            <summary>
            Visit SqlBucketCountIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionDelayIndexOption,`1)">
            <summary>
            Visit SqlCompressionDelayIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMaxDurationIndexOption,`1)">
            <summary>
            Visit SqlMaxDurationIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOffsetFetchClause,`1)">
            <summary>
            Visit SqlOffsetFetchClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByClause,`1)">
            <summary>
            Visit SqlOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItem,`1)">
            <summary>
            Visit SqlOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputClause,`1)">
            <summary>
            Visit SqlOutputClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOutputIntoClause,`1)">
            <summary>
            Visit SqlOutputIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPadIndexOption,`1)">
            <summary>
            Visit SqlPadIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclaration,`1)">
            <summary>
            Visit SqlParameterDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotClause,`1)">
            <summary>
            Visit SqlPivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPivotTableExpression,`1)">
            <summary>
            Visit SqlPivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlPrimaryKeyConstraint,`1)">
            <summary>
            Visit SqlPrimaryKeyConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStorageSpecification,`1)">
            <summary>
            Visit SqlStorageSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinition,`1)">
            <summary>
            Visit SqlProcedureDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQualifiedJoinTableExpression,`1)">
            <summary>
            Visit SqlQualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQuerySpecification,`1)">
            <summary>
            Visit SqlQuerySpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryWithClause,`1)">
            <summary>
            Visit SqlQueryWithClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRollupGroupByItem,`1)">
            <summary>
            Visit SqlRollupGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpression,`1)">
            <summary>
            Visit SqlRowConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarClrFunctionDefinition,`1)">
            <summary>
            Visit SqlScalarClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionReturnType,`1)">
            <summary>
            Visit SqlScalarFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRefExpression,`1)">
            <summary>
            Visit SqlScalarRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarRelationalFunctionDefinition,`1)">
            <summary>
            Visit SqlScalarRelationalFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarSubQueryExpression,`1)">
            <summary>
            Visit SqlScalarSubQueryExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableAssignment,`1)">
            <summary>
            Visit SqlScalarVariableAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarVariableRefExpression,`1)">
            <summary>
            Visit SqlScalarVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript,`1)">
            <summary>
            Visit SqlScript
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedCaseExpression,`1)">
            <summary>
            Visit SqlSearchedCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClause,`1)">
            <summary>
            Visit SqlSearchedWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectClause,`1)">
            <summary>
            Visit SqlSelectClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectIntoClause,`1)">
            <summary>
            Visit SqlSelectIntoClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectScalarExpression,`1)">
            <summary>
            Visit SqlSelectScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecification,`1)">
            <summary>
            Visit SqlSelectSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectSpecificationInsertSource,`1)">
            <summary>
            Visit SqlSelectSpecificationInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStarExpression,`1)">
            <summary>
            Visit SqlSelectStarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectVariableAssignmentExpression,`1)">
            <summary>
            Visit SqlSelectVariableAssignmentExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetClause,`1)">
            <summary>
            Visit SqlSetClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleCaseExpression,`1)">
            <summary>
            Visit SqlSimpleCaseExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleGroupByItem,`1)">
            <summary>
            Visit SqlSimpleGroupByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByClause,`1)">
            <summary>
            Visit SqlSimpleOrderByClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItem,`1)">
            <summary>
            Visit SqlSimpleOrderByItem
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClause,`1)">
            <summary>
            Visit SqlSimpleWhenClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataIndexOption,`1)">
            <summary>
            Visit SqlSortedDataIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortedDataReorgIndexOption,`1)">
            <summary>
            Visit SqlSortedDataReorgIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortInTempDbIndexOption,`1)">
            <summary>
            Visit SqlSortInTempDbIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsIncrementalIndexOption,`1)">
            <summary>
            Visit SqlStatisticsIncrementalIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsNoRecomputeIndexOption,`1)">
            <summary>
            Visit SqlStatisticsNoRecomputeIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatisticsOnlyIndexOption,`1)">
            <summary>
            Visit SqlStatisticsOnlyIndexOption
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableClrFunctionDefinition,`1)">
            <summary>
            Visit SqlTableClrFunctionDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorExpression,`1)">
            <summary>
            Visit SqlTableConstructorExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableConstructorInsertSource,`1)">
            <summary>
            Visit SqlTableConstructorInsertSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition,`1)">
            <summary>
            Visit SqlTableDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableFunctionReturnType,`1)">
            <summary>
            Visit SqlTableFunctionReturnType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHint,`1)">
            <summary>
            Visit SqlTableHint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableRefExpression,`1)">
            <summary>
            Visit SqlTableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableValuedFunctionRefExpression,`1)">
            <summary>
            Visit SqlTableValuedFunctionRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableVariableRefExpression,`1)">
            <summary>
            Visit SqlTableVariableRefExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMethodExpression,`1)">
            <summary>
            Visit SqlTableUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTargetTableExpression,`1)">
            <summary>
            Visit SqlTargetTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTemporalPeriodDefinition,`1)">
            <summary>
            Visit SqlTemporalPeriodDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTopSpecification,`1)">
            <summary>
            Visit SqlTopSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerAction,`1)">
            <summary>
            Visit SqlTriggerAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition,`1)">
            <summary>
            Visit SqlTriggerDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerEvent,`1)">
            <summary>
            Visit SqlTriggerEvent
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceDataMemberExpression,`1)">
            <summary>
            Visit SqlUdtInstanceDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMethodExpression,`1)">
            <summary>
            Visit SqlUdtInstanceMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticDataMemberExpression,`1)">
            <summary>
            Visit SqlUdtStaticDataMemberExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMethodExpression,`1)">
            <summary>
            Visit SqlUdtStaticMethodExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarExpression,`1)">
            <summary>
            Visit SqlUnaryScalarExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraint,`1)">
            <summary>
            Visit SqlUniqueConstraint
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotClause,`1)">
            <summary>
            Visit SqlUnpivotClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnpivotTableExpression,`1)">
            <summary>
            Visit SqlUnpivotTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnqualifiedJoinTableExpression,`1)">
            <summary>
            Visit SqlUnqualifiedJoinTableExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateBooleanExpression,`1)">
            <summary>
            Visit SqlUpdateBooleanExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateMergeAction,`1)">
            <summary>
            Visit SqlUpdateMergeAction
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateSpecification,`1)">
            <summary>
            Visit SqlUpdateSpecification
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedScalarFunctionCallExpression,`1)">
            <summary>
            Visit SqlUserDefinedScalarFunctionCallExpression
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlValuesInsertMergeActionSource,`1)">
            <summary>
            Visit SqlValuesInsertMergeActionSource
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableColumnAssignment,`1)">
            <summary>
            Visit SqlVariableColumnAssignment
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclaration,`1)">
            <summary>
            Visit SqlVariableDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlViewDefinition,`1)">
            <summary>
            Visit SqlViewDefinition
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhereClause,`1)">
            <summary>
            Visit SqlWhereClause
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlNamespacesDeclaration,`1)">
            <summary>
            Visit SqlXmlNamespacesDeclaration
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`1)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`1)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`1)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`1)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`1)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`1)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`1)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`1)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`1)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`1)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`1)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`1)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`1)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`1)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`1)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`1)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`1)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`1)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`1)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`1)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`1)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`1)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`1)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`1)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`1)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`1)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`1)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`1)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`1)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`1)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`1)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`1)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`1)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`1)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`1)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`1)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`1)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`1)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`1)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`1)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`1)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`1)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`1)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`1)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`1)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`1)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`1)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`1)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`1)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`1)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`1)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`1)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`1)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`1)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`1)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`1)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`1)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`1)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`1)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`1)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`1)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`1)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`1)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`1)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`1)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`1)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObjectContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`1)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor">
            <summary>
            Default visitor for SqlStatement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1">
            <summary>
            Default visitor for SqlStatement returning a generic type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1">
            <summary>
            Default visitor for SqlStatement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`0)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`0)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`0)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`0)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`0)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`0)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`0)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`0)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`0)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`0)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`0)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`0)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`0)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`0)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`0)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`0)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`0)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`0)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`0)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`0)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`0)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`0)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`0)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`0)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`0)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`0)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`0)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`0)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`0)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`0)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`0)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`0)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`0)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`0)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`0)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`0)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`0)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`0)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`0)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`0)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`0)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`0)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`0)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`0)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`0)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`0)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`0)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`0)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`0)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`0)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`0)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`0)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`0)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`0)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`0)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`0)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`0)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`0)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`0)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`0)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`0)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`0)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`0)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`0)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`0)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`0)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`0)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`0)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`0)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`0)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`0)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`0)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`0)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`0)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2">
            <summary>
            Default visitor for SqlStatement returning a generic type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterFunctionStatement,`1)">
            <summary>
            Visit SqlAlterFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterLoginStatement,`1)">
            <summary>
            Visit SqlAlterLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterProcedureStatement,`1)">
            <summary>
            Visit SqlAlterProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterTriggerStatement,`1)">
            <summary>
            Visit SqlAlterTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAlterViewStatement,`1)">
            <summary>
            Visit SqlAlterViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupCertificateStatement,`1)">
            <summary>
            Visit SqlBackupCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupDatabaseStatement,`1)">
            <summary>
            Visit SqlBackupDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupLogStatement,`1)">
            <summary>
            Visit SqlBackupLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlBackupServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupTableStatement,`1)">
            <summary>
            Visit SqlBackupTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBreakStatement,`1)">
            <summary>
            Visit SqlBreakStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommentStatement,`1)">
            <summary>
            Visit SqlCommentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompoundStatement,`1)">
            <summary>
            Visit SqlCompoundStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlContinueStatement,`1)">
            <summary>
            Visit SqlContinueStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateFunctionStatement,`1)">
            <summary>
            Visit SqlCreateFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateIndexStatement,`1)">
            <summary>
            Visit SqlCreateIndexStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginFromWindowsStatement,`1)">
            <summary>
            Visit SqlCreateLoginFromWindowsStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateLoginWithPasswordStatement,`1)">
            <summary>
            Visit SqlCreateLoginWithPasswordStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateProcedureStatement,`1)">
            <summary>
            Visit SqlCreateProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateRoleStatement,`1)">
            <summary>
            Visit SqlCreateRoleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSchemaStatement,`1)">
            <summary>
            Visit SqlCreateSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateSynonymStatement,`1)">
            <summary>
            Visit SqlCreateSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTableStatement,`1)">
            <summary>
            Visit SqlCreateTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateTriggerStatement,`1)">
            <summary>
            Visit SqlCreateTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedDataTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedDataTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTableTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTableTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserDefinedTypeStatement,`1)">
            <summary>
            Visit SqlCreateUserDefinedTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromAsymKeyStatement,`1)">
            <summary>
            Visit SqlCreateUserFromAsymKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromCertificateStatement,`1)">
            <summary>
            Visit SqlCreateUserFromCertificateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithImplicitAuthenticationStatement,`1)">
            <summary>
            Visit SqlCreateUserWithImplicitAuthenticationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserFromLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserFromExternalProviderStatement,`1)">
            <summary>
            Visit SqlCreateUserFromExternalProviderStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserStatement,`1)">
            <summary>
            Visit SqlCreateUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserWithoutLoginStatement,`1)">
            <summary>
            Visit SqlCreateUserWithoutLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateViewStatement,`1)">
            <summary>
            Visit SqlCreateViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCursorDeclareStatement,`1)">
            <summary>
            Visit SqlCursorDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDBCCStatement,`1)">
            <summary>
            Visit SqlDBCCStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeleteStatement,`1)">
            <summary>
            Visit SqlDeleteStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDenyStatement,`1)">
            <summary>
            Visit SqlDenyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropAggregateStatement,`1)">
            <summary>
            Visit SqlDropAggregateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDatabaseStatement,`1)">
            <summary>
            Visit SqlDropDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropDefaultStatement,`1)">
            <summary>
            Visit SqlDropDefaultStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropFunctionStatement,`1)">
            <summary>
            Visit SqlDropFunctionStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropLoginStatement,`1)">
            <summary>
            Visit SqlDropLoginStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropProcedureStatement,`1)">
            <summary>
            Visit SqlDropProcedureStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropRuleStatement,`1)">
            <summary>
            Visit SqlDropRuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSchemaStatement,`1)">
            <summary>
            Visit SqlDropSchemaStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSecurityPolicyStatement,`1)">
            <summary>
            Visit SqlDropSecurityPolicyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSequenceStatement,`1)">
            <summary>
            Visit SqlDropSequenceStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropSynonymStatement,`1)">
            <summary>
            Visit SqlDropSynonymStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTableStatement,`1)">
            <summary>
            Visit SqlDropTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerStatement,`1)">
            <summary>
            Visit SqlDropTriggerStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTypeStatement,`1)">
            <summary>
            Visit SqlDropTypeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropUserStatement,`1)">
            <summary>
            Visit SqlDropUserStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropViewStatement,`1)">
            <summary>
            Visit SqlDropViewStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteModuleStatement,`1)">
            <summary>
            Visit SqlExecuteModuleStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStringStatement,`1)">
            <summary>
            Visit SqlExecuteStringStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGrantStatement,`1)">
            <summary>
            Visit SqlGrantStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIfElseStatement,`1)">
            <summary>
            Visit SqlIfElseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInlineTableVariableDeclareStatement,`1)">
            <summary>
            Visit SqlInlineTableVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertStatement,`1)">
            <summary>
            Visit SqlInsertStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeStatement,`1)">
            <summary>
            Visit SqlMergeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement,`1)">
            <summary>
            Visit SqlStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreDatabaseStatement,`1)">
            <summary>
            Visit SqlRestoreDatabaseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreInformationStatement,`1)">
            <summary>
            Visit SqlRestoreInformationStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreLogStatement,`1)">
            <summary>
            Visit SqlRestoreLogStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreServiceMasterKeyStatement,`1)">
            <summary>
            Visit SqlRestoreServiceMasterKeyStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRestoreTableStatement,`1)">
            <summary>
            Visit SqlRestoreTableStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlReturnStatement,`1)">
            <summary>
            Visit SqlReturnStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRevokeStatement,`1)">
            <summary>
            Visit SqlRevokeStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectStatement,`1)">
            <summary>
            Visit SqlSelectStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetAssignmentStatement,`1)">
            <summary>
            Visit SqlSetAssignmentStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetStatement,`1)">
            <summary>
            Visit SqlSetStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTryCatchStatement,`1)">
            <summary>
            Visit SqlTryCatchStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateStatement,`1)">
            <summary>
            Visit SqlUpdateStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUseStatement,`1)">
            <summary>
            Visit SqlUseStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclareStatement,`1)">
            <summary>
            Visit SqlVariableDeclareStatement
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementContextVisitor`2.Visit(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlWhileStatement,`1)">
            <summary>
            Visit SqlWhileStatement
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.BeforeParserState">
            <summary>
            Parser state just before shifting the statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.AfterParserState">
            <summary>
            Parser state just after shifting the statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.BeforeScannerStateRelative">
            <summary>
            Scanner state just before shifting the statement.
            Used to determine if before state is matching and if statement can be reused.
            Note: relative to PositionOffset - including parents PositionOffsets
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.AfterScannerStateRelative">
            <summary>
            Scanner state just after shifting the statement.
            Used to restore the complete state after. Including read/unread token state, 
            and all changes done after reading the token.
            Note: relative to PositionOffset - including parents PositionOffsets
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.LookAheadTokenIndexRelative">
            <summary>
            Lookahead token index when shifting the statement.
            Used to determine if the read lookahead token is completely in clean region.
            Note: relative to PositionOffset - including parents PositionOffsets
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.YYLocRelative">
            <summary>
            Parser YYloc created during reduction of the statement. 
            Can be sometimes different than pos.
            Note: relative to PositionOffset - including parents PositionOffsets
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.LocalPositionOffset">
            <summary>
            Relative position modifer. 
            All LocalPositionOffsets on the path to root added to relative index make together absolute position.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.SideEffectSpan">
            <summary>
            Information about parser errors in this statement, can be null
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementReuseData.AreChildrenParentsSet">
            <summary>
            Determines if children parent referenences are already set.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecification">
            <summary>
            abstract base class for dml specifications
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecification.TopSpecification">
            <summary>
            the top specification associated with the delete specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecification.Target">
            <summary>
            the target of the insert specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecification.OutputIntoClause">
            <summary>
            the output/into clause associated with the delete specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlSpecification.OutputClause">
            <summary>
            the output clause associated with the delete specification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlStatement">
            <summary>
            Represents T-SQL DML statement (i.e. INSERT, UPDATE, DELETE and MERGE).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlStatement.QueryWithClause">
            <summary>
            Gets the query with clause for the DML statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDmlStatement.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectBinderHelper`2">
            <summary>
            This is a helper interface that allows for binding all DROP objects generically.
            </summary>
            <typeparam name="T">The type of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object to be dropped.</typeparam>
            <typeparam name="N">The type of the object name.</typeparam>
            <remarks>INTERNAL ONLY - DO NO MAKE PUBLIC</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectBinderHelper`2.DropObjects">
            <summary>
            Gets the set of objects to be dropped.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectBinderHelper`2.GetObjectName(`1)">
            <summary>
            Gets single-id name of given drop object.
            </summary>
            <param name="dropObject">A <typeparamref name="N"/> dropObject.</param>
            <returns>SqlIdentifier representing object single-id name.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectBinderHelper`2.FindDropMetadataObject(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,`1,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Retrieves and returns <typeparamref name="T"/> metadata object which is valid for drop statement 
            for a given object name 
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext"/> that to be used for metadata object lookup.</param>
            <param name="name">The <typeparamref name="N"/> which represents name of the object to be found.</param>
            <param name="lexicalScope">The <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies the object lexical scope.</param>
            <returns>A <typeparamref name="T"/> object if found; otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectBinderHelper`2.FindAnyMetadataObject(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,`1,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType@)">
            <summary>
            Retrieves and returns <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> metadata object which shares the same drop namespace
            and has a given object name.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext"/> that to be used for metadata object lookup.</param>
            <param name="name">The <typeparamref name="N"/> which represents name of the object to be found.</param>
            <param name="lexicalScope">The <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies the object lexical scope.</param>
            <param name="actualType">Actual DDL type of returned object.</param>
            <returns>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object if found; otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectBinderHelper`2.ExecuteDrop(Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext,`0,Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope)">
            <summary>
            Executes that DROP of the given <typeparamref name="T"/> object.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.BatchBindingContext"/> that to be used for metadata object lookup.</param>
            <param name="dropObject">The object to be dropped.</param>
            <param name="lexicalScope">The <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Binder.LexicalScope"/> object that identifies the object lexical scope.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DropObjectBinderHelper">
            <summary>
            This is a helper interface that allows for binding all DROP objects generically.
            </summary>
            <remarks>INTERNAL ONLY - DO NO MAKE PUBLIC</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IDropObjectStatement`2">
            <summary>
            This is a helper interface that allows for binding all DROP objects
            generically. The interface acts as an extension to all those DROP statements.
            </summary>
            <typeparam name="T">The type of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject"/> object to be dropped.</typeparam>
            <typeparam name="N">The type of the object name.</typeparam>
            <remarks>INTERNAL ONLY - DO NO MAKE PUBLIC</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinTableExpression">
            <summary>
            Represents a table join expression
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinTableExpression.JoinOperator">
            <summary>
            Gets join operator used in this Join table expression.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinTableExpression.Left">
            <summary>
            Gets the table expression to the left of the join operation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinTableExpression.Right">
            <summary>
            Gats the table expression to the right of the join operation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression">
            <summary>
            Common base class for different concrete SqlQueryExpression types
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression.LocalBindingContext">
            <summary>
            Gets the local binding context that is used to bind this query expression.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression.ShallowBind(Microsoft.SqlServer.Management.SqlParser.Binder.CteBindingContext)">
            <summary>
            Bind only top most query expression (left most leaf in expression tree).
            Shallow binding is meant to produce the output columns for a CTE 
            definition so that it could be used in binding the rest of the query
            expression (deep binding).
            </summary>
            <param name="bindingContext">Binding context object which provides binding functionality</param>
            <remarks>Applicable to query expression within CTE definition.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression.DeepBind(Microsoft.SqlServer.Management.SqlParser.Binder.CteBindingContext,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifier)">
            <summary>
            Bind all query expressions that were not shallow bound.
            </summary>
            <param name="bindingContext">Binding context object which provides binding functionality</param>
            <param name="cteName">Name of the CTE object that's currently being bound.</param>
            <remarks>Applicable to query expression within CTE definition.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlQueryExpression.HasUnionAll">
            <summary>
            Gets a value that specifies whether a query expression has UNION ALL 
            operator.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression">
            <summary>
            Base class for builtin and user-defined scalar function call expressions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression.BoundScalar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression.BoundFunction">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarFunction"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression"/>
            is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression.Arguments">
            <summary>
            Gets function invocation arguments.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarFunctionCallExpression.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectExpression">
            <summary>
            an abstract class that represents an expression in a select clause 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectExpression.IsOfType(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SelectExpressionType)">
            <summary>
            Utility method that returns true if the select expression type is of
            a given type.
            </summary>
            <param name="type">Select expression type to check for.</param>
            <returns>True if this select expression type is of the given type; false, otherwise.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression">
            <summary>
            Abstract class which represents a table expression
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression.TableExpressionName">
            <summary>
            Represents table expression given name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression.BoundTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that this object is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression.BoundObject">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that this <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/>
            is bound to after calling <c>Bind</c> on the root <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScript"/>.
            </summary>
            <remarks>Unless the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> is bound, this value is always <c>null</c>.</remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression.SetBoundTable(Microsoft.SqlServer.Management.SqlParser.Binder.IBindingContext,Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject)">
            <summary>
            Utility method that adds specified bound table object to the binding 
            context and sets the BoundTable property of this object.
            The method also performs all error checking, reports error and sets object
            binding state.
            </summary>
            <param name="bindingContext">Binding context object to be used to add the bound table to.</param>
            <param name="table">Bound table to be set.</param>
            <param name="errorObject">The code DOM object to report the error for.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpression.SetBoundCte(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Sets table expression bound table to the given CTE. This method does not
            perform any error checking and does not set the object binding state.
            </summary>
            <param name="cte">Bound CTE object to be set.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtMemberExpression">
            <summary>
            Base class for both table UDT member expressions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtMemberExpression.MemberName">
            <summary>
            Gets the name of the UDT field, property or method referenced in the expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition">
            <summary>
            Represents Sql trigger definition base.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition.Name">
            <summary>
            Gets trigger name.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition.Options">
            <summary>
            Get trigger options.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition.ActivationType">
            <summary>
            Get trigger activatino type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerDefinition.IsOrAlterStatement">
            <summary>
            Get/Set whether is or alter statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMemberExpression">
            <summary>
            Base class for both static data member and static method invocations of a UDT.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtStaticMemberExpression.Type">
            <summary>
            Gets UDT data type specification.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraintBase">
            <summary>
            Base class for UNIQUE and PRIMARY KEY constraints.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraintBase.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption,System.Collections.Generic.List{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumn},System.Collections.Generic.List{Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOption})">
            <summary>
            Creates either a Unique or a PrimaryKey constraint based on the specified type.
            </summary>
            <param name="type">Type of the constraint to create an object for (either
            Unique or PrimaryKey).</param>
            <param name="clusterOption">Index cluster option.</param>
            <param name="indexedColumnList">Optional list of all columns that are 
            participating in the index.</param>
            <param name="indexOptions">Index options for the associated index.</param>
            <returns>Either a Primary Key constraint or a Unique constraint object.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraintBase.ClusterOption">
            <summary>
            Gets a value that specifies whether the index is clustered or non-clustered.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraintBase.IndexedColumns">
            <summary>
            Gets the set of all columns participating in the index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraintBase.IndexOptions">
            <summary>
            Gets the SqlIndexOptionCollection which represents the options mentioned in the index definition.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUniqueConstraintBase.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateDeleteSpecificationBase">
            <summary>
            Base class for UPDATE and DELETE specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateDeleteSpecificationBase.FromClause">
            <summary>
            From Clause associated with the delete specification
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUpdateDeleteSpecificationBase.WhereClause">
            <summary>
            WhereClause associated with the delete specification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ValidateModuleBodyVisitor.FunctionStatementBinderVisitor">
            <summary>
            Bind validation of statement in function body.
            Disallowed statements:
            * All side-effecting statements 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ValidateModuleBodyVisitor.ModuleStatementParserVisitorBase">
            <summary>
            Common parse validation of statement in module body.
            Disallowed statements:
            * SqlUseStatement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ValidateModuleBodyVisitor.ScalarFunctionStatementParserVisitor">
            <summary>
            Parse validation of statement in scalar function body.
            Additional disallowed statements:
            * SqlReturnStatement without return value
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ValidateModuleBodyVisitor.TableFunctionStatementParserVisitor">
            <summary>
            Parse validation of statement in table function body.
            Additional disallowed statements:
            * SqlReturnStatement with return value
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ValidateModuleBodyVisitor.ProcedureStatementParserVisitor">
            <summary>
            Parse validation of statement in procedure body.
            Additional disallowed statements:
            none
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ValidateModuleBodyVisitor.TriggerStatementParserVisitor">
            <summary>
            Parse validation of statement in trigger body.
            Additional disallowed statements:
            none
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultipartIdentifier">
            <summary>
            Represents a general multipart T-SQL identifier.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultipartIdentifier.Count">
            <summary>
            Gets the number of single identifiers in this object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultipartIdentifier.Item(System.Int32)">
            <summary>
            Gets the identifier at the specified index.
            </summary>
            <param name="index">The zero-based index of the single identifier to get.</param>
            <returns>The single identifier at the specified index.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMultipartIdentifier.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the identifiers that make up
            this object.
            </summary>
            <returns>A SqlIdentifier enumerator.</returns>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGeneratedAlwaysType.None">
            <summary>
            Not generated always.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGeneratedAlwaysType.AsRowStart">
            <summary>
            Generated as row start.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGeneratedAlwaysType.AsRowEnd">
            <summary>
            Generated as row end.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAdditionalInfo.SparseOption">
            <summary>
            Gets the sparse option.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnAdditionalInfo.GeneratedAlwaysType">
            <summary>
            Gets the generated always type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1">
            <summary>
            Defines methods to manipulate generic collections.
            </summary>
            <typeparam name="T">The type of the elements in the collection.</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>.</param>
            <returns><c>true</c> if item is found in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>; 
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>. 
            The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at 
            which copying begins.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the 
            first occurrence within the entire <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>.</param>
            <returns>The zero-based index of the first occurrence of <paramref name="item"/> 
            within the entire <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeCollection`1"/>, if found; otherwise, -1.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlDeprecatedStatement">
            <summary>
            Represents deprecated T-SQL statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlDumpLoadStatement">
            <summary>
            Represents deprecated DUMP/LOAD statement.
            </summary>
            <remarks>
            The only use of this interface is to distinguish between DUMP and BACKUP, 
            and LOAD and RESTORE. It should not be used outside of this scope. 
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlBackupRestoreTransactionStatement">
            <summary>
            Represents deprecated BACKUP/RESTORE TRANSACTION statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlCodeObject">
            <summary>
            A visitable node in the for SqlCodeObject data structure.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlCodeObject.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor)">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> through its
            particular interface.
            </summary>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor"/> which performs the visit action.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlCodeObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor{``0})">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> through its
            particular interface.
            The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlCodeObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0},``0)">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> through its
            particular interface.
            </summary>
            <typeparam name="C">Type of the context object for visit action.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`1"/> which performs the visit action.</param>
            <param name="context">A context object for the visit action.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlCodeObject.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor{``0,``1},``1)">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> through its
            particular interface.
            The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <typeparam name="C">Type of the context object for visit action.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlCodeObjectContextVisitor`2"/> which performs the visit action.</param>
            <param name="context">A context object for the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement">
            <summary>
            A visitable node in the for SqlStatement data structure.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement.Accept(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor)">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> through its
            particular interface.
            </summary>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor"/> which performs the visit action.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor{``0})">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> through its
            particular interface.
            The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement.Accept``1(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0},``0)">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> through its
            particular interface.
            </summary>
            <typeparam name="C">Type of the context object for visit action.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`1"/> which performs the visit action.</param>
            <param name="context">A context object for the visit action.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.IVisitableSqlStatement.Accept``2(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor{``0,``1},``1)">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatement"/> through its
            particular interface.
            The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <typeparam name="C">Type of the context object for visit action.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlStatementContextVisitor`2"/> which performs the visit action.</param>
            <param name="context">A context object for the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.Sid">
            <summary>
            Gets SqlIdentifier which is the SID option in CREATE/ALTER LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.DefaultDatabase">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_DATABASE option in CREATE/ALTER LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.DefaultLanguage">
            <summary>
            Gets SqlIdentifier which is the DEFAULT_LANGUAGE option in CREATE/ALTER LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.Credential">
            <summary>
            Gets SqlIdentifier which is the CREDENTIAL option in CREATE LOGIN/ALTER WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.CheckExpiration">
            <summary>
            Gets SqlOnOffValue which is the CHECK_EXPIRATION option in CREATE/ALTER LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.CheckPolicy">
            <summary>
            Gets SqlOnOffLiteral which is the CHECK_POLICY option in CREATE/ALTER LOGIN WITH PASSWORD statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.Name">
            <summary>
            Gets SqlIdentifier which is the NAME option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.Password">
            <summary>
            Gets SqlLoginPassword which is the PASSWORD option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.OldPassword">
            <summary>
            Gets SqlLoginPassword which is the OLD_PASSWORD option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.NoCredential">
            <summary>
            Gets bool which is the NO CREDENTIAL option in ALTER LOGIN statement.
            Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LoginOptions.Children">
            <summary>
            Gets child objects of the current object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType">
            <summary>
            Assignment operators
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.None">
            <summary>
            represents a set statement with no assignement operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.Assignment">
            <summary>
            assigns the value on the right to variable or column reference on the left
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.AdditionAssignment">
            <summary>
            equivalent to lhs = lhs + rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.SubtractionAssignment">
            <summary>
            equivalent to lhs = lhs - rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.MultiplicationAssignment">
            <summary>
            equivalent to lhs = lhs * rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.DivisionAssignment">
            <summary>
            equivalent to lhs = lhs / rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.ModulusAssignment">
            <summary>
            equivalent to lhs = lhs % rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.BitwiseAndAssignment">
            <summary>
            equivalent to lhs = lhs | rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.BitwiseOrAssignment">
            <summary>
            equivalent to lhs = lhs &amp; rhs
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentOperatorType.BitwiseXorAssignment">
            <summary>
            equivalent to lhs = lhs ^ rhs
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment">
            <summary>
            Base class for all Sql assignment operations.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignment.Operator">
            <summary>
            returns the type of assignment operator of an assignment
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlAssignmentCollection">
            <summary>
            a collection of SqlAssignment objects
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreDatabaseStatement">
            <summary>
            Base class for BACKUP/RESTORE DATABASE statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreKeyStatement">
            <summary>
            Base class for BACKUP/RESTORE KEY statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreLogStatement">
            <summary>
            Base class for BACKUP/RESTORE LOG statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreMasterKeyStatement">
            <summary>
            Base class for BACKUP/RESTORE MASTER KEY statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreServiceMasterKeyStatement">
            <summary>
            Base class for BACKUP/RESTORE SERVICE MASTER KEY statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreStatement">
            <summary>
            Base class for all BACKUP/RESTORE statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBackupRestoreTableStatement">
            <summary>
            Base class for BACKUP/RESTORE TABLE statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBatchCollection">
            <summary>
            A collection of SqlBatches
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanOperatorType">
            <summary>
            Boolean Operators 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanOperatorType.And">
            <summary>
            Boolean And operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanOperatorType.Or">
            <summary>
            Boolean Or operator
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryOperatorType">
            <summary>
            Defines binary query operators.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryOperatorType.Union">
            <summary>
            Union operator.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryOperatorType.UnionAll">
            <summary>
            Union All operator.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryOperatorType.Intersect">
            <summary>
            Intersect operator.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryQueryOperatorType.Except">
            <summary>
            Except operator.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType">
            <summary>
            Defines identifiers for supported binary operators. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Add">
            <summary>
            Addition operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Assign">
            <summary>
            Assignment operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.BitwiseAnd">
            <summary>
            Bitwise and operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.BitwiseOr">
            <summary>
            Bitwise or operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.BitwiseXor">
            <summary>
            Performs a bitwise exclusive OR operation between two integer values.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Divide">
            <summary>
            Division operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Equals">
            <summary>
            Equal to operator.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.GreaterThan">
            <summary>
            Greater than operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.GreaterThanOrEqual">
            <summary>
            Greater than or equal operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.LessThan">
            <summary>
            Less than operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.LessThanOrEqual">
            <summary>
            Less than or equal operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Modulus">
            <summary>
            Modulus operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Multiply">
            <summary>
            Multiplication operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.Subtract">
            <summary>
            Subtraction operator. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.NotEqualTo">
            <summary>
            Not equal to operator.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.NotGreaterThan">
            <summary>
            Not greater than operator.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBinaryScalarOperatorType.NotLessThan">
            <summary>
            Not less than operator.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlBooleanExpression">
            <summary>
            Boolean Expression Used For Comparisons (boolean_expression in the grammar)
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleWhenClauseCollection">
            <summary>
            Collection of simple WHEN clauses
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSearchedWhenClauseCollection">
            <summary>
            Collection of Searched case expression WHEN clauses
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1">
            <summary>
            Provides the base class for a <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject"/> generic collection.
            </summary>
            <typeparam name="T">The type of elements in the collection.</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>.</param>
            <returns><c>true</c> if item is found in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>; 
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>. 
            The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at 
            which copying begins.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the 
            first occurrence within the entire <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>.</param>
            <returns>The zero-based index of the first occurrence of <paramref name="item"/> 
            within the entire <see cref="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1"/>, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through
            the collection.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate 
            through the collection.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnDefinitionCollection">
            <summary>
            Represents a collection of Sql column definitions.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlColumnRefExpressionCollection">
            <summary>
            Represents a collection of SqlColumnRefExpression objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCommonTableExpressionCollection">
            <summary>
            Represents a collection of SqlCommonTableExpression objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType">
            <summary>
            Arithmetic comparison operators
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.Equals">
            <summary>
            Equal To operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.LessThan">
            <summary>
            Less than operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.ValueEqual">
            <summary>
            Value equal operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.NotEqual">
            <summary>
            Not equal operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.GreaterThan">
            <summary>
            Greater than operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.GreaterThanOrEqual">
            <summary>
            Greater or equal operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.LessOrGreaterThan">
            <summary>
            Less or Greater than operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.LessThanOrEqual">
            <summary>
            Less than or equal
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.NotLessThan">
            <summary>
            Not less than operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.NotGreaterThan">
            <summary>
            Not greater than operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.RightStarEqualJoin">
            <summary>
            Deprecated =* operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlComparisonBooleanExpressionType.LeftStarEqualJoin">
            <summary>
            Deprecated *= operator
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCompressionPartitionRangeCollection">
            <summary>
            Represents the list of partition range mentioned in the DATA_COMPRESSION index option in Sql index definition.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintCollection">
            <summary>
            Represents a collection of Sql constraints.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType">
            <summary>
            Defines all different types of Sql constraints.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.Null">
            <summary>
            Specifies that a column accepts NULL values.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.NotNull">
            <summary>
            Sepecifies that a column does not accept NULL values.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.PrimaryKey">
            <summary>
            Identify a column value as a primary key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.Unique">
            <summary>
            Specifies that a column value must be unique.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.Identity">
            <summary>
            Specifies column identitiy constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.Default">
            <summary>
            Specifies column default value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.Check">
            <summary>
            Specifies column check constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.ForeignKey">
            <summary>
            Specifies foreign key constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlConstraintType.RowGuidCol">
            <summary>
            Specifies ROWGUIDCOL column constraint.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo">
            <summary>
            Holds the information for all three types of CREATE TYPE statements.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.CreateTypeStatementInfoType">
            <summary>
            Enumerates the types of CREATE TYPE statement.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataTypeSpecification,Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedDataTypeNullState)">
            <summary>
            Creates an object to hold type information for User Defined Data Type.
            </summary>
            <param name="dataType">Data type specification of the User Defined Data Type.</param>
            <param name="nullState">Indicates whether User Defined Data Type is allowed to have a null value.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClrClassSpecifier)">
            <summary>
            Creates an object to hold type information for User Defined Type.
            </summary>
            <param name="clrClassSpecifier">Specifies assembly and class information in which User Defined Type is contained.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.#ctor(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableDefinition)">
            <summary>
            Creates an object to hold information for User Defined Table Type.
            </summary>
            <param name="tableDefinition">Contains the column definitions for the User Defined Table Type.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.DataType">
            <summary>
            Gets the SqlDataTypeSpecification which is the User Defined Data Type Specification.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.NullState">
            <summary>
            Gets the SqlUserDefinedDataTypeNullState which indicates whether User Defined Data Type 
            can have a null value.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.ClrClassSpecifier">
            <summary>
            Gets the SqlClrClassSpecifier which is the class and assembly name containing the User Defined Type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.TableDefinition">
            <summary>
            Gets the SqlTableDefinition which contains the column definitions for the User Defined Table Type.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.IsOfType(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.CreateTypeStatementInfo.CreateTypeStatementInfoType)">
            <summary>
            Returs true if the object contains Type Information for a specific type and is valid.
            Used only to Assert the parameter information.
            </summary>
            <param name="infoType">Type to check the object against.</param>
            <returns>True if is of type 'infoType' and valid, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedDataTypeNullState">
            <summary>
            Indicates whether the user defined data type is allowed to have a null value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedDataTypeNullState.None">
            <summary>
            Indicates neither NULL nor NOT NULL was specified.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedDataTypeNullState.Null">
            <summary>
            Indicates the User Defined Data Type can have a NULL value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUserDefinedDataTypeNullState.NotNull">
            <summary>
            Indicates the User Defined Data Type cannot be NULL.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOptionType.Invalid">
            <summary>
            Indicates invalid option type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOptionType.DefaultLanguage">
            <summary>
            Indicates that option specifies default language
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOptionType.DefaultSchema">
            <summary>
            Indicates that option specifies default schema
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCreateUserOptionType.Password">
            <summary>
            Indicates that option specifies password
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCubeRollupArgumentCollection">
            <summary>
            Cube and RollUp grouping sets arguments
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlDocumentConstraint">
            <summary>
            Defines the constraints imposed on an XML document.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlDocumentConstraint.None">
            <summary>
            Not specified.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlDocumentConstraint.Content">
            <summary>
            Well-formed XML fragment.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlXmlDocumentConstraint.Document">
            <summary>
            Well-formed XML document.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType">
            <summary>
            The type of the DBCC command
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.None">
            <summary>
            Invalid or unsupported command
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.NewAlloc">
            <summary>
             DBCC NEWALLOC
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.DbRepair">
            <summary>
            DBCC DBREPAIR
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.RowLock">
            <summary>
            DBCC ROWLOCK
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.TextAll">
            <summary>
            DBCC TEXTALL
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.TextAlloc">
            <summary>
            DBCC TEXTALLOC
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDbccCommandType.TraceOn">
            <summary>
            DBCC TRACEON
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.DdlTargetObjectType">
            <summary>
            Defines the type of the object that is the target of a DDL statement.
            </summary>
            <remarks>INTERNAL ONLY - DO NOT MAKE PUBLIC</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerTargetType">
            <summary>
            DDL Trigger target type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerTargetType.Database">
            <summary>
            Database trigger target.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDdlTriggerTargetType.AllServer">
            <summary>
            All server trigger target.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDeclareStatement">
            <summary>
            Represents a SQL declare statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType">
            <summary>
            Defines the different types of objects that may be dropped.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Table">
            <summary>
            Specifies a table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Proc">
            <summary>
            Sepecifies a procedure (shortened form).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Procedure">
            <summary>
            Sepecifies a procedure.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Function">
            <summary>
            Specifies a function.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.View">
            <summary>
            Specifies a view.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Rule">
            <summary>
            Specifies a rule.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Default">
            <summary>
            Specifies a default constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Trigger">
            <summary>
            Specifies a trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Aggregate">
            <summary>
            Specifies an aggregate.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Synonym">
            <summary>
            Specifies a synonym.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.Sequence">
            <summary>
            Specifies a sequence.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropObjectType.SecurityPolicy">
            <summary>
            Specifies a security policy.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerTargetScope">
            <summary>
            Type of the drop trigger target scope.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerTargetScope.None">
            <summary>
            None specified
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerTargetScope.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDropTriggerTargetScope.AllServer">
            <summary>
            All Server
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ISqlErrorObject">
            <summary>
            interface that indicates a particular object represents sql with errors
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecutionContextType">
            <summary>
            Define module execution context types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecutionContextType.Caller">
            <summary>
            Specifies the statements inside the module are executed in the context 
            of the caller of the module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecutionContextType.Owner">
            <summary>
            Specifies the statements inside the module executes in the context of 
            the current owner of the module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecutionContextType.Self">
            <summary>
            Equivalent to User user_name, where the specified user is the person 
            creating or altering the module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleExecutionContextType.User">
            <summary>
            Specifies the statements inside the module execute in the context of the 
            user specified.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteStatementError">
            <summary>
            represents an exec statement with an error
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterExpression">
            <summary>
            Represents the filter expression in the Sql filter clause.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFilterExpression.IsValid">
            <summary>
            Gets the boolean which indicates whether this objcet is a valid SqlBooleanFilterExpression or not.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForClause">
            <summary>
            Base class for FOR BROWSE and FOR XML clauses
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyAction">
            <summary>
             Defines the set of actions taken when the primary key reference by a 
            foreign key is altered.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyAction.None">
            <summary>
            Specifies that no action is set.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyAction.NoAction">
            <summary>
            Specifies no action to be taken.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyAction.Cascade">
            <summary>
            Specifies that corresponding rows are updated or deleted in the 
            referencing table when that row is updated in the parent table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyAction.SetDefault">
            <summary>
            Specifies that all the values that make up the foreign key are set to 
            their default values.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForeignKeyAction.SetNull">
            <summary>
            Specifies that all the values that make up the foreign key are set to 
            NULL.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType">
            <summary>
            For Xml directive possible values
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.None">
            <summary>
            None or invalid 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.BinaryBase64">
            <summary>
            Binary Base 64 option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.Type">
            <summary>
            Type option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.Root">
            <summary>
            Root option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.XmlData">
            <summary>
            Xml Data option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.XmlSchema">
            <summary>
            XmlSchema option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.ElementsXsiNil">
            <summary>
            Elements XsiNil option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.ElementsAbsent">
            <summary>
            Elements Absent option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.Elements">
            <summary>
            Elements Absent option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.IncludeNullValues">
            <summary>
            Inlude_Null_Value option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.WithoutArrayWrapper">
            <summary>
            Without_array_wrapper option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.CommonDirectives">
            <summary>
            Common directives 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.AutoMode">
            <summary>
            Auto Mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.RawMode">
            <summary>
            Raw Mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.ExplicitMode">
            <summary>
            ExplicitMode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.PathMode">
            <summary>
            Path Mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectivesType.JsonMode">
            <summary>
            JSON mode
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlDirectiveCollection">
            <summary>
            A list of SqlForXmlDirective 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlForXmlUnknownDirective">
            <summary>
            collector for the xml directives
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextFunctionType">
            <summary>
            Full text function type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextFunctionType.Contains">
            <summary>
            Contains function
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextFunctionType.FreeText">
            <summary>
            FreeText function
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlFullTextColumnCollection">
            <summary>
            Represents a collection of SqlFullTextColumn
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGdrStatementType">
            <summary>
            Enumerates the allowable GDR statement types.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGdrStatement">
            <summary>
            Represents base class for sql GRANT, DENY and REVOKE statements.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGdrStatement.Create(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGdrStatementType)">
            <summary>
            Creates one of the three allowable GDR statements based on type provided.
            </summary>
            <param name="statementType">SqlGdrStatementType indicating the required type.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByOptionType">
            <summary>
            the option specified with the keyword "WITH"
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByOptionType.None">
            <summary>
            No option specified
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByOptionType.Cube">
            <summary>
            Cube Option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByOptionType.Rollup">
            <summary>
            Rollup Option
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByItem">
            <summary>
            Base class for all the grouping sets used in GroupBy
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupByItemCollection">
            <summary>
            A collection of grouping items
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSet">
            <summary>
            Base class for the grouping sets
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetCollection">
            <summary>
            Represents a collection of Cube , Rollup Or Simple grouping sets
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItem">
            <summary>
            Base class for grouping set items
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetItemCollection">
            <summary>
            Represents a collection of Cube , Rollup Or Simple grouping sets
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlGroupingSetsCollection">
            <summary>
            Collection of grouping sets
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHint">
            <summary>
            Abstract base class for the two possible table hint types
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHint.IsTableHint">
            <summary>
            Property indicating if this is a flag table hint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHint.IsIndexHint">
            <summary>
            Property indicating if this is an index table hint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHint.AsSqlTableHint">
            <summary>
            Property that returns this or null depending on the value of IsTableHint
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHint.AsSqlIndexHint">
            <summary>
            Property that returns this or null depending on the value of IsIndexHint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlHintCollection">
            <summary>
            Collection of table hints
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIdentifierCollection">
            <summary>
            A list of SqlIdentifiers
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInBooleanExpressionValue">
            <summary>
            The abstract class for the in_predicate_vlaue from the grammar
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexedColumnCollection">
            <summary>
            Represents a collection of Sql indexed column objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType">
            <summary>
            Represents type of index option specified in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.Invalid">
            <summary>
            Represents an invalid option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.AllowPageLocks">
            <summary>
            Represents ALLOW_PAGE_LOCKS option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.AllowRowLocks">
            <summary>
            Represents ALLOW_ROW_LOCKS option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.DataCompression">
            <summary>
            Represents DATA_COMPRESSION option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.DropExisting">
            <summary>
            Represents DROP_EXISTING option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.FillFactor">
            <summary>
            Represents FILLFACTOR option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.IgnoreDupKey">
            <summary>
            Represents IGNORE_DUP_KEY option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.MaxDegreeOfParallelism">
            <summary>
            Represents MAXDOP option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.Online">
            <summary>
            Represents ONLINE option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.PadIndex">
            <summary>
            Represents PAD_INDEX option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.SortedData">
            <summary>
            Represents SORTED_DATA option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.SortedDataReorg">
            <summary>
            Represents SORTED_DATA_REORG option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.StatisticsIncremental">
            <summary>
            Represents STATISTICS_INCREMENTAL option in the index definition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.SortInTempDb">
            <summary>
            Represents SORT_IN_TEMPDB option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.StatisticsNoRecompute">
            <summary>
            Represents STATISTICS_NORECOMPUTE option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.StatisticsOnly">
            <summary>
            Represents STATISTICS_ONLY option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.BucketCount">
            <summary>
            Represents BUCKETCOUNT option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.CompressionDelay">
            <summary>
            Represents COMPRESSION_DELAY option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.Resumable">
            <summary>
            Represents RESUMABLE option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.MaxDuration">
            <summary>
            Represents MAX_DURATION option in the index definition.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionType.OptimizeForSequentialKey">
            <summary>
            Represents OPTIMIZE_FOR_SEQUENTIAL_KEY option in the index definition.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType">
            <summary>
            Represents the types of compression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType.None">
            <summary>
            Indicates type of compression specified is NONE.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType.Row">
            <summary>
            Indicates that type of compression specified is ROW.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType.Page">
            <summary>
            Indicates that type of compression is PAGE.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType.ColumnStore">
            <summary>
            Indicates that type of compression specified is COLUMNSTORE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType.ColumnStoreArchive">
            <summary>
            Indicates that type of compression specified is COLUMNSTORE_ARCHIVE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlDataCompressionType.Invalid">
            <summary>
            Indicates that type of compression is specified is invalid.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlIndexOptionCollection">
            <summary>
            Represents the collection of index options in Sql index definition.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertMergeActionSource">
            <summary>
            abstract base class representing the source values for a SqlInsertMergeAction
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlInsertSource">
            <summary>
            represents the source of an insert specificiation
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType">
            <summary>
            Identifiers for various join operator types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.CrossJoin">
            <summary>
            Cross join operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.CrossApply">
            <summary>
            Cross Apply operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.OuterApply">
            <summary>
            Outer Apply operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.InnerJoin">
            <summary>
            Inner join operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.LeftOuterJoin">
            <summary>
            Left Outer join operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.RightOuterJoin">
            <summary>
            Right Outer join operator
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlJoinOperatorType.FullOuterJoin">
            <summary>
            Full Outer join operator
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType">
            <summary>
            Defines different types of the value of a literal expression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Binary">
            <summary>
            Specifies that the underlying type of the expression is binary data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Default">
            <summary>
            Specifies that the literal expression is 'DEFAULT' keyword.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Identifier">
            <summary>
            Specifies that the literal expression was specified as an identifier (e.g. [abc]).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Integer">
            <summary>
            Specifies that the underlying type of the expression one of the integral types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Image">
            <summary>
            Specifies that the underlying type of the expression is image data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Money">
            <summary>
            Specifies that the underlying type of the expression is money data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Null">
            <summary>
            Specifies that the literal expression is the value 'NULL'.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Numeric">
            <summary>
            Specifies that the underlying type of the expression is numeric data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.Real">
            <summary>
            Specifies that the underlying type of the expression is either real or float data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.String">
            <summary>
            Specifies string literal expression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.LiteralValueType.UnicodeString">
            <summary>
            Specifies unicode string literal expression.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlLiteralExpressionCollection">
            <summary>
            Collection of Literal Expressions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeAction">
            <summary>
            common base class for all merge actions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeConditionType">
            <summary>
            the type of merge action clause
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeConditionType.Error">
            <summary>
            an invalid merge condition
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeConditionType.Matched">
            <summary>
            perform the action on rows in the target which have a coresponding row in the source table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeConditionType.SourceNotMatched">
            <summary>
            perform the action on rows in the target which do not have a coresponding row in the source table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeConditionType.TargetNotMatched">
            <summary>
            perform the action on source rows which do not have a coresponding row in the target table
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlMergeActionClauseCollection">
            <summary>
            represents one or more merge action clauses of a merge specification
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModificationType">
            <summary>
            Described modification types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModificationType.Set">
            <summary>
            Used when setting value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModificationType.Add">
            <summary>
            Used when adding value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModificationType.Drop">
            <summary>
            Used when droping value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlExecuteArgumentCollection">
            <summary>
            Represents a collection of SqlExecuteArgument objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType">
            <summary>
            Module option type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.None">
            <summary>
            None option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.Recompile">
            <summary>
            Recompile option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.Encryption">
            <summary>
            Encryption option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.ExecuteAs">
            <summary>
            Execute as option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.SchemaBinding">
            <summary>
            Schema binding option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.ViewMetadata">
            <summary>
            View metadata option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.ReturnsNullOnNullInput">
            <summary>
            Returns null on null input option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.CalledOnNullInput">
            <summary>
            Called on null input option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlModuleOptionType.NativeCompilation">
            <summary>
            Natively Compiled.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.INullCodeObject">
            <summary>
            Common interface for all DOM objects that denote a null reference.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlObjectIdentifierCollection">
            <summary>
            A collection of Object Identifiers
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue">
            <summary>
            The OnOffOption value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue.None">
            <summary>
            Specifies that OnOffOption value is unspecified
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue.Off">
            <summary>
            Specifies that OnOffOption value is OFF
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOnOffValue.On">
            <summary>
            Specifies that OnOffOption value is ON
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortOrder">
            <summary>
            Order direction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortOrder.None">
            <summary>
            None specified 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortOrder.Ascending">
            <summary>
            Ascending sort 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSortOrder.Descending">
            <summary>
            Descending sort
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlOrderByItemCollection">
            <summary>
            Collection of OrderBy items
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlParameterDeclarationCollection">
            <summary>
            Represents a collection of Sql parameter declarations.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinitionForCreate">
            <summary>
            Represents Sql stored procedure definition for create/create or alter statement.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlProcedureDefinitionForCreate.IsOrAlterStatement">
            <summary>
            Gets whether is or alter statement.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlRowConstructorExpressionCollection">
            <summary>
            A collection of SqlRowConstructorExpressions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.ScalarExpressionType">
            <summary>
            Defines different types of scalar expressions.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlScalarExpressionCollection">
            <summary>
            A list of SqlScalarExpression
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSchemaElementCollection">
            <summary>
            Represents the collection of schema elements allowable inside a create schema statement
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SelectExpressionType">
            <summary>
            Defines different types of select expressions.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSelectExpressionCollection">
            <summary>
            A list of SqlSclarExpressions
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetQuantifier">
            <summary>
            Represents ALL/DISTINCT quantifiers.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetQuantifier.None">
            <summary>
            Quantifier not specified.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetQuantifier.All">
            <summary>
            All quantifier specified.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSetQuantifier.Distinct">
            <summary>
            Distinct quantifier specified.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSimpleOrderByItemCollection">
            <summary>
            Collection of SimpleOrderBy items
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSparseOption">
            <summary>
            Represents the options specified on the column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSparseOption.None">
            <summary>
            No option specified.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSparseOption.Sparse">
            <summary>
            Column is a Sparse column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlSparseOption.ColumnSet">
            <summary>
            Column is in fact a column set.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementCollection">
            <summary>
            List of SqlStatement items
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlStatementRecursiveVisitor">
            <summary>
            Recursive sql statement visitor.
            Visits all statements in the subtree of given statement. 
            For each statement calls visit method on given visitor and passes the statement as an argument.
            Statements are passed to the given visitor in pre-order.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableExpressionCollection">
            <summary>
            Represents a collection of SqlTableExpression objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType">
            <summary>
            Values for the possible table hints 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.None">
            <summary>
            No or Invalid hint specified
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.FastFirstRow">
            <summary>
            Defines FASTFIRSTROW table hint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.ForceSeek">
            <summary>
            Defines FORCESEEK table hint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.HoldLock">
            <summary>
            Defines HOLDLOCK table hint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.KeepDefaults">
            <summary>
            Defines KEEPDEFAULTS table hint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.KeepIdentity">
            <summary>
            Defines KEEPIDENTITY table hint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.NoExpand">
            <summary>
            Defines NOEXPAND table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.NoLock">
            <summary>
            Defines NOLOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.NoWait">
            <summary>
            Defines NOWAIT table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.PageLock">
            <summary>
            Defines PAGELOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.ReadCommitted">
            <summary>
            Defines READCOMMITTED table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.ReadCommittedLock">
            <summary>
            Defines READCOMMITTEDLOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.ReadPast">
            <summary>
            Defines READPAST table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.ReadUncommitted">
            <summary>
            Defines READUNCOMMITTED table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.RepeatableRead">
            <summary>
            Defines REPEATABLEREAD table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.Rowlock">
            <summary>
            Defines ROWLOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.Serializable">
            <summary>
            Defines SERIALIZABLE table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.TabLock">
            <summary>
            Defines TABLOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.TabLockX">
            <summary>
            Defines TABLOCKX table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.UpdateLock">
            <summary>
            Defines UPDLOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.XLock">
            <summary>
            Defines XLOCK table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.SpatialWindowMaxCells">
            <summary>
            Defines SPATIAL_WINDOW_MAX_CELLS table hint
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableHintType.Snapshot">
            <summary>
            Defines (SNAPSHOT) table hint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMemberExpression">
            <summary>
            Base class for both data member retrieval and method invocation of a UDT
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTableUdtInstanceMemberExpression.UdtInstance">
            <summary>
            Gets the expression that identifies the UDT instance.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.TemporalPeriodType">
            <summary>
            Defines all different types of Sql temporal periods.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.TemporalPeriodType.SystemTime">
            <summary>
            System time temporal period.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.TemporalPeriodType.AppTime">
            <summary>
            App time temporal period.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActionType">
            <summary>
            Trigger action type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActionType.Delete">
            <summary>
            Delete action.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActionType.Insert">
            <summary>
            Insert action.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActionType.Update">
            <summary>
            Update action.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActivationType">
            <summary>
            Trigger activation type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActivationType.After">
            <summary>
            After trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActivationType.For">
            <summary>
            For trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlTriggerActivationType.InsteadOf">
            <summary>
            Instead of trigger.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMemberExpression">
            <summary>
            Base class for both data member retrieval and method invocation of a UDT
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUdtInstanceMemberExpression.UdtInstance">
            <summary>
            Gets the expression that identifies the UDT instance.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarOperatorType">
            <summary>
            Defines identifiers for supported unary operators. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarOperatorType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarOperatorType.Positive">
            <summary>
            Performs a unary operation that returns the positive value of a numeric expression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarOperatorType.Negative">
            <summary>
            Negates a numeric expression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlUnaryScalarOperatorType.BitwiseNot">
            <summary>
            Performs a bitwise negation of an integer.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption">
            <summary>
            Defines index cluster option (i.e. CLUSTERED and NONCLUSTERED).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.Default">
            <summary>
            Not set - use default.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.Clustered">
            <summary>
            Specifies CLUSTERED option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.NonClustered">
            <summary>
            Specifies NONCLUSTERED option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.NonClusteredHash">
            <summary>
            Specifies NONCLUSTEREDHASH option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.Hash">
            <summary>
            Specifies HASH option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.ClusteredColumnstore">
            <summary>
            Specifies CLUSTERED COLUMNSTORE option.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlClusterOption.NonClusteredColumnstore">
            <summary>
            Specifies NONCLUSTERED COLUMNSTORE option.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlVariableDeclarationCollection">
            <summary>
            Represents a collection of Sql scalar-variable declarations.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.BuiltInFunction.ListHelper">
            <summary>
            This helper class provides lists of all built-in functions and global variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.BuiltInFunction.Item(Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType)">
            <summary>
            Gets an instance of this built-in function with the specified data type as
            its return type. Unless the function has a generic return type (i.e. of type
            MultiTypeBuiltInFunction), this function would return null.
            </summary>
            <param name="dataType">The return data type of the built-in function to get.</param>
            <returns>An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.BuiltInFunction"/> with the specified type
            if the function has generic return type; otherwise, <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.BuiltInFunction.MultiTypeBuiltInFunction">
            <summary>
            This class represents a built-in function with multi-type return value.
            The list of such functions include 'IDENTITY', 'CONVERT' and 'CAST'.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.BuiltInFunctionLookup.Instance">
            <summary>
            Gets singleton instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.BuiltInFunctionLookup"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.CollationLookup.Instance">
            <summary>
            Gets singleton instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.CollationLookup"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnAlias.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,System.String)">
            <summary>
            Creates and initializes a new colum alias object for the specified 
            aliased column and using the specified alias name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="aliasedColumn">The aliased column.</param>
            <param name="alias">Column alias name.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.Null">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> instance that could be used as a place holder
            column.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn"/> object with the 
            specified name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="name">Name of the column to be created.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn"/> object with the specified name.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.CreateSimpleColumn(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> with the specified column name
            and data type. Other than name and data type, all other properties of a simple
            column are set to the property type default value.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="name">Name of the column to be created.</param>
            <param name="dataType">Data type of the column to be created.</param>
            <param name="nullable">Indicates whether the scalar is nullable.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object with the specified name and data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.CreateAnonymousColumn(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents an anonymous column
            of the specified scalar.
            </summary>
            <param name="dataType">Data type of the column to be created.</param>
            <param name="nullable">Indicates whether the scalar is nullable.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.CreateColumnAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object and using the specified alias name.
            </summary>
            <param name="aliasedColumn">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object to be aliased.</param>
            <param name="alias">The column alias name to be used.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.CreateColumnAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object and using the specified alias name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="aliasedColumn">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object to be aliased.</param>
            <param name="alias">The column alias name to be used.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.CreateScalarAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object and using the specified alias name.
            </summary>
            <param name="aliasedScalar">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object to be aliased.</param>
            <param name="alias">The column alias name to be used.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ColumnFactory.CreateScalarAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object and using the specified alias name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="aliasedScalar">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object to be aliased.</param>
            <param name="alias">The column alias name to be used.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.CreateTableDataType(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and returns an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object with the specified
            name and using the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> in creating object
            collections.
            </summary>
            <param name="name">Name of the data type object to create.</param>
            <param name="collationInfo">The collation to be used when creating object collections.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/>.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.CursorDataType">
            <summary>   
            Represents cursor data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.VoidDataType">
            <summary>
            Represents the type of NULL value.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.UnknownDataType">
            <summary>
            Base class of all unknown data types.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.UnknownScalarDataType">
            <summary>
            Unknown SCALAR data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.UnknownTableDataType">
            <summary>
            Unknown TABLE data type
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.UnknownClrDataType">
            <summary>
            Unknown CLR data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DataTypeFactory.XmlNodeDataType">
            <summary>
            Xml node data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.NotForReplication">
            <summary>NotForReplication property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.InsteadOf">
            <summary>InsteadOf property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.Insert">
            <summary>Insert property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.Update">
            <summary>Update property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.Delete">
            <summary>Delete property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.IsEncrypted">
            <summary>IsEncrypted property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.IsEnabled">
            <summary>IsEnabled property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.DmlTrigger.TriggerOptions.IsSqlClr">
            <summary>IsSqlClr property.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase">
            <summary>
            Represents an empty database.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,System.Boolean)">
            <summary>
            Creates an empty database.
            </summary>
            <param name="server">Parent server object.</param>
            <param name="name">Database name.</param>
            <param name="collationInfo">Database collation info.</param>
            <param name="isSystemObject">Specifies whether or not the empty database is system object.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.ApplicationRoles">
            <summary>
            Gets a colleciton of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole"/> objects, each of which
            represents an application role defined on the database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.AsymmetricKeys">
            <summary>
            Gets the colleciton of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> objects that belong to this
            database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Certificates">
            <summary>
            Gets the colleciton of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> objects that belong to this
            database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.CollationInfo">
            <summary>
            Gets database collation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.DefaultSchemaName">
            <summary>
            Gets the name of the database default schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Owner">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents the database owner.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Roles">
            <summary>
            Gets a colleciton of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> objects, each of which
            represents a role defined on the database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Schemas">
            <summary>
            Gets the collection of all schemas in the database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Triggers">
            <summary>
            Gets the collection of all triggers in the database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Users">
            <summary>
            Gets the collection of all users in the database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Server">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that this object belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor{``0})">
            <summary>
            Accepts an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObject"/> through its
            particular interface. The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Parent">
            <summary>
            Gets the object that is parent of this <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.IsSystemObject">
            <summary>
            Gets a value that specifies whether the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> is a system object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor{``0})">
            <summary>
            Accepts an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> through its
            particular interface. The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Name">
            <summary>
            Gets the name of the metadata object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptyDatabase.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor{``0})">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> through its
            particular interface. The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema">
            <summary>
            Represents an empty schema
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String,System.Boolean)">
            <summary>
            Creates an empty schema.
            </summary>
            <param name="database">Parent database object.</param>
            <param name="name">Scheme name.</param>
            <param name="isSystemObject">Specifies whether or not the empty schema is system object.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Database">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that this object belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor{``0})">
            <summary>
            Accepts an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObject"/> through its
            particular interface. The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Owner">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents the owner 
            of the schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Tables">
            <summary>
            Gets the collection of tables that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Views">
            <summary>
            Gets the collection of views that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.UserDefinedAggregates">
            <summary>
            Gets the collection of user-defined aggregates that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.TableValuedFunctions">
            <summary>
            Gets the collection of table-valued functions that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.ScalarValuedFunctions">
            <summary>
            Gets the collection of scalar-valued functions that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.StoredProcedures">
            <summary>
            Gets the collection of stored procedures that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Synonyms">
            <summary>
            Gets the collection of synonyms that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.ExtendedStoredProcedures">
            <summary>
            Gets the collection of extended stored procedures that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.UserDefinedDataTypes">
            <summary>
            Gets the collection of user-defined data types that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.UserDefinedTableTypes">
            <summary>
            Gets the collection of user-defined table types that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.UserDefinedClrTypes">
            <summary>
            Gets the collection of user-defined CLR types that belong to this schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Parent">
            <summary>
            Gets the object that is parent of this <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.IsSystemObject">
            <summary>
            Gets a value that specifies whether the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> is a system object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor{``0})">
            <summary>
            Accepts an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> through its
            particular interface. The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Name">
            <summary>
            Gets the name of the metadata object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.EmptySchema.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor{``0})">
            <summary>
            Accepts an <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object which can
            perform an action on the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> through its
            particular interface. The result value of the performed action is returned.
            </summary>
            <typeparam name="T">Type of the value returned as a result of accepting the visitor.</typeparam>
            <param name="visitor">An <seealso cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> which performs the visit action.</param>
            <returns>The value returned by the visit action.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ObjectFactoryBase`1.Instance">
            <summary>
            Gets singleton instance of <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ParameterFactory.CreateScalarParameter(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object with the specified name
            and data type.
            </summary>
            <param name="name">Name of the parameter to be created.</param>
            <param name="dataType">Data type of the parameter to be created.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/>interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ParameterFactory.CreateScalarParameter(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object with the specified name
            and data type.
            </summary>
            <param name="name">Name of the parameter to be created.</param>
            <param name="dataType">Data type of the parameter to be created.</param>
            <param name="isOutput">True if this is an output parameter.</param>
            <param name="defaultValue">A <see cref="T:System.String"/> that represents the parameter default value.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/>interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ParameterFactory.CreateTableParameter(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableParameter"/> object with the specified name
            and data type.
            </summary>
            <param name="name">Name of the parameter to be created.</param>
            <param name="dataType">Data type of the parameter to be created.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/>interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ParameterFactory.CreateCursorParameter(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter"/> object with the specified name.
            </summary>
            <param name="name">Name of the parameter to be created.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter"/>interface.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ScalarFactory.Literal">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory"/> which can be used to create
            literal scalar expressions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ScalarFactory.Null">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that could be used as a place holder scalar.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ScalarFactory.CreateScalarExpression(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean)">
            <summary>
            Creates and returns an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> that represents the evaluation 
            of a scalar expression with the specified data type.
            </summary>
            <param name="dataType">Scalar data type of the scalar to be created.</param>
            <param name="nullable">Indicates whether the scalar is nullable.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> interface.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ScalarParameter">
            <summary>
            This class represents a T-SQL scalar parameter.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ScalarParameter.#ctor(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Creates a new instance of ScalarParameter with the specified name and
            data type and global lexical scope.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="dataType">Parameter data type.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.ScalarParameter.#ctor(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean,System.String)">
            <summary>
            Creates a new instance of ScalarParameter with the specified name and
            data type.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="dataType">Parameter data type.</param>
            <param name="isOutput">True if this is an output parameter.</param>
            <param name="defaultValue">Parameter default value.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.SystemDataType.GeographyDataType">
            <summary>
            Geography Data Type
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.SystemDataType.GeometryDataType">
            <summary>
            Geometry Data Type
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.SystemDataType.HierarchyIdDataType">
            <summary>
            HierarchyId Data Type
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.SystemDataTypeLookup.Instance">
            <summary>
            Gets singleton instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.SystemDataTypeLookup"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TableAlias.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String)">
            <summary>
            Creates and initializes a new table alias object for the specified 
            aliased table and using the specified alias name.
            </summary>
            <param name="aliasedTable">The aliased table.</param>
            <param name="alias">Table alias name.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateCommonTableExpression(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and returns a common table expression (CTE) object with the specified 
            name and list of columns.
            </summary>
            <param name="name">Name of the common table expression to be created.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateDerivedTable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and returns a derived table object with the specified name and list
            of columns.
            </summary>
            <param name="name">Name of the derived table to be created.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateDmlInsertedTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Creates and returns an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents a DML
            INSERTED table for the specified target table.
            </summary>
            <param name="targetTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> target table object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateDmlDeletedTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Creates and returns an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents a DML
            DELETED table for the specified target table.
            </summary>
            <param name="targetTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> target table object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateDmlTableSource(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and returns a DML table source object with the specified name and 
            list of columns.
            </summary>
            <param name="name">Name of the DML table source to be created.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreatePivotTable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and returns a pivot table object with the specified name and list
            of columns.
            </summary>
            <param name="name">Name of the pivot table to be created.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateTableAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String)">
            <summary>
            Creates and returns a table alias for the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> 
            object with the specified alias.
            </summary>
            <param name="aliasedTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object to be aliased.</param>
            <param name="alias">The table alias.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates and returns a database object table that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and using the specified name.
            </summary>
            <param name="schema">The parent object of the table to be created.</param>
            <param name="name">The name of the table to be created.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTable"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ITable)">
            <summary>
            Creates and returns a database object table that is a copy of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object.
            </summary>
            <param name="table">The table to be used as a source.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTable"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateUnpivotTable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and returns a unpivot table object with the specified name and list
            of columns.
            </summary>
            <param name="name">Name of the unpivot table to be created.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateView(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates and returns a database object view that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and using the specified name.
            </summary>
            <param name="schema">The parent object of the view to be created.</param>
            <param name="name">The name of the view to be created.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.TabularFactory.CreateView(Microsoft.SqlServer.Management.SqlParser.Metadata.IView)">
            <summary>
            Creates and returns a database object view that is a copy of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> object.
            </summary>
            <param name="view">The view to be used as a source.</param>
            <returns>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView"/> interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.VariableFactory.CreateScalarVariable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/> object with the specified name
            and data type.
            </summary>
            <param name="name">Name of the Variable to be created.</param>
            <param name="dataType">Data type of the Variable to be created.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/>interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.VariableFactory.CreateTableVariable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> object with the specified name
            and data type.
            </summary>
            <param name="name">Name of the Variable to be created.</param>
            <param name="dataType">Data type of the Variable to be created.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/>interface.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.VariableFactory.CreateCursorVariable(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/> object with the specified name.
            </summary>
            <param name="name">Name of the Variable to be created.</param>
            <returns>An instance of an object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/>interface.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.XmlDataTypeMethodCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeMethod"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.XmlDataTypeMethodCollection.Instance">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.XmlDataTypeMethodCollection"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.XmlDataTypeTableMethodCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeTableMethod"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Internals.XmlDataTypeTableMethodCollection.Instance">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.XmlDataTypeTableMethodCollection"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ApplicationRoleCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ApplicationRoleCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ApplicationRoleCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has an initial capacity of 8.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ApplicationRoleCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ApplicationRoleCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.AsymmetricKeyCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.AsymmetricKeyCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.AsymmetricKeyCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.AsymmetricKeyCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.AsymmetricKeyCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionCollection"/> class
            that has the default initial capacity.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionCollection"/> class
            that has the specified capacity.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionCollection.PopulatedInstance">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/>
            that is populated.
            </summary>
            <remarks>INTERNAL ONLY - DO NOT MAKE PUBLIC</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase">
            <summary>
            Provides the ability to look up built-in functions.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction},Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase"/> class 
            by using the specified metadata object collections.
            </summary>
            <param name="allBuiltIns">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains all built-in functions and 
            system functions that start with two at signs (@@).</param>
            <param name="dateParts">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart"/> that contains all supported date-parts.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.BuiltInFunctions">
            <summary>
            Gets the collection of built-in functions.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains the built-in functions.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.GlobalVariables">
            <summary>
            Gets the collection of system functions that start with two at signs (@@).
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains the system functions that start with 
            two at signs (@@).</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.AllBuiltIns">
            <summary>
            Gets the collection of built-in functions and system functions that start with two at signs (@@).
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains the built-in functions and 
            system functions that start with two at signs (@@).</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.DateParts">
            <summary>
            Gets the collection built-in function date-part arguments.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart"/> that contains the built-in function 
            date-part arguments.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.BuiltInFunctionLookupBase.GetMultiTypeBuiltInFunction(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType)">
            <summary>
            Returns an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object that represents a
            a built-in function that has a multitype return value (for example, 'CAST', 'CONVERT' and IDENTITY'functions). The returned instance has its
            generic return type replaced by the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/>.
            </summary>
            <param name="name">The function name to retrieve.</param>
            <param name="dataType">The data type to replace the generic return type with.</param>
            <return>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that has the specified name and data type.</return>
            <remarks>When you inherit from <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/>, if you are providing your 
            own built-in object list, you must override this method. Otherwise, the base class implementation of the method returns a null reference.</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle">
            <summary>
            Defines different casing styles for a string literal.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle.None">
            <summary>
            No casing preference.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle.Lowercase">
            <summary>
            All letters in the string are in lowercase.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle.Uppercase">
            <summary>
            All letters in the string are capitalized.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CertificateCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CertificateCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CertificateCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CertificateCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CertificateCollection"/> class
            that has the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationLookupBase">
            <summary>
            Provides the ability to look up collations.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationLookupBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationLookupBase"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationLookupBase.Collations">
            <summary>
            Gets a collection of all supported collations.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> that contains all supported collations.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1">
            <summary>
            Provides helper methods and classes for metadata object collections.
            </summary>
            <typeparam name="T">The type of the elements in the collection.</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Empty">
            <summary>
            Gets a singleton, read-only, empty collection instance.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.EmptyOrdered">
            <summary>
            Gets a singleton, read-only, ordered collection instance.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Merge(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0},Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0})">
            <summary>
            Merges the two specified collections into one collection.
            </summary>
            <param name="collection1">The first <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> to merge.</param>
            <param name="collection2">The second <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> to merge.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that represents the merged collection.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Merge(System.Boolean,Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0},Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0})">
            <summary>
            Merges the two specified collections into one collection.
            </summary>
            <param name="collection1">The first <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> to merge.</param>
            <param name="collection2">The second <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> to merge.</param>
            <param name="allowDuplicates"><c>true</c> to allow duplicates in the collection; otherwise, <c>false</c>.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that represents the merged collection.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Merge(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0}[])">
            <summary>
            Merges the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> objects
            into one collection.
            </summary>
            <param name="collections">The list of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> objects to merge.</param>
            <return>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that 
            represents the merged collection. If no collections are specified, an empty collection is returned. If only one collection is specified, that
            collection instance is returned.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Merge(System.Boolean,Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0}[])">
            <summary>
            Merges two or more collections into one collection.
            </summary>
            <param name="allowDuplicates"><c>true</c> to allow duplicates in the collection; otherwise, <c>false</c>.</param>
            <param name="collections">The list of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> objects to merge.</param>
            <return>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that represents the 
            merged collection. If no collections are specified, an empty collection is returned. If only one collection is specified, that
            collection instance is returned.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Convert``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{``0})">
            <summary>
            Creates a wrapper collection that can be used to access elements in the specified
            collection by using its base type.
            </summary>
            <typeparam name="TDerived">The type of the elements in the collection to be converted.</typeparam>
            <param name="collection">The collection to be converted.</param>
            <return>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that 
            contains the same elements as the specified collection.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.Filter(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0},System.Predicate{`0})">
            <summary>
            Creates a wrapper collection that filters out all the elements that do not
            match the conditions defined by the specified predicate.
            </summary>
            <param name="collection">The original collection.</param>
            <param name="match">The Predicate delegate that defines the conditions of 
            the elements to include in the new collection.</param>
            <return>A wrapper collection that includes only the elements that match 
            the conditions defined in the predicate.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.ApplyOnFirstAccess``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection{``0},System.Action{``0},System.Predicate{``0})">
            <summary>
            Applies the specified action on each element of the specified collection
            the first time the element is accessed.
            </summary>
            <typeparam name="C">The type of the action.</typeparam>
            <param name="collection">The collection of elements to perform the action on.</param>
            <param name="action">The action to perform on each element in the collection.</param>
            <param name="actionCompleted">A predicate that indicates whether the performed action is completed.</param>
            <return>
            A wrapper collection that applies an action on each element when it is accessed for the first time.
            </return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.CreateOrderedCollection(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,`0)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object that
            contains the specified item.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            compare item names.</param>
            <param name="item">The item to add to the collection.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object that contains the specified item.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.CreateOrderedCollection(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,`0,`0)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object that
            contains the two specified items.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to compare item names.</param>
            <param name="item1">The first item to add to the created collection.</param>
            <param name="item2">The second item to add to the created collection.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object that contains 
            the two specified items.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.CreateOrderedCollection(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,`0[])">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object and
            copies all elements from the specified array.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is
            used to compare item names.</param>
            <param name="items">The array of type <typeparamref name="T"/> that contains the elements to copy.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object
            that contains all elements from the array.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.CreateOrderedCollection(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,`0[],System.Int32)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object and
            copies a specified number of of elements from the specified array.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            compare item names.</param>
            <param name="items">The array of type <typeparamref name="T"/> that contains the elements to copy.</param>
            <param name="count">The number of array elements to copy, starting from the first element in the array.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object that contains 
            the specified elements from the array.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.CopyToArray(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{`0})">
            <summary>
            Creates an array that contains all the items from the specified collection.
            </summary>
            <param name="collection">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that 
            contains the items to copy.</param>
            <return>An array of type <typeparamref name="T"/> that contains items from the collection.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.ConvertArray(`0[],Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Returns an instance of IMetadataOrderedCollection that includes all the elements 
            in the array and uses the given CollationInfo object to compare item 
            names.
            </summary>
            <param name="data">The array of data to convert to a collection.</param>
            <param name="collationInfo">CollationInfo cbject to be used to compare item names.</param>
            <returns>An instance of IMetadataOrderedCollection with all the elements in the array.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.MergerOf2Base">
            <summary>
            Base class for a merge of 2 collections of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.MergerOf2">
            <summary>
            Represetns a merge of 2 collections of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.MergerOfNBase">
            <summary>
            Base class for a merge of N collections of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.MergerOfN">
            <summary>
            Represents a merge of N collections of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.WrapperCollection`2">
            <summary>
            This class wraps a collection of a derived class in a collection of one
            of its base classes.
            </summary>
            <typeparam name="TBase">Base class type.</typeparam>
            <typeparam name="TDerived">Derived class type.</typeparam>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FilteredCollection">
            <summary>
            Represents a collection of type <typeparamref name="T"/> with a filter 
            applied to its elements.
            </summary>
            <remarks>
            The behavior of this class is consistent with the wrapper class in the
            sense it does not save a snap shot of the filtered collection, rather it
            it intercepts calls to the filtered collection and applies the filter to
            the returned result.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.OnFirstAccessCollection`1">
            <summary>
            This wrapper collection performs the specified action on each element the
            first time it is accessed. The wrapper collection maintains a list of 
            elements that have been accessed. On initialization this list is created 
            and empty. Each time an element is accessed this list is looked up first, 
            if the element is found it’s returned, otherwise, the input collection is 
            looked up and if the element is found the specified action is performed on 
            it and the element is added to the accessed list.
            </summary>
            <remarks>
            The specified action is performed only if the element is retrieved 
            individually (i.e. this[name]). However, enumerating over all elements
            will not cause the action to be performed. Please note that this is the
            desired behavior since we might enumerate over all elements to retrieve
            names but not necessarily want to perform the action.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FixedOrderedCollectionOfOneItemBase">
            <summary>
            Base class for a fixed collection that contains exactly 1 item.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FixedOrderedCollectionOfOneItem">
            <summary>
            Represents a fixed collection that contains exactly 1 item.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FixedOrderedCollectionOfTwoItemsBase">
            <summary>
            Base class for a fixed collection that contains exactly two items.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FixedOrderedCollectionOfTwoItems">
            <summary>
            Represents a fixed collection that contains exactly two items.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FixedOrderedCollectionBase">
            <summary>
            Base class for fixed collections.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.FixedOrderedCollection">
            <summary>
            Represents a fixed collection that wraps an array of items in an instance
            of IMetadataOrderedCollection.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.EmptyCollectionBase">
            <summary>
            Base class for empty collection.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.Collection`1.EmptyCollection">
            <summary>
            Represents readonly empty collection.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnAttributes">
            <summary>
            Defines a set of attributes that describe the column properties.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnAttributes.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnAttributes.Identity">
            <summary>
            The column is an identity column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnAttributes.InPrimaryKey">
            <summary>
            The column takes part in a primary key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnAttributes.Nullable">
            <summary>
            The column is nullable.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnOrderedCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> objects in which element ordering is preserved.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnOrderedCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnOrderedCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnOrderedCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ColumnOrderedCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ConstraintCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ConstraintCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ConstraintCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ConstraintCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ConstraintCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CredentialCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CredentialCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CredentialCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CredentialCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CredentialCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CursorVariableCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CursorVariableCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CursorVariableCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CursorVariableCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CursorVariableCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseCollection"/> class that
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseCollection"/> class that
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseDdlTriggerCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseDdlTriggerCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseDdlTriggerCollection"/>
            class that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default 
            initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used
            to look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseDdlTriggerCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseDdlTriggerCollection"/> 
            class that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabasePermissionCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabasePermissionCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabasePermissionCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabasePermissionCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabasePermissionCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseRoleCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseRoleCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseRoleCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseRoleCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatabaseRoleCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatePartCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatePartCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatePartCollection"/> class
            that has the default initial capacity.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatePartCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatePartCollection"/> class
            that has the specified capacity.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DatePartCollection.PopulatedInstance">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/>
            that is populated.
            </summary>
            <remarks>INTERNAL ONLY - DO NOT MAKE PUBLIC</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2">
            <summary>
            Provides the base class for metadata object collections.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained 
            to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
            <typeparam name="U">The type of the underlying container, constrained to <see cref="T:System.Collections.Generic.IDictionary`1"/>.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`1"/> 
            class.
            </summary>
            <param name="container">
            The <see cref="T:System.Collections.Generic.IDictionary`1"/> object that is used internally by the collection 
            to store and retrieve items.
            </param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
            <value>The number of elements in the collection.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Microsoft#SqlServer#Management#SqlParser#Metadata#IMetadataCollection{T}#Item(System.String)">
            <summary>
            Gets the specified element from the collection.
            </summary>
            <param name="name">The name of the element to retrieve.</param>
            <return>The <typeparamref name="T"/> object that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Contains(System.String)">
            <summary>
            Determines whether the specified element is in the collection.
            </summary>
            <param name="name">The name of the element to find.</param>
            <return><c>true</c> if the element is in the collection; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Contains(`0)">
            <summary>
            Determines whether the specified element is in the collection.
            </summary>
            <param name="item">The element to find.</param>
            <return><c>true</c> if the element is in the collection; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.FindAll(System.Predicate{`0})">
            <summary>
            Finds all elements in the collection that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to search for.</param>
            <return>An enumerator over all the elements that match the conditions defined by the specified predicate.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.FindAll(System.String)">
            <summary>
            Finds all elements in the collection that have the specified name.
            </summary>
            <param name="name">The name of the element to find.</param>
            <return>An enumerator over all the elements that match the conditions defined by the specified predicate.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.AsMetadataObjectCollection">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetaCollection`1"/> object that contains this collection.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetaCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that contains this collection.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Item(System.String)">
            <summary>
            Gets or sets the <typeparamref name="T"/> object in the collection that has the specified name.
            </summary>
            <param name="name">The name of the object to find in the collection.</param>
            <return>The <typeparamref name="T"/> object that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Add(`0)">
            <summary>
            Adds a <typeparamref name="T"/> object to the collection using its name as the key.
            </summary>
            <param name="item">The metadata object to add.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements in the specified collection to this collection.
            </summary>
            <param name="collection">The collection of metadata objects to add.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Remove(System.String)">
            <summary>
            Removes the <typeparamref name="T"/> object with the specified name from the 
            collection.
            </summary>
            <param name="name">The name of the metadata object to remove.</param>
            <return><c>true</c> if the object is successfully removed; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Remove(`0)">
            <summary>
            Removes the specified <typeparamref name="T"/> object from the collection.
            </summary>
            <param name="item">The object to remove.</param>
            <return><c>true</c> if the object is successfully removed; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Clone">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object that is 
            a copy of this object, except for the elements.
            </summary>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.Clone(System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object that is 
            a copy of this object and, if specified, also copies the elements
            </summary>
            <param name="copyData"><c>true</c> to copy the elements to the newly created collection; otherwise, <c>false</c>.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollectionBase`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <return>An <see cref="T:System.CollectionsGeneric.IEnumerator`1"/> object that can be used to iterate through the collection.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SortedListCollection`1">
            <summary>
            Represents a collection of metadata objects that uses a <see cref="T:System.Collections.Generic.SortedList`1"/> object as the 
            underlying container.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained 
            to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SortedListCollection`1.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SortedListCollection"/> class 
            that uses the specified capacity and collation information.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SortedListCollection`1.Clone(System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object that is 
            a copy of this object and, if specified, also copies the elements.
            </summary>
            <param name="copyData"><c>true</c> to copy the elements to the newly created collection; otherwise, <c>false</c>.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SortedListCollection`1.AsMetadataObjectCollection">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that contains this collection.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that contains this collection.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollection`1">
            <summary>
            Represents a collection of metadata objects that uses an <see cref="T:System.Collections.Generic.Dictionary`1"/> object as 
            the underlying container.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained 
            to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollection`1.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollection"/> class 
            that uses the specified capacity and collation information.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollection`1.Clone(System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object that is 
            a copy of this object and, if specified, also copies the elements.
            </summary>
            <param name="copyData"><c>true</c> to copy the elements to the newly created collection; otherwise, <c>false</c>.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> object.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DictionaryCollection`1.AsMetadataObjectCollection">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that contains this collection.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that contains this collection.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DmlTriggerCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DmlTriggerCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DmlTriggerCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DmlTriggerCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DmlTriggerCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtendedStoredProcedureCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtendedStoredProcedureCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtendedStoredProcedureCollection"/>
            class that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default 
            initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtendedStoredProcedureCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtendedStoredProcedureCollection"/>
            class that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtensionMethods">
            <summary>
            Defines a set of extension methods for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> interface.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtensionMethods.DisplayInfoProvider">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/> object that is used to 
            retrieve the display information properties of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/> object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtensionMethods.GetDisplayName(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the display name of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> to get the display name for.</param>
            <returns>The display name of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtensionMethods.GetDatabaseQualifiedName(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the database-qualified name of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object to get the 
            database-qualified name for.</param>
            <returns>The database-qualified name of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object;
            <c>null</c> if the metadata object does not belong to a database.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtensionMethods.GetDescription(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the description of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object to get the description for.</param>
            <returns>The description of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ExtensionMethods.ToString(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Returns a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object
            to get the string representation for.</param>
            <returns>A string representation of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ForeignKeyColumnCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IForeignKeyColumn"/> objects where element
            ordering is preserved.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ForeignKeyColumnCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and initializes a new instance of the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ForeignKeyColumnCollection"/> class that uses the
            specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ForeignKeyColumnCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates and initializes a new instance of the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ForeignKeyColumnCollection"/> class 
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IAsymmetricKeyFactory">
            <summary>
            Defines methods that create asymmetric key objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IAsymmetricKeyFactory.CreateAsymmetricKey(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableAsymmetricKey"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent 
            of the asymmetric key.</param>
            <param name="name">The name of the asymmetric key.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableAsymmetricKey"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup">
            <summary>
            Provides the ability to look up SQL Server built-in functions and system functions that start with two at signs (@@).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup.BuiltInFunctions">
            <summary>
            Gets a collection that contains all
            SQL Server built-in functions.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains all built-in functions.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup.GlobalVariables">
            <summary>
            Gets a collection that contains all
            SQL Server system functions that start with two at signs (@@).
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains all system functions that start 
            with two at signs (@@).</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup.AllBuiltIns">
            <summary>
            Gets a collection that contains all
            built-in functions and system functions that start with two at signs (@@).
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> that contains built-in functions and 
            system functions that start with two at signs (@@).</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup.DateParts">
            <summary>
            Gets a collection that contains all SQL Server
            built-in function date-part arguments.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart"/> that contains all built-in function date-part arguments.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup.GetMultiTypeBuiltInFunction(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType)">
            <summary>
            Returns an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object that represents a
            a built-in function that has a multitype return value (such as a CAST, CONVERT or IDENTITY function). The 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object returns the specified system data type instead of
            the generic return type.
            </summary>
            <param name="name">The name of the function name to retrieve.</param>
            <param name="dataType">The data type that replaces the generic return type.</param>
            <return>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object that has the specified name 
            and return data type.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICertificateFactory">
            <summary>
            Defines methods that are used to create certificate objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICertificateFactory.CreateCertificate(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCertificate"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent 
            of the certificate.</param>
            <param name="name">The name of the certificate.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCertificate"/> object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup">
            <summary>
            Provides the ability to look up system supported collations.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup.Collations">
            <summary>
            Gets a collection of all system supported collations.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> that contains all system supported collations.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory">
            <summary>
            Defines methods that are used to create <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.Null">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that can be used as a placeholder
            column.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that can be used as a placeholder
            column.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn"/> object that has the 
            specified name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="name">The name of the column.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn"/> object that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.CreateSimpleColumn(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that has the specified column name
            and data type.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The data type of the column.</param>
            <param name="nullable">Indicates whether the scalar is nullable.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that has the specified name and data type.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.CreateAnonymousColumn(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents an anonymous column
            of the specified scalar.
            </summary>
            <param name="dataType">The scalar to create an anonymous column for.</param>
            <param name="nullable">Indicates whether the scalar is nullable.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.CreateScalarAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object and has the specified column alias name.
            </summary>
            <param name="aliasedScalar">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object to be aliased.</param>
            <param name="alias">The column alias name to use.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.CreateScalarAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object and has the specified column alias name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="aliasedScalar">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object to be aliased.</param>
            <param name="alias">The column alias name to use.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.CreateColumnAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object and has the specified column alias name.
            </summary>
            <param name="aliasedColumn">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object to be aliased.</param>
            <param name="alias">The column alias name to use.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory.CreateColumnAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is an alias of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object and has the specified column alias name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the column.</param>
            <param name="aliasedColumn">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object to be aliased.</param>
            <param name="alias">The column alias name to use.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory">
            <summary>
            Defines methods that are used to create constraint objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory.CreateForeignKeyColumn(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn"/> object that has the 
            specified referencing and referenced <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> objects
            </summary>
            <param name="referencingColumn">The column object that is the foreign key referencing column.</param>
            <param name="referencedColumn">The column object that is the foreign key referenced column.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory.CreateCheckConstraint(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint"/> object that has the 
            specified name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the constraint.</param>
            <param name="name">The name of the CHECK constraint to create.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory.CreateDefaultConstraint(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDefaultConstraint"/> object that has the
            specified name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is the parent 
            of the constraint.</param>
            <param name="name">The name of the default constraint to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDefaultConstraint"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory.CreateForeignKeyConstraint(Microsoft.SqlServer.Management.SqlParser.Metadata.ITable,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint"/> object that
            belongs to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> and has the specified
            name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object that is the parent 
            of the constraint.</param>
            <param name="name">The name of the primary key to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory.CreatePrimaryKeyConstraint(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPrimaryKeyConstraint"/> object that is
            associated with the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex"/> object.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is the parent 
            of the constraint.</param>
            <param name="index">The index object that is associated with the primary key to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPrimaryKeyConstraint"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory.CreateUniqueConstraint(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraint"/> object that is
            associated with the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex"/> object.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is the parent 
            of the constraint.</param>
            <param name="index">The index object that is associated with the UNIQUE constraint.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraint"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICredentialFactory">
            <summary>
            Defines methods that are used to create credential objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICredentialFactory.CreateCredential(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCredential"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and has the specified name. 
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent of 
            the credential.</param>
            <param name="name">The name of the credential.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCredential"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory">
            <summary>
            Defines methods that are used to create database objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and has the specified name.
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent 
            of the database object.</param>
            <param name="name">The name of the database object.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the 
            database object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase"/> object that is a clone of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object.
            </summary>
            <param name="otherDatabase">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object to clone.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory.CreateEmptyDatabase(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,System.Boolean)">
            <summary>
            Creates an empty <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object (all collections are empty).
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent of 
            the database object.</param>
            <param name="name">The name of the database object.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the 
            database object.</param>
            <param name="isSystemObject"><c>true</c> to indicate that the empty database is a system object; otherwise, <c>false</c>.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory">
            <summary>
            Defines properties and methods that are used to create <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.Cursor">
            <summary>
            Gets a singleton <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType"/> object that 
            represents a cursor data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType"/> object that 
            represents a <c>cursor</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.UnknownClr">
            <summary>
            Gets a placeholder <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType"/> object that can be used
            when the user-defined data type is not known.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.UnknownScalar">
            <summary>
            Gets a placeholder <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object that can be used
            when the scalar data type is not known.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.UnknownTable">
            <summary>
            Gets a placeholder <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object that can be used
            when the <c>table</c> data type is not known.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.Void">
            <summary>
            Gets a singleton <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object that 
            represents a void data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object that 
            represents a void data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.XmlNode">
            <summary>
            Gets a singleton <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType"/> object that 
            represents an xml node data type, which can be used in a result of xml.nodes() method. 
            </summary>
            /// <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType"/> object that 
            represents an xml node data type.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory.CreateTableDataType(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object that uses the specified
            name and uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object in creating object
            collections.
            </summary>
            <param name="name">The name of the <c>table</c> data type object.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object to use when 
            object collections are created.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory">
            <summary>
            Provides methods that are used to create <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory.CreateExecuteAsCaller">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that
            represents the EXECUTE AS CALLER execution context.
            </summary>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory.CreateExecuteAsLogin(Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that
            represents the EXECUTE AS LOGIN execution context.
            </summary>
            <param name="login">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that represents a SQL Server login.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory.CreateExecuteAsOwner">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that
            represents the EXECUTE AS OWNER execution context.
            </summary>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory.CreateExecuteAsSelf">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that
            represents the EXECUTE AS SELF execution context.
            </summary>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory.CreateExecuteAsUser(Microsoft.SqlServer.Management.SqlParser.Metadata.IUser)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that
            represents the EXECUTE AS USER execution context.
            </summary>
            <param name="user">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents a user name.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory">
            <summary>
            Defines methods that are used to create index objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory.CreateIndexedColumn(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndexedColumn"/> object that uses the 
            specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object as the referenced column.
            </summary>
            <param name="referencedColumn">The column object that is the referenced column of the indexed column.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory.CreateRelationalIndex(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex"/> object 
            that has the specified name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the index.</param>
            <param name="name">The name of the relational index object.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object 
            that the relational index uses.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory">
            <summary>
            Defines methods and properties that are used to create scalar objects that represent typed literal scalar expressions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Binary">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression 
            of <c>binary</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Default">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a DEFAULT literal 
            scalar expression.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Identifier">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a SQL Server identifier 
            literal scalar expression.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Image">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression
            of <c>image</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Integer">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression
            of <c>integer</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Money">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression
            of <c>money</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Null">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a NULL literal scalar 
            expression.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Numeric">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression 
            of <c>numeric</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.Real">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression 
            of <c>real</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.String">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression 
            of <c>string</c> data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory.UnicodeString">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents a literal expression 
            of UNICODE (national) string data type.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory">
            <summary>
            Defines methods that are used to create SQL Server login objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory.CreateAsymmetricKeyLogin(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> object using the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.LoginType"/> property of the created object is set to AsymmetricKey.
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the 
            parent of the login object.</param>
            <param name="name">The name for the login object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory.CreateCertificateLogin(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> object using the the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.LoginType"/> property of the created object is set to Certificate.
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent 
            of the login object.</param>
            <param name="name">The name of the login object.</param>
            <return>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> interface.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory.CreateSqlLogin(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> object using the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.LoginType"/> property of the created object is set to Sql.
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent 
            of the login object.</param>
            <param name="name">The name of the login object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory.CreateWindowsLogin(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> object using the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.LoginType"/> property of the created object is set to Windows.
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent of 
            the login object.</param>
            <param name="name">The name of the login object.</param>
            <return>An object that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin"/> interface.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory.CreatePassword">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword"/> object.
            </summary>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider">
            <summary>
            Defines methods that provide extended display information properties about metadata objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.GetDisplayName(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the display name of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get the display name for.</param>
            <return>The display name of the metadata object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.GetDescription(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the description of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get the description of.</param>
            <return>The description of the metadata object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.GetDatabaseQualifiedName(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the database-qualified name of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get the database-qualified name for.</param>
            <return>The database-qualifed name of the metadata object; a null reference if the metadata object does not belong to a database.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.ObjectToString(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get a string representation for.</param>
            <return>A string representation of the metadata object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.CollectionToString``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{``0},System.Boolean)">
            <summary>
            Gets a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
            <param name="metadataCollection">The metadata collection to get a string representation for.</param>
            <param name="singleLine"><c>true</c> to indicate to that the string is returned as a single line; otherwise, <c>false</c>.</param>
            <return>A string representation of the metadata collection.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.CollectionToString``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection{``0},System.Boolean)">
            <summary>
            Gets a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
            <param name="metadataCollection">The metadata collection to get a string representation for.</param>
            <param name="singleLine"><c>true</c> to indicate to that the string is returned as a single line; otherwise, <c>false</c>.</param>
            <return>A string representation of the metadata collection.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider.BuiltInCasing">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle"/> that is used.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle"/> value that indicates the casing style.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory">
            <summary>
            Defines methods and properties that can be used to create
            metadata objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.AsymmetricKey">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IAsymmetricKeyFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IAsymmetricKeyFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Certificate">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICertificateFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICertificateFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Column">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Constraint">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory"/> object that can be used to create
            table and column constraint objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Credential">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICredentialFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICredentialFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Database">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.DataType">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.ExecutionContext">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Index">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory"/> object that can be used to create index
            and constraint objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Login">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Parameter">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Permission">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IPermissionFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPermission"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IPermissionFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.ResolvedSynonym">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedSynonym"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Role">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Scalar">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Schema">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Server">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.StoredProcedure">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IStoredProcedureFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IStoredProcedureFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Synonym">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISynonymFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISynonymFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Tabular">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Trigger">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory"/>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.User">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.UserDefinedFunction">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.UserDefinedType">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedTypeFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedType"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory.Variable">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory"/> object that could be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory"/> object.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider">
            <summary>
            Defines methods and properties that can be used to access server metadata objects or create metadata objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.Server">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that can be used to access server-side
            metadata objects such as databases, schemas, tables, and so on.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.BuiltInFunctionLookup">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/> object that can be used to lookup 
            built-in functions and system functions that start with @@.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.CollationLookup">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/> object that can be used to look up
            system collations.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.SystemDataTypeLookup">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object that can be used to lookup 
            and retrieve system data types.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.MetadataFactory">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object that can be used to create
            metadata objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.BeforeBindHandler">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler"/> object that 
            will handle the BeforeBind event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler"/> object
            that will handle the BeforeBind event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider.AfterBindHandler">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler"/> object that 
            will handle the AfterBind event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler"/> object
            that will handle the AfterBind event.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexedColumnCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexedColumnCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexedColumnCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexedColumnCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IndexedColumnCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory">
            <summary>
            Defines methods that are used to create parameter objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory.CreateScalarParameter(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object that has the specified name
            and data type.
            </summary>
            <param name="name">The name of the parameter to create.</param>
            <param name="dataType">The data type of the parameter to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory.CreateScalarParameter(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object that has the specified name,
            data type, and default value.
            </summary>
            <param name="name">The name of the parameter to create.</param>
            <param name="dataType">The data type of the parameter to create.</param>
            <param name="isOutput"><c>true</c> to create an output parameter; otherwise, <c>false</c>.</param>
            <param name="defaultValue">The parameter default value.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory.CreateTableParameter(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableParameter"/> object that has the specified name
            and data type.
            </summary>
            <param name="name">The name of the parameter to create.</param>
            <param name="dataType">The data type of the parameter to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory.CreateCursorParameter(System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter"/> object that has the specified name.
            </summary>
            <param name="name">The name of the parameter to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IPermissionFactory">
            <summary>
            Provides methods that can be used to create permission objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IPermissionFactory.CreateDatabasePermission(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal,Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject,Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType,Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal)">
            <summary>
            Creates a permission object that is given to the specified database principal.
            </summary>
            <param name="databasePrincipal">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that is garnted the permission.</param>
            <param name="targetObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object that is the target of the permission.</param>
            <param name="permissionType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType"/> value specyfing the type of the permission.</param>
            <param name="grantor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that grants the permission.</param>
            <returns>n <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission"/> object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory">
            <summary>
            Defines methods that are used to create resolved synonym objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedTableSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.ITable)">
            <summary>
            Creates a resolved synonym object targeting a table.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="table">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedTableSynonym"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedViewSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.IView)">
            <summary>
            Creates a resolved synonym object targeting a view.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="view">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedViewSynonym"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedExtendedStoredProcedureSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure)">
            <summary>
            Creates a resolved synonym object targeting an extended stored procedure.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="extendedStoredProcedure">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedExtendedStoredProcedureSynonym"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedScalarValuedFunctionSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction)">
            <summary>
            Creates a resolved synonym object targeting a scalar valued function.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="scalarValuedFunction">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedScalarValuedFunctionSynonym"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedStoredProcedureSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure)">
            <summary>
            Creates a resolved synonym object targeting a stored procedure.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="storedProcedure">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedStoredProcedureSynonym"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedTableValuedFunctionSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction)">
            <summary>
            Creates a resolved synonym object targeting a table valued function.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="tableValuedFunction">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedTableValuedFunctionSynonym"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory.CreateResolvedUserDefinedAggregateSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym,Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate)">
            <summary>
            Creates a resolved synonym object targeting a user defined aggregate.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object representing a synonym which is resolved.</param>
            <param name="userDefinedAggregate">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate"/> representing a resolved target of the synonym.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedUserDefinedAggregateSynonym"/> object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory">
            <summary>
            Provides methods that can be used to create database role and application role objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory.CreateApplicationRole(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an application role object that belongs to the 
            specified database object and has the specified name.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent 
            of the application role object.</param>
            <param name="name">The name of the application role object to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableApplicationRole"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory.CreateDatabaseRole(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates a database role object that belongs to the 
            specified database object and has the specified name.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent 
            of the database role object.</param>
            <param name="name">The name of the database role object to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseRole"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory">
            <summary>
            Defines methods and properties that can be used to create scalar objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory.Literal">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory"/> object that can be used to create
            literal scalar expressions.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILiteralScalarFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory.Null">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object that can be used as a placeholder scalar.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory.CreateScalarExpression(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType,System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object that represents the 
            evaluation of a scalar expression that has the specified data type.
            </summary>
            <param name="dataType">The scalar data type of the scalar to create.</param>
            <param name="nullable">Indicates whether the scalar is nullable.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory">
            <summary>
            Defines methods that can be used to create schema objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent of 
            the schema object.</param>
            <param name="name">The name of the schema object to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema"/> object that is a clone of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object.
            </summary>
            <param name="otherSchema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object to clone.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory.CreateEmptySchema(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String,System.Boolean)">
            <summary>
            Creates an empty <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object (All collections are empty.).
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent 
            of the schema object.</param>
            <param name="name">The name of the schema object to create.</param>
            <param name="isSystemObject"><c>true</c> to indicate that the empty schema is a system object; otherwise, <c>false</c>.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory">
            <summary>
            Defines methods that can be used to create server objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory.Create(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer"/> object that has the specified name.
            </summary>
            <param name="name">The name of the server object to create.</param>
            <param name="collationInfo">The server collation information (for example, the master database collation).</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer"/> that is a clone of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.
            </summary>
            <param name="otherServer">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object to clone.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IStoredProcedureFactory">
            <summary>
            Defines methods that can be used to create stored procedure objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IStoredProcedureFactory.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure"/> object that belongs
            to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent schema 
            of the stored procedure.</param>
            <param name="name">The name of the stored procedure to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISynonymFactory">
            <summary>
            Defines methods to create synonym objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISynonymFactory.CreateSynonym(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSynonym"/> object that has the specified name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent 
            of the synonym.</param>
            <param name="name">The name of the synonym object to create.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSynonym"/> object.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup">
            <summary>
            Defines methods that can be used to look up and return system data types.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup.Find(Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec,System.Boolean)">
            <summary>
            Retrieves an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that has the specified data type specification 
            and maximum storage size (max) setting.
            </summary>
            <param name="typeSpec">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that 
            represents the built-in type specification.</param>
            <param name="isMaximum"><c>true</c> to specify the maximum storage size (max); otherwise, <c>false</c>.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object; <c>null</c> if a matching
            system data type object cannot be found.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup.Find(Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec,System.Int32)">
            <summary>
            Retrieves an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that has the specified data type 
            specification and precision or maximum length.
            </summary>
            <param name="typeSpec">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that 
            represents the built-in type specification.</param>
            <param name="precisionOrMaxLength">The precision or maximum length of the data type.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object; <c>null</c> if a matching
            system data type object cannot be found.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup.Find(Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec,System.Int32,System.Int32)">
            <summary>
            Retrieves an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that has the specified
            data type specification, precision, and scale.
            </summary>
            <param name="typeSpec">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that represents 
            the built-in type specification.</param>
            <param name="precision">The precision of the data type.</param>
            <param name="scale">The scale of the data type.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object; <c>null</c> if a matching
            system data type object cannot be found.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory">
            <summary>
            Defines methods that can be used to create tabular objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateCommonTableExpression(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates a common table expression (CTE) object that has the specified 
            name and columns.
            </summary>
            <param name="name">The name of the common table expression to create.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateDerivedTable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates a derived table object that has the specified name and columns.
            </summary>
            <param name="name">The name of the derived table to create.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateDmlInsertedTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Creates a DML INSERT table object with the specified target table.
            </summary>
            <param name="targetTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents
            the target table.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateDmlDeletedTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular)">
            <summary>
            Creates a DML DELETE table object with the specified target table.
            </summary>
            <param name="targetTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents
            the target table.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateDmlTableSource(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates a DML table source object that has the specified name and columns.
            </summary>
            <param name="name">The name of the DML table source to create.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreatePivotTable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates a pivot table object that has the specified name and columns.
            </summary>
            <param name="name">The name of the pivot table to create.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates a database table object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has specified name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent 
            of the table.</param>
            <param name="name">The name of the table to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTable"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateTable(Microsoft.SqlServer.Management.SqlParser.Metadata.ITable)">
            <summary>
            Creates a database table object that is a copy of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object.
            </summary>
            <param name="table">The table to copy.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTable"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateTableAlias(Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular,System.String)">
            <summary>
            Creates a table alias for the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> 
            object by using the specified alias.
            </summary>
            <param name="aliasedTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object to alias.</param>
            <param name="alias">The table alias.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateUnpivotTable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Creates an unpivot table object that has the specified name and list
            of columns.
            </summary>
            <param name="name">The name of the unpivot table to create.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateView(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates a database view that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent 
            of the view.</param>
            <param name="name">The name of the view to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory.CreateView(Microsoft.SqlServer.Management.SqlParser.Metadata.IView)">
            <summary>
            Creates a database view that is a copy of the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> object.
            </summary>
            <param name="view">The view to copy.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory">
            <summary>
            Defines methods to create trigger objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory.CreateDmlTrigger(Microsoft.SqlServer.Management.SqlParser.Metadata.ITableViewBase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger"/> object that has the specified name.
            </summary>
            <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent 
            of the trigger.</param>
            <param name="name">The name of the trigger object to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory.CreateDatabaseDdlTrigger(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseDdlTrigger"/> object that 
            belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name. 
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is 
            the parent of trigger object.</param>
            <param name="name">The name of the trigger object to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseDdlTrigger"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory.CreateServerDdlTrigger(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServerDdlTrigger"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object and has the specified name. 
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that is the parent of 
            trigger object.</param>
            <param name="name">The name of the trigger object to create.</param>
            <return>An  <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServerDdlTrigger"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory">
            <summary>
            Defines methods that can be used to create user-defined function objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory.CreateScalarValuedFunction(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> object that
            belongs to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified
            name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent of 
            the function.</param>
            <param name="name">The name of the function to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalarValuedFunction"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory.CreateTableValuedFunction(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> object that
            belongs to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified
            name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent of 
            the function.</param>
            <param name="name">The name of the function to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableValuedFunction"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedTypeFactory">
            <summary>
            Defines methods that can be used to create <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedType"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedTypeFactory.CreateClrType(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedClrType"/> object that
            belongs to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified
            name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent of 
            the type.</param>
            <param name="name">The name of the type to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedClrType"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedTypeFactory.CreateDataType(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedDataType"/> object that
            belongs to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified
            name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent of the type.</param>
            <param name="name">The name of the type to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedDataType"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedTypeFactory.CreateTableType(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedTableType"/> object that
            belongs to the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object and has the specified
            name.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the parent of the type.</param>
            <param name="name">The name of the type to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedTableType"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory">
            <summary>
            Defines methods that can be used to create <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory.CreateAsymmetricKeyUser(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.UserType"/> property of the created object is set to AsymmetricKey.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent of the user.</param>
            <param name="name">The name of the user to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory.CreateCertificateUser(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.UserType"/> property of the created object is set to Certificate.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent of the user.</param>
            <param name="name">The name of the user to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory.CreateNoLoginUser(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.UserType"/> property of the created object is set to NoLogin.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent of the user.</param>
            <param name="name">The name of the user to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory.CreateSqlLoginUser(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.UserType"/> property of the created object is set to SqlLogin.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent of the user.</param>
            <param name="name">The name of the user to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory.CreateExternalProviderUser(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object that belongs to the specified
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object and has the specified name. The 
            <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.UserType"/> property of the created object is set to ExternalProvider.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that is the parent of the user.</param>
            <param name="name">The name of the user to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory">
            <summary>
            Defines methods that can be used to create <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory.CreateScalarVariable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/> object that has the specified name
            and data type.
            </summary>
            <param name="name">The name of the variable to create.</param>
            <param name="dataType">The data type of the variable to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory.CreateTableVariable(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> object that has the specified name
            and data type.
            </summary>
            <param name="name">The name of the variable to create.</param>
            <param name="dataType">The data type of the variable to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory.CreateCursorVariable(System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/> object that has the specified name.
            </summary>
            <param name="name">The name of the variable to create.</param>
            <return>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.LoginCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.LoginCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.LoginCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has an initial capacity of 8.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.LoginCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.LoginCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider">
            <summary>
            Defines a set of methods that provide extended display information for metadata objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.GetDisplayName(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the display name of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get the display name for.</param>
            <return>The display name of the metadata object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.GetDescription(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the description of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get the description of.</param>
            <return>The description of the metadata object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.GetDatabaseQualifiedName(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets the database-qualified name of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get the database-qualified name for.</param>
            <return>The database-qualifed name of the metadata object; <c>null</c> if the metadata object does not belong to a database.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.ObjectToString(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject)">
            <summary>
            Gets a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object.
            </summary>
            <param name="metadataObject">The metadata object to get a string representation for.</param>
            <return>A string representation of the metadata object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.CollectionToString``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection{``0},System.Boolean)">
            <summary>
            Gets a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
            <param name="metadataCollection">The metadata collection to get a string representation for.</param>
            <param name="singleLine"><c>true</c> to indicate to that the string is returned as a single line; otherwise, <c>false</c>.</param>
            <return>A string representation of the metadata collection.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.CollectionToString``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection{``0},System.Boolean)">
            <summary>
            Gets a string representation of the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> object.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
            <param name="metadataCollection">The metadata collection to get a string representation for.</param>
            <param name="singleLine"><c>true</c> to indicate to that the string is returned as a single line; otherwise, <c>false</c>.</param>
            <return>A string representation of the metadata collection.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.BuiltInCasing">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle"/> that is used.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CasingStyle"/> value that indicates the casing style.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.MakeDatabaseQualifiedName(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject)">
            <summary>
            Creates and returns database qualified name for a given <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject"/>.
            </summary>
            <param name="schemaObject">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject"/> to create database qualified name for.</param>
            <returns>A <see cref="T:System.String"/> that represents the database qualified name for the given <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject"/>.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.MetadataObjectDisplayInfo`1">
            <summary>
            Base class of all classes that provide metadata object display info. This
            class provides common functionality such as name casing and property value
            caching.
            </summary>
            <typeparam name="T">The type of the metadata object that this class represents.</typeparam>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataDisplayInfoProvider.MetadataObjectDisplayInfo`1.PropertyCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory">
            <summary>
            Provides the base class for a metadata factory object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.AsymmetricKey">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IAsymmetricKeyFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IAsymmetricKeyFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Certificate">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICertificateFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICertificateFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Column">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IColumnFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Constraint">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory"/> object that can be used to create
            table and column constraint objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IConstraintFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Credential">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICredentialFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICredentialFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Database">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDatabaseFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.DataType">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IDataTypeFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.ExecutionContext">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IExecutionContextFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Index">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory"/> object that can be used to create index
            and constraint objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IIndexFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Login">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ILoginFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Parameter">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IParameterFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Permission">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IPermissionFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IPermissionFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.ResolvedSynonym">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedSynonym"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IResolvedSynonymFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Role">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IRoleFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Scalar">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IScalarFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Schema">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISchemaFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Server">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IServerFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.StoredProcedure">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IStoredProcedureFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IStoredProcedureFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Synonym">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISynonymFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISynonymFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Tabular">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITabularFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Trigger">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ITriggerFactory"/>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.User">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.UserDefinedFunction">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedFunctionFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.UserDefinedType">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IUserDefinedTypeFactory"/> object that can be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedType"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataFactory.Variable">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory"/> object that could be used to create
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable"/> objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IVariableFactory"/> object.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase">
            <summary>
            Provides the abstract base class for a metadata object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase.m_name">
            <summary>
            Gets the name of the metadata object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of  the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase"/> class
            that has the specified name.
            </summary>
            <param name="name">The name of the metadata object.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase.ToString">
            <summary>
            Returns a string representation of the current metadata object.
            </summary>
            <return>A string representation of the current metadata object.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase.Name">
            <summary>
            Gets the name of the metadata object.
            </summary>
            <value>The name of the metadata object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataObjectBase.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned by the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.</typeparam>
            <param name="visitor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value that is returned by the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase">
            <summary>
            Provides the abstract base class for the metadata provider object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase"/> class 
            that uses default <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/>,
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/>, 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/>, and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.#ctor(Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase"/> class 
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/>, 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/>,
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/>, and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> objects.
            </summary>
            <param name="builtInFunctionLookup">
            An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/> object that provides built-in function 
            lookup services. If this value is
            <c>null</c>, a default <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/> object is used.
            </param>
            <param name="collationLookup">
            An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/> object that provides system collation 
            lookup services. If this value is
            <c>null</c>, a default <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/> object is used.
            </param>
            <param name="systemDataTypeLookup">
            An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object that provides system data type 
            lookup services. If this value is
            <c>null</c>, a default <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object is used.
            </param>
            <param name="metadataFactory">
            An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object that provides metadata object creation 
            services. If this value is
            <c>null</c>, a default <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object is used.
            </param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.Server">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that can be used to access server-side
            metadata objects such as databases, schemas, tables, and so on.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.BuiltInFunctionLookup">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/> object that can be used to
            look up built-in functions and global variables.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IBuiltInFunctionLookup"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.CollationLookup">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/> object that can be used to
            look up system collations.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollationLookup"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.SystemDataTypeLookup">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object that can be used to look up 
            and retrieve system data types.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.MetadataFactory">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object that can be used to create
            metadata objects.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.BeforeBindHandler">
            <summary>
            Gets the method that will handle the BeforeBind event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler"/> object that
            will handle the BeforeBind event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderBase.AfterBindHandler">
            <summary>
            Gets the method that will handle the AfterBind event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler"/> object that
            will handle the AfterBind event.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventArgs">
            <summary>
            Provides data for the AfterCheck, AfterCollapse, AfterExpand, or AfterSelect 
            events of an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventHandler">
            <summary>
            Represents the method that will handle the AfterCheck, AfterCollapse, AfterExpand, 
            or AfterSelect event of an <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataProvider"/> object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderEventArgs"/> object
            that contains the event data.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils">
            <summary>
            Provides utilities for the metadata provider.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names">
            <summary>
            Provides the common names of the SQL Server objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Database">
            <summary>
            Provides the common names of the SQL Server databases.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Database.Master">
            <summary>
            Gets the name of the master database ("master").
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Database.Model">
            <summary>
            Gets the name of the model database ("model").
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Database.Msdb">
            <summary>
            Gets the name of the msdb database ("msdb").
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Database.TempDb">
            <summary>
            Gets the name of the tempdb database ("tempdb").
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Schema">
            <summary>
            Provides the common names of the SQL Server schemas.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Schema.Dbo">
            <summary>
            Gets the name of the dbo schema ("dbo").
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Schema.InformationSchema">
            <summary>
            Gets the name of the information schema ("INFORMATION_SCHEMA").
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.Names.Schema.Sys">
            <summary>
            Gets the name of the sys schema ("sys").
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.MetadataProviderUtils.GetStoredProcParameters(System.String,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo,Microsoft.SqlServer.Management.SqlParser.Parser.ParseOptions)">
            <summary>
            Retrieves the stored procedure parameters.
            </summary>
            <param name="storedProcText">The stored procedure text.</param>
            <param name="metadataFactory">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataFactory"/> object that 
            is used to create metadata objects.</param>
            <param name="dataTypeLookup">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ISystemDataTypeLookup"/> object 
            that is used to search for available system data types.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that 
            represents the collation of the related database.</param>
            <param name="parseOptions">The parsing options.</param>
            <return>An ordered collection of parameters; <c>null</c> if no parameters are present.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DualTypeSortedListCollection`2">
            <summary>
            Represents a collection of metadata objects that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/>
            for <typeparamref name="T"/> and <typeparamref name="B"/> types.
            </summary>
            <typeparam name="T">The main type of elements in the collection.</typeparam>
            <typeparam name="B">A base class or an interface that the main type <typeparamref name="T"/> extends or implements.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DualTypeSortedListCollection`2.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.DualTypeSortedListCollection`1"/>
            class that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TriTypeSortedListCollection`3">
            <summary>
            Represents a collection of metadata objects that implements <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/>
            for <typeparamref name="T"/>, <typeparamref name="B1"/> and  <typeparamref name="B2"/> types.
            </summary>
            <typeparam name="T">The main type of elements in the collection.</typeparam>
            <typeparam name="B1">A base class or an interface that the main type <typeparamref name="T"/> extends or implements.</typeparam>
            <typeparam name="B2">A base class or an interface that the main type <typeparamref name="T"/> extends or implements.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TriTypeSortedListCollection`3.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TriTypeSortedListCollection`1"/>
            class that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1">
            <summary>
            Represents a metadata object collection that preserves item ordering.
            </summary>
            <typeparam name="T">The type of the elements in the collection.</typeparam>
            <remarks>
            This collection can be used when the order of the items must be preserved (for example, parameter collections).
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1"/> class 
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The initial number of elements that the collection can contain.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Add(`0)">
            <summary>
            Adds a <typeparamref name="T"/> object to the collection using its name as the key.
            </summary>
            <param name="item">The object to add.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to this collection.
            </summary>
            <param name="items">The collection of objects to add.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <return>The element at the specified index.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
            <value>The number of elements in the collection.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Contains(System.String)">
            <summary>
            Determines whether the specified element is in the collection.
            </summary>
            <param name="name">The name of the element to find.</param>
            <return><c>true</c> if the element is in the collection; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Contains(`0)">
            <summary>
            Determines whether the specified element is in the collection.
            </summary>
            <param name="item">The element to find.</param>
            <return><c>true</c> if the element is in the collection; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.FindAll(System.Predicate{`0})">
            <summary>
            Finds all elements in the collection that match the conditions that are defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to search for.</param>
            <return>An enumerator over all the elements that match the conditions defined by the specified predicate.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.FindAll(System.String)">
            <summary>
            Finds all elements in the collection that have the specified name.
            </summary>
            <param name="name">The name of the element to find.</param>
            <return>An enumerator over all the elements that match the conditions that are defined by the specified predicate.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.AsMetadataObjectCollection">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that contains this collection.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that contains this collection.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <return>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> object that can be used to iterate through the collection.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Item(System.String)">
            <summary>
            Gets or sets the element that has the specified name.
            </summary>
            <param name="name">The name of the element.</param>
            <return>The element that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Remove(System.String)">
            <summary>
            Removes the element that has the specified name from the collection.
            </summary>
            <param name="name">The name of the element to remove.</param>
            <return><c>true</c> if the element is successfully removed; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Remove(`0)">
            <summary>
            Removes the specified element from the collection.
            </summary>
            <param name="item">The element to remove.</param>
            <return><c>true</c> if the element is successfully removed; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Clone">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> instance that is 
            a copy of this object, except for the elements.
            </summary>
            <return>An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollectionBase`1.Clone(System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> instance that is 
            a copy of this object and, if specified, also copies the elements.
            </summary>
            <param name="copyData"><c>true</c> to copy the elements to the newly created collection; otherwise, <c>false</c>.</param>
            <return>An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/>.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollection`1">
            <summary>
            Represents an ordered collection.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained 
            to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollection`1.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has an initial capacity of 16.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollection`1.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.OrderedCollection`1.AsMetadataObjectCollection">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that contains this collection.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that contains this collection.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter"/> objects
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ParameterCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ParameterCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ParameterCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ParameterCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarValuedFunctionCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarValuedFunctionCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarValuedFunctionCollection"/>
            class that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarValuedFunctionCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarValuedFunctionCollection"/>
            class that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariable">
            <summary>
            This class represents a SQL scalar local variable
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariable.#ctor(System.String,Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Creates a new instance of ScalarVariable with the specified name and
            data type.
            </summary>
            <param name="name">Variable name.</param>
            <param name="dataType">Variable data type.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariable.IsParameter">
            <summary>
            Gets a value that indicates whether this is a parameter.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariable.ScalarType">
            <summary>
            Gets scalar type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariable.DataType">
            <summary>
            Gets scalar metadata object data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariable.Nullable">
            <summary>
            Gets a value that indicates whether the column accepts null values.
            </summary>
            <value><c>true</c> if the column accepts null values; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariableCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariableCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariableCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariableCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ScalarVariableCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SchemaCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SchemaCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SchemaCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SchemaCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SchemaCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ServerDdlTriggerCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ServerDdlTriggerCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ServerDdlTriggerCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ServerDdlTriggerCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ServerDdlTriggerCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StatisticsCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StatisticsCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StatisticsCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StatisticsCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StatisticsCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StoredProcedureCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StoredProcedureCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StoredProcedureCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StoredProcedureCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.StoredProcedureCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SynonymCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SynonymCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SynonymCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has  
            the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SynonymCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SynonymCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase">
            <summary>
            Provides look up functionality for system data types.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Find(Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec,System.Boolean)">
            <summary>
            Retrieves the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that has the specified data type
            specification and maximum storage size (max) setting.
            </summary>
            <param name="typeSpec">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that 
            represents the built-in type specification.</param>
            <param name="isMaximum"><c>true</c> to specify the maximum storage size (max); otherwise, <c>false</c>.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object; <c>null</c> if a matching
            system data type object cannot be found.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Find(Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec,System.Int32)">
            <summary>
            Retrieves the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that has the specified data type 
            specification and the specified precision or maximum length.
            </summary>
            <param name="typeSpec">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that 
            represents the built-in type specification.</param>
            <param name="precisionOrMaxLength">The precision or maximum length of the data type.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object; <c>null</c> if a matching
            system data type object cannot be found.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Find(Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec,System.Int32,System.Int32)">
            <summary>
            Retrieves the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that has the specified data type 
            specification, precision, and scale.
            </summary>
            <param name="typeSpec">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that 
            represents the built-in type specification.</param>
            <param name="precision">The precision of the data type.</param>
            <param name="scale">The scale of the data type.</param>
            <returns>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object; <c>null</c> if a matching
            system data type object cannot be found.</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.BigInt">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>bigint</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>bigint</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Bit">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>bit</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>bit</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Date">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>date</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>date</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.DateTime">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetime</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetime</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Float">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>float</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>float</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Geography">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>geography</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>geography</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Geometry">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>geometry</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>geometry</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.HierarchyId">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>hierarchyid</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>hierarchyid</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Image">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>image</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>image</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Int">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>int</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>int</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Money">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>money</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>money</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.NText">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>ntext</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>ntext</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.NVarCharMax">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nvarchar(max)</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nvarchar(max)</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Real">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>real</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>real</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.SmallDateTime">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>smalldatetime</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>smalldatetime</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.SmallInt">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>smallint</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>smallint</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.SmallMoney">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>smallmoney</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>smallmoney</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.SysName">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>sysname</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>sysname</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Text">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>text</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>text</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Timestamp">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>timestamp</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>timestamp</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.TinyInt">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>tinyint</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>tinyint</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.UniqueIdentifier">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>uniqueidentifier</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>uniqueidentifier</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.VarBinaryMax">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varbinary(max)</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varbinary(max)</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.VarCharMax">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varchar(max)</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varchar(max)</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Variant">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>variant</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>variant</c> data type.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Binary">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>binary</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>binary</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Binary(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>binary</c> data type
            and has the specified maximum length.
            </summary>
            <param name="maxLength">The maximum length of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>binary</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Char">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>char</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>char</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Char(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>char</c> data type
            and has the specified maximum length.
            </summary>
            <param name="maxLength">The maximum length of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>char</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.DateTime2">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetime2</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetime2</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.DateTime2(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetime2</c> data type
            and has the specified scale.
            </summary>
            <param name="scale">The scale of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetime2</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.DateTimeOffset">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetimeoffset</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetimeoffset</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.DateTimeOffset(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetimeoffset</c> data 
            type and has the specified scale.
            </summary>
            <param name="scale">The scale of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>datetimeoffset</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.NChar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nchar</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nchar</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.NChar(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nchar</c> data type
            and has the specified maximum length.
            </summary>
            <param name="maxLength">The maximum length of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nchar</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.NVarChar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nvarchar</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nvarchar</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.NVarChar(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nvarchar</c> data type
            and has the specified maximum length.
            </summary>
            <param name="maxLength">The maximum length of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>nvarchar</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Time">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>time</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>time</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Time(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>time</c> data type
            and has the specified scale.
            </summary>
            <param name="scale">The scale of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>time</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.VarBinary">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varbinary</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varbinary</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.VarBinary(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varbinary</c> data type
            and has the specified maximum length.
            </summary>
            <param name="maxLength">The maximum length of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varbinary</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.VarChar">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varchar</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varchar</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.VarChar(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varchar</c> data type
            and has the specified maximum length.
            </summary>
            <param name="maxLength">The maximum length of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>varchar</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Decimal">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>decimal</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>decimal</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Decimal(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>decimal</c> data type
            and has the specified precision.
            </summary>
            <param name="precision">The precision of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>decimal</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Decimal(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>decimal</c> data type
            and has the specified precision and scale.
            </summary>
            <param name="precision">The precision of the data type.</param>
            <param name="scale">The scale of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>decimal</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Numeric">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>numeric</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>numeric</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Numeric(System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>numeric</c> data type
            and has the specified precision.
            </summary>
            <param name="precision">The precision of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>numeric</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Numeric(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>numeric</c> data type
            and has the specified precision and scale.
            </summary>
            <param name="precision">The precision of the data type.</param>
            <param name="scale">The scale of the data type.</param>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>numeric</c> data type.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.SystemDataTypeLookupBase.Xml">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>xml</c> data type.
            </summary>
            <returns>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the <c>xml</c> data type.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableValuedFunctionCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableValuedFunctionCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableValuedFunctionCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableValuedFunctionCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableValuedFunctionCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableValuedFunctionCollection.CreateBuiltInCollection(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema)">
            <summary>
            Gets a singleton instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/>
            that is populated with built-in table-valued functions.
            </summary>
            <remarks>INTERNAL ONLY - DO NOT MAKE PUBLIC</remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableVariableCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableVariableCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableVariableCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableVariableCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TableVariableCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TabularCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TabularCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TabularCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TabularCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.TabularCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember[])">
            <summary>
            Creates and initializes a new instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection"/>
            class that contains all <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> objects in the specified 
            array.
            </summary>
            <param name="dataMembers">
            A collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> to be added to the newly created
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection"/> instance.
            </param>
            <returns>
            An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection"/> class that contains all
            items in the specified array.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtDataMemberCollection"/> class
            that is empty and has the specified capacity.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMemberCollectionBase`1">
            <summary>
            Provides the abstract base class for a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMember"/> objects.
            </summary>
            <typeparam name="T">A class that implements the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMember"/> interface.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMemberCollectionBase`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMemberCollectionBase`1"/>
            class that has the specified initial capacity.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection.Create(Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod[])">
            <summary>
            Creates and initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection"/>
            class that contains all <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> objects in the specified 
            array.
            </summary>
            <param name="methods">
            A collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod"/> to be added to the newly created
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection"/> instance.
            </param>
            <returns>
            An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection"/> class that contains all
            items in the specified array.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection"/> class
            that has the default initial capacity.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UdtMethodCollection"/> class
            that has the specified capacity.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedAggregateCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedAggregateCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedAggregateCollection"/>
            class that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has 
            the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedAggregateCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedAggregateCollection"/>
            class that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedClrTypeCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedType"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedClrTypeCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedClrTypeCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has the default 
            initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedClrTypeCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedClrTypeCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedDataTypeCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedDataTypeCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedDataTypeCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has 
            the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedDataTypeCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedDataTypeCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedTableTypeCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedTableTypeCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedTableTypeCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has  
            the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedTableTypeCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.UserDefinedTableTypeCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ViewCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ViewCollection.#ctor(Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ViewCollection"/> class
            that uses the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object and has  
            the default initial capacity.
            </summary>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ViewCollection.#ctor(System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ViewCollection"/> class
            that uses the specified capacity and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object.
            </summary>
            <param name="initialCapacity">The number of elements that the new collection can initially store.</param>
            <param name="collationInfo">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used to 
            look up elements.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataInfoProvider">
            <summary>
            MetadataInfoProvider
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet">
            <summary>
            Represents a set of DDL trigger event types.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.Add(System.String)">
            <summary>
            Adds an element to the set.
            </summary>
            <param name="item">A <see cref="T:System.String"/> value
            that specifies the event type to add to the set.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.Remove(System.String)">
            <summary>
            Removes an element from the set.
            </summary>
            <param name="item">A <see cref="T:System.String"/> value
            that specifies the event type to remove from the set.</param>
            <returns><c>true</c> if the element is successfully removed; <c>false</c> if the element is not found in the set, or if the element is not
            successfully removed string the set.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.Clear">
            <summary>
            Removes all elements from the set.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.Contains(System.String)">
            <summary>
            Determines whether an element is in the set.
            </summary>
            <param name="item">A <see cref="T:System.String"/> value
            that specifies the event type to find.</param>
            <returns><c>true</c> if the element is found; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the set.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> object that can be used to iterate through the set.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.TriggerEventTypeSet.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the set.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the set.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataIdGenerator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataObjectId.#ctor(System.Collections.Generic.IList{Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataObjectSelector})">
            <summary>
            
            </summary>
            <param name="selectors"></param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataObjectSelector">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder">
            <summary>
            The enumeration specifies the relative activation order of a trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder.None">
            <summary>
             Trigger will be executed in a default order.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder.First">
            <summary>
            Trigger will be executed before other triggers.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder.Last">
            <summary>
            Trigger will be executed after other triggers.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataPropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataTypeInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CallableModuleType">
            <summary>
            Defines callabale module types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.CallableModuleType.ExtendedStoredProcedure">
            <summary>
            An extended stored procedure.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.CallableModuleType.ScalarFunction">
            <summary>
            A scalar function.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.CallableModuleType.StoredProcedure">
            <summary>
            A stored procedure.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo">
            <summary>
            Provides information about a specific database collation.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.syncObj">
            <summary>
            lock object to handle multi-thread access to Collations dictionary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.Default">
            <summary>
            Gets an instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> that represents the default 
            collation. The default collation is 'SQL_Latin1_General_CP1_CI_AS'.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that represents the default 
            collation.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.Ordinal">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that internally performs
            case-sensitive ordinal string comparisons.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that internally performs
            case-sensitive ordinal string comparisons.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.OrdinalIgnoreCase">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that internally performs
            case-insensitive ordinal string comparisons.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that internally performs
            case-insensitive ordinal string comparisons.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.Collations">
            <summary>
            Gets a collection of supported collations.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollation"/> that contains supported collations.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.GetCollationInfo(System.String)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that has the specified name.
            </summary>
            <param name="collationName">The name of the collation to get.</param>
            <return>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.GetCollationInfo(Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object 
            for the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollation"/>
            object.
            </summary>
            <param name="collation">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.ICollation"/> object that 
            describes the collation to get.</param>
            <return>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object for the 
            specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.GetCollationInfo(System.Int32,System.Globalization.CompareOptions)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object for the 
            specified culture identifier and comparison options.
            </summary>
            <param name="lcid">The culture identifier.</param>
            <param name="compareOptions">The <see cref="T:System.Globalization.CompareOptions"/> value that specifies the
            comparison options.</param>
            <return>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object for 
            the specified culture identifier and comparison options, or a null reference if one is not found.</return>
            <remarks>This method first checksif we already have the collation in the cache. If not, it will look it up and add 
            it to the cache if it is found. Returns null if collation info is not found in the cache and lookup method.
            </remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.LCID">
            <summary>
            Gets the LCID value associated with the collation.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.Comparer">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IComparer`1"/> object that can be used to compare strings.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IComparer`1"/> object that can be used to compare strings.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.EqualityComparer">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> object that can be used to compare strings for equality.
            </summary>
            <value>An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> object that can be used to compare strings
            for equality.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.IsPrefix(System.String,System.String)">
            <summary>
            Determines whether the specified source string starts with the specified prefix.
            </summary>
            <param name="source">The source string to search.</param>
            <param name="prefix">The prefix to compare with the beginning of the source.</param>
            <return>
            <code>true</code> if the length of the prefix is less than or equal to the length
            of the source and the source starts with the prefix; otherwise, <code>false</code>.
            </return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.ToString">
            <summary>
            Returns a string representation of the current object.
            </summary>
            <return>A string that represents the current object.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.Name">
            <summary>
            Gets the name of the collation.
            </summary>
            <value>The name of the collation.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.Microsoft#SqlServer#Management#SqlParser#Metadata#IMetadataObject#Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned by the visitor.</typeparam>
            <param name="visitor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value returned by the visitor.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.TryGetCultureInfo(System.Int32)">
            <summary>
            Helper method that retrieves and returns <see cref="T:System.Globalization.CultureInfo"/> object for
            the specified culture identifier.
            </summary>
            <param name="id">A culture identifier.</param>
            <returns>A read-only <see cref="T:System.Globalization.CultureInfo"/> object.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo.GetCollationInfoInternal(System.String)">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object 
            that has the specified name.
            </summary>
            <param name="collationName">The name of the collation to get.</param>
            <return>
            A <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.CollationInfo"/> object 
            that has the specified name.
            </return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo">
            <summary>
            Provides the SQL Server computed column specification.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo"/> class using the given computed column specification.
            </summary>
            <param name="text">The computed column Transact-SQL expression text.</param>
            <param name="isPersisted"><c>true</c> to indicate that the computed column is persisted; otherwise, <c>false</c>.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo.IsPersisted">
            <summary>
            Gets a value that indicates whether the computed 
            value of the column is saved with the data.
            </summary>
            <value><c>true</c> if the computed value is saved with the data; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo.Text">
            <summary>
            Gets the Transact-SQL expression that is used to generate the value of the
            computed column.
            </summary>
            <value>The Transact-SQL expression that is used to generate the value of the computed column.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ConstraintType">
            <summary>
            Specifies SQL Server constraint types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ConstraintType.Check">
            <summary>
            A table or column CHECK constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ConstraintType.ForeignKey">
            <summary>
            A table FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ConstraintType.PrimaryKey">
            <summary>
            A table PRIMARY KEY constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ConstraintType.Unique">
            <summary>
            A table UNIQUE constraint.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType">
            <summary>
            Specifies SQL Server database perimission types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Alter">
            <summary>
            An ALTER permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyApplicationRole">
            <summary>
            An ALTER ANY APPLICATION ROLE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyAssembly">
            <summary>
            An ALTER ANY ASSEMBLY permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyAsymmetricKey">
            <summary>
            An ALTER ANY ASYMMETRIC KEY permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyCertificate">
            <summary>
            An ALTER ANY CERTIFICATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyContract">
            <summary>
            An ALTER ANY CONTRACT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyDatabaseAudit">
            <summary>
            An ALTER ANY DATABASE AUDIT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyDatabaseDdlTrigger">
            <summary>
            An ALTER ANY DATABASE DDL TRIGGER permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyDatabaseEventNotification">
            <summary>
            An ALTER ANY DATABASE EVENT NOTIFICATION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyDataspace">
            <summary>
            An ALTER ANY DATASPACE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyFulltextCatalog">
            <summary>
            An ALTER ANY FULLTEXT CATALOG permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyMask">
            <summary>
            An ALTER ANY MASK permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyMessageType">
            <summary>
            An ALTER ANY MESSAGE TYPE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyRemoteServiceBinding">
            <summary>
            An ALTER ANY REMOTE SERVICE BINDING permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyRole">
            <summary>
            An ALTER ANY ROLE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyRoute">
            <summary>
            An ALTER ANY ROUTE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnySchema">
            <summary>
            An ALTER ANY SCHEMA permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyService">
            <summary>
            An ALTER ANY SERVICE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnySymmetricKey">
            <summary>
            An ALTER ANY SYMMETRIC KEY permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnyUser">
            <summary>
            An ALTER ANY USER permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Authenticate">
            <summary>
            An AUTHENTICATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.BackupDatabase">
            <summary>
            A BACKUP DATABASE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.BackupLog">
            <summary>
            A BACKUP LOG permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Checkpoint">
            <summary>
            A CHECKPOINT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Connect">
            <summary>
            A CONNECT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ConnectReplication">
            <summary>
            A CONNECT REPLICATION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Control">
            <summary>
            A CONTROL permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateAggregate">
            <summary>
            A CREATE AGGREGATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateAssembly">
            <summary>
            A CREATE ASSEMBLY permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateAsymmetricKey">
            <summary>
            A CREATE ASYMMETRIC KEY permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateCertificate">
            <summary>
            A CREATE CERTIFICATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateContract">
            <summary>
            A CREATE CONTRACT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateDatabase">
            <summary>
            A CREATE DATABASE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateDatabaseDdlEventNotification">
            <summary>
            A CREATE DATABASE DDL EVENT NOTIFICATION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateDefault">
            <summary>
            A CREATE DEFAULT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateFulltextCatalog">
            <summary>
            A CREATE FULLTEXT CATALOG permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateFunction">
            <summary>
            A CREATE FUNCTION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateMessageType">
            <summary>
            A CREATE MESSAGE TYPE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateProcedure">
            <summary>
            A CREATE PROCEDURE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateQueue">
            <summary>
            A CREATE QUEUE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateRemoteServiceBinding">
            <summary>
            A CREATE REMOTE SERVICE BINDING permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateRole">
            <summary>
            A CREATE ROLE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateRoute">
            <summary>
            A CREATE ROUTE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateRule">
            <summary>
            A CREATE RULE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateSchema">
            <summary>
            A CREATE SCHEMA permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateService">
            <summary>
            A CREATE SERVICE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateSymmetricKey">
            <summary>
            A CREATE SYMMETRIC KEY permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateSynonym">
            <summary>
            A CREATE SYNONYM permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateTable">
            <summary>
            A CREATE TABLE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateType">
            <summary>
            A CREATE TYPE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateView">
            <summary>
            A CREATE VIEW permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.CreateXmlSchemaCollection">
            <summary>
            A CREATE XML SCHEMA COLLECTION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Delete">
            <summary>
            A DELETE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Execute">
            <summary>
            An EXECUTE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Impersonate">
            <summary>
            An IMPERSONATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Insert">
            <summary>
            An INSERT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Receive">
            <summary>
            A RECEIVE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.References">
            <summary>
            A REFERENCES permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Select">
            <summary>
            A SELECT permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Send">
            <summary>
            A SEND permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Showplan">
            <summary>
            A SHOWPLAN permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.SubscribeQueryNotifications">
            <summary>
            A SUBSCRIBE QUERY NOTIFICATIONS permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.TakeOwnership">
            <summary>
            A TAKE OWNERSHIP permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Unmask">
            <summary>
            An UNMASK permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.Update">
            <summary>
            An UPDATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ViewAnyColumnEncryptionKeyDefinition">
            <summary>
            An VIEW ANY COLUMN ENCRYPTION KEY DEFINITION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ViewAnyColumnMasterKeyDefinition">
            <summary>
            An VIEW ANY COLUMN MASTER KEY DEFINITION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ViewChangeTracking">
            <summary>
            A VIEW CHANGE TRACKING permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ViewDatabaseState">
            <summary>
            A VIEW DATABASE STATE permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ViewDefinition">
            <summary>
            A VIEW DEFINITION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.AlterAnySensitivityClassification">
            <summary>
            A ALTER ANY SENSITIVITY CLASSIFICATION permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType.ViewAnySensitivityClassification">
            <summary>
            A VIEW ANY SENSITIVITY CLASSIFICATION permission.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec">
            <summary>
            Represents a system data type numeric-argument specification.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.Name">
            <summary>
            Gets the name of the data type argument.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.MinValue">
            <summary>
            Gets the minimum valid value for the data type argument.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.MaxValue">
            <summary>
            Gets the maximum valid value for the data type argument.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.DefaultValue">
            <summary>
            Gets the default value of the data type argument.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.ToString">
            <summary>
            Returns a string representation of the current object.
            </summary>
            <return>A string representation of the current object.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.NumericPrecision">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a numeric precision argument.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/>c object that represents a numeric precision argument.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.NumericScale">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a numeric scale argument.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a numeric scale argument.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.TimeScale">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a time scale argument.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a time scale argument.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.DoubleByteLength">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a double-byte length argument
            (for example, nvarchar).
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a double-byte length argument.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec.SingleByteLength">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a single-byte length argument
            (for example, varchar).
            </summary>
            <value>A D<see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that represents a single-byte length argument.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec">
            <summary>
            Represents a built-in data type specification.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.GetDataTypeSpec(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object with a name that matches
            the specified name.
            </summary>
            <param name="typeName">The name of the data type specification to find.</param>
            <return>
            An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object if found; otherwise,
            a null reference.
            </return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.SqlDataType">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType"/> value of the built-in data type.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType"/> value that specifies
            the built-in data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Name">
            <summary>
            Gets the name of the data type.
            </summary>
            <value>The name of the data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.RequireLength">
            <summary>
            Gets a value that indicates whether the data type requires a length.
            </summary>
            <value><c>true</c> if the data type requires a length; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.ArgIsScale">
            <summary>
            Gets a value that indicates whether the first argument represents the scale or the length.
            </summary>
            <value><c>true</c> if the first argument represents the scale; <c>false</c> if the first argument represents the length.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.ArgSpec1">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that describes the 
            data type of the first argument.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that describes the 
            data type of the first argument. If the data type has no arguments (for example, an <c>int</c> type), a null reference is returned.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.ArgSpec2">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that describes the 
            data type of the second argument.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeArgSpec"/> object that describes the 
            data type of the second argument. If the data type has no, or only one, argument (for example, an int or varchar type), 
            a null reference is returned.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.BigInt">
            <summary>
            Gets the data type specification for the <c>bigint</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>bigint</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Binary">
            <summary>
            Gets the data type specification for the <c>binary</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>binary</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Bit">
            <summary>
            Gets the data type specification for the <c>bit</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>bit</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Char">
            <summary>
            Gets the data type specification for the <c>char</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>char</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Date">
            <summary>
            Gets the data type specification for the <c>date</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>date</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.DateTime">
            <summary>
            Gets the data type specification for the <c>datetime</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>datetime</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.DateTime2">
            <summary>
            Gets the data type specification for the <c>datetime2</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>datetime2</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.DateTimeOffset">
            <summary>
            Gets the data type specification for the <c>datetimeoffset</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>datetimeoffset</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Decimal">
            <summary>
            Gets the data type specification for the <c>decimal</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>decimal</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Float">
            <summary>
            Gets the data type specification for the <c>float</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>float</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Geography">
            <summary>
            Gets the data type specification for the <c>geography</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>geography</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Geometry">
            <summary>
            Gets the data type specification for the <c>geometry</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>geometry</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.HierarchyId">
            <summary>
            Gets the data type specification for the <c>hierarchyid</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>hierarchyid</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Image">
            <summary>
            Gets the data type specification for the <c>image</c> data type,
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>image</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Int">
            <summary>
            Gets the data type specification for the <c>int</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>int</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Money">
            <summary>
            Gets the data type specification for the <c>money</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>money</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.NChar">
            <summary>
            Gets the data type specification for the <c>nchar</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>nchar</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.NText">
            <summary>
            Gets the data type specification for the <c>ntext</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>ntext</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Numeric">
            <summary>
            Gets the data type specification for the Numeric data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the Numeric data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.NVarChar">
            <summary>
            Gets the data type specification for the NVarChar data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the NVarChar data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.NVarCharMax">
            <summary>
            Gets the data type specification for the <c>nvarchar(max)</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>nvarchar(max)</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Real">
            <summary>
            Gets the data type specification for the <c>real</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>real</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.SmallDateTime">
            <summary>
            Gets the data type specification for the <c>smalldatetime</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>smalldatetime</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.SmallInt">
            <summary>
            Gets the data type specification for the <c>smallint</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>smallint</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.SmallMoney">
            <summary>
            Gets the data type specification for the <c>smallmoney</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>smallmoney</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.SysName">
            <summary>
            Gets the data type specification for the <c>sysname</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>sysname</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Text">
            <summary>
            Gets the data type specification for the <c>text</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>text</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Time">
            <summary>
            Gets the data type specification for the <c>time</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>time</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Timestamp">
            <summary>
            Gets the data type specification for the <c>timestamp</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>timestamp</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.TinyInt">
            <summary>
            Gets the data type specification for the <c>tinyint</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>tinyint</c>t data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.UniqueIdentifier">
            <summary>
            Gets the data type specification for the <c>uniqueidentifier</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>uniqueidentifier</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.VarBinary">
            <summary>
            Gets the data type specification for the <c>varbinary</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>varbinary</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.VarBinaryMax">
            <summary>
            Gets the data type specification for the <c>varbinary(max)</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>varbinary(max)</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.VarChar">
            <summary>
            Gets the data type specification for the <c>varchar</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>varchar</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.VarCharMax">
            <summary>
            Gets the data type specification for the <c>varchar(max)</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>varchar(max)</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Variant">
            <summary>
            Gets the data type specification for the <c>variant</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>variant</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.Xml">
            <summary>
            Gets the data type specification for the <c>xml</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that contains
            the <c>xml</c> data type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec.AllDataTypes">
            <summary>
            Gets the collection of data type specifications for all system data types.
            </summary>
            <value>The <see cref="T:System.Generic.IEnumerable{Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec}"/> object that contains
            the <c>xml</c> data type specification.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType">
            <summary>
            Specifies the execution context for the user-defined module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType.Caller">
            <summary>
            The execution context is the caller of the module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType.ExecuteAsLogin">
            <summary>
            The execution context is the specified login name.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType.ExecuteAsUser">
            <summary>
            The execution context is the specified user name.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType.Owner">
            <summary>
            The execution context is the current owner of the module.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType.Self">
            <summary>
            The execution context is the user that is creating or modifying the module.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction">
            <summary>
            Specifies the action that is taken when the primary key that is referenced by a foreign key 
            is updated. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction.NoAction">
            <summary>
            No action is taken.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction.Cascade">
            <summary>
            The modification is also made to the foreign key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction.SetDefault">
            <summary>
            The foreign key is set to the default value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction.SetNull">
            <summary>
            The foreign key is set to null.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.GridDensity">
            <summary>
            Represents grid density for a spatial index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.GridDensity.Low">
            <summary>
            Represents low grid density.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.GridDensity.Medium">
            <summary>
            Represents medium grid density.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.GridDensity.High">
            <summary>
            Represents high grid density.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole">
            <summary>
            Represents a SQL Server security role that enables an application to run with its own, user-like permissions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole.DefaultSchema">
            <summary>
            Gets the default schema for the application role.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that represents
            the default schema.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableApplicationRole">
            <summary>
            Represents a mutable SQL Server security role that enables an application to run with its own, user-like permissions. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableApplicationRole.DefaultSchema">
            <summary>
            Gets or sets the default schema for the application role.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that represents
            the default schema.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey">
            <summary>
            Represents a SQL Server asymmetric key.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableAsymmetricKey">
            <summary>
            Represents a mutable SQL Server asymmetric key.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction">
            <summary>
            Represents a built-in function or a system function that starts with two at signs (@@).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction.MinNumberOfArgs">
            <summary>
            Gets the minimum number of arguments that the function accepts.
            </summary>
            <value>The minimum number of arguments that the function accepts.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction.MaxNumberOfArgs">
            <summary>
            Gets the maximum number of arguments that the function accepts.
            </summary>
            <value>The maximum number of arguments that the function accepts.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction.IsVarArg">
            <summary>
            Gets a value that indicates whether the number of arguments is variable.
            </summary>
            <value><c>true</c> if the number of arguments is variable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction.IsDatePartFunction">
            <summary>
            Gets a value that indicates whether the function is a date-and-time parts function
            (for example, DATEDIFF, DATEPART, and so on).
            </summary>
            <value><c>true</c> if the function is a date and time parts function; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction.IsGlobalVariable">
            <summary>
            Gets a value that indicates whether this is a system function that starts with two at signs (@@) (for example, @@IDENTITY).
            </summary>
            <value><c>true</c> if this is a system function that starts with two at signs (@@); otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICallableModule">
            <summary>
            Represents a SQL Server callable module, such as a stored procedure or a scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICallableModule.ModuleType">
            <summary>
            Gets the module type.
            </summary>
            <value>One of the enumeration values that specifies the module type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICallableModule.ReturnType">
            <summary>
            Gets the scalar data type of the module return value.
            </summary>
            <value>The scalar data type of the module return value.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCallableModule">
            <summary>
            Represents a mutable SQL Server callable module, such as a stored procedure or a scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCallableModule.ReturnType">
            <summary>
            Gets or sets the scalar data type of the module return value.
            </summary>
            <value>The scalar data type of the module return value.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate">
            <summary>
            Represents a SQL Server certificate.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCertificate">
            <summary>
            Represents a mutable SQL Server certificate.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint">
            <summary>
            Represents a CHECK constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint.IsEnabled">
            <summary>
            Gets a value that indicates whether the CHECK constraint is enabled.
            </summary>
            <value><c>true</c> if the constraint is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint.IsChecked">
            <summary>
            Gets a value that indicates whether the CHECK constraint applies to new data only or also to existing data.
            </summary>
            <value><c>true</c> if the CHECK constraint applies to both existing data and newly added data; <c>false</c>
            if it applies only to newly added data.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint.NotForReplication">
            <summary>
            Gets a value that indicates whether the check constraint is not for replication. 
            </summary>
            <value>><c>true</c> to indicate that the check constraint is not for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint.Text">
            <summary>
            Gets the Transact-SQL statement that defines the CHECK constraint.
            </summary>
            <value>The Transact-SQL statement that defines the CHECK constraint.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint">
            <summary>
            Represents a mutable SQL Server CHECK constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint.IsEnabled">
            <summary>
            Gets or sets a value that indicates whether the CHECK constraint is enabled.
            </summary>
            <value><c>true</c> if the constraint is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint.IsChecked">
            <summary>
            Gets or sets a value that indicates whether the CHECK constraint applies to new data only or also to existing data.
            </summary>
            <value><c>true</c> if the CHECK constraint applies to both existing data and newly added data; <c>false</c>
            if it applies only to newly added data.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint.NotForReplication">
            <summary>
            Gets or sets a value that indicates whether the check constraint is not for replication. 
            </summary>
            <value>><c>true</c> to indicate that the check constraint is not for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCheckConstraint.Text">
            <summary>
            Gets or sets the Transact-SQL statement that defines the CHECK constraint.
            </summary>
            <value>The Transact-SQL statement that defines the CHECK constraint.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType">
            <summary>
            Represents a user-defined CLR data type (UDT).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.AssemblyName">
            <summary>
            Gets the name of the CLR assembly that contains the type definition.
            </summary>
            <value>The name of the CLR assembly that contains the type definition.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.ClassName">
            <summary>
            Gets the name of the class that defines the type.
            </summary>
            <value>The name of the class that defines the type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.IsBinaryOrdered">
            <summary>
            Gets a value that indicates whether the alias data type is binary ordered.
            </summary>
            <value><c>true</c> if the alias data type is binary ordered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.IsComVisible">
            <summary>
            Gets a value that indicates whether the data type can be accessed from a COM component.
            </summary>
            <value><c>false</c> if the data type can be accessed from a COM component; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.IsNullable">
            <summary>
            Gets a value that indicates whether the data type accepts null values.
            </summary>
            <value><c>false</c> if the data type accepts null values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.Methods">
            <summary>
            Gets the collection of all methods that are defined on the data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod"/> that contains all methods that are defined on the data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType.DataMembers">
            <summary>
            Gets the collection of all fields and properties defined on the data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> that contains all fields and properties 
            defined on the data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType">
            <summary>
            Represents mutable user-defined CLR data type (UDT).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.AssemblyName">
            <summary>
            Gets or sets the name of the CLR assembly that contains the type definition.
            </summary>
            <value>The name of the CLR assembly that contains the type definition.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.ClassName">
            <summary>
            Gets or sets the name of the class that defines the type.
            </summary>
            <value>The name of the class that defines the type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.IsBinaryOrdered">
            <summary>
            Gets or sets a value that indicates whether the alias data type is binary ordered.
            </summary>
            <value><c>true</c> if the alias data type is binary ordered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.IsComVisible">
            <summary>
            Gets or sets a value that indicates whether the data type is accessible from COM components.
            </summary>
            <value><c>true</c> if the data type can be accessed from a COM component; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.IsNullable">
            <summary>
            Gets or sets a value that indicates whether the data type accepts null values.
            </summary>
            <value><c>true</c> if the data type accepts null values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.Methods">
            <summary>
            Gets the mutable collection of all methods that are defined on the data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod"/> that contains all methods that are defined on the data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableClrDataType.DataMembers">
            <summary>
            Gets the mutable collection of all fields and properties that are defined on the data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> that contains all fields and properties 
            that are defined on the data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation">
            <summary>
            Represents a SQL Server collation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn">
            <summary>
            Represents a SQL Server column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.Collation">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object that identifies the collation
            used by the column.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object that identifies the collation
            used by the column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.ComputedColumnInfo">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo"/> object that provides the computed
            column specification.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo"/> object that provides
            the computed column specification, or a null reference if this is not a computed column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.DefaultValue">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint"/> object that
            specifies the column default value.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint"/> object
            that specifies the column default value.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IdentityColumnInfo">
            <summary>
            Gets the <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IdentityColumnInfo"/> object that provides the column identity specification.
            </summary>
            <value>The <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IdentityColumnInfo"/> object that provides the column identity specification, 
            or a null reference if this is not an identity column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.InPrimaryKey">
            <summary>
            Gets a value that indicates whether the column is included in the definition 
            of a PRIMARY KEY or UNIQUE constraint.
            </summary>
            <value><c>true</c> if the column is included in the definition of a PRIMARY KEY or UNIQUE constraint; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.RowGuidCol">
            <summary>
            Gets a value that indicates whether the column 
            is automatically updated with a unique GUID value.
            </summary>
            <value><c>true</c> if the column is automatically updated with a unique GUID value; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IsSparse">
            <summary>
            Gets a value that indicates whether the column is sparse
            </summary>
            <value><c>true</c> if the column is sparse; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IsColumnSet">
            <summary>
            Gets a value that indicates whether the column is column set
            </summary>
            <value><c>true</c> if the column is a column set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IsGeneratedAlwaysAsRowStart">
            <summary>
            Gets or sets a value that indicates whether the column is generated always as row start
            </summary>
            <value><c>true</c> if the column is a generated always as row start; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn.IsGeneratedAlwaysAsRowEnd">
            <summary>
            Gets or sets a value that indicates whether the column is generated always as row end
            </summary>
            <value><c>true</c> if the column is a generated always as row end; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn">
            <summary>
            Represents a mutable SQL Server column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.Collation">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object that identifies the collation
            used by the column.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object that identifies the collation
            used by the column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.ComputedColumnInfo">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo"/> object that provides the computed
            column specification.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ComputedColumnInfo"/> object that provides
            the computed column specification, or a null reference if this is not a computed column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.DefaultValue">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint"/> object that
            specifies the column default value.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint"/> object
            that specifies the column default value.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IdentityColumnInfo">
            <summary>
            Gets or sets the <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IdentityColumnInfo"/> object that provides the column 
            identity specification.
            </summary>
            <value>The <see cref="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IdentityColumnInfo"/> object that provides the column identity specification, 
            or a null reference if this is not an identity column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.InPrimaryKey">
            <summary>
            Gets or sets a value that indicates whether the column is included in the definition 
            of a PRIMARY KEY or UNIQUE constraint.
            </summary>
            <value><c>true</c> if the column is included in the definition of a PRIMARY KEY or UNIQUE constraint; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.RowGuidCol">
            <summary>
            Gets or sets a value that indicates whether the column 
            is automatically updated with a unique GUID value.
            </summary>
            <value><c>true</c> if the column is automatically updated with a unique GUID value; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IsSparse">
            <summary>
            Gets or sets a value that indicates whether the column is sparse
            </summary>
            <value><c>true</c> if the column is sparse; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IsColumnSet">
            <summary>
            Gets or sets a value that indicates whether the column is column set
            </summary>
            <value><c>true</c> if the column is a column set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IsGeneratedAlwaysAsRowStart">
            <summary>
            Gets or sets a value that indicates whether the column is generated always as row start
            </summary>
            <value><c>true</c> if the column is a generated always as row start; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableColumn.IsGeneratedAlwaysAsRowEnd">
            <summary>
            Gets or sets a value that indicates whether the column is generated always as row end
            </summary>
            <value><c>true</c> if the column is a generated always as row end; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint">
            <summary>
            Represents tabular object constraints.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint.IsSystemNamed">
            <summary>
            Gets a value that indicates whether the constraint 
            is named by the system or by the user.
            </summary>
            <value><c>true</c> if the constraint is named by the system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint.Type">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ConstraintType"/> value that indicates the constraint type.
            </summary>
            <value>One of the enumeration values that indicates the constraint type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableConstraint">
            <summary>
            Represents tabular object mutable constraints.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableConstraint.IsSystemNamed">
            <summary>
            Gets or sets a value that indicates whether the constraint 
            is named by the system or by the user.
            </summary>
            <value><c>true</c> if the constraint is named by the system; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential">
            <summary>
            Represents a SQL Server credential.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCredential">
            <summary>
            Represents a mutable SQL Server credential.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType">
            <summary>
            Represents a SQL Server cursor data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter">
            <summary>
            Represents a parameter of a cursor type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable">
            <summary>
            Represents a cursor type variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable.DataType">
            <summary>
            Gets the local variable data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType"/> that represents the local variable data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase">
            <summary>
            Represents a SQL Server database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.ApplicationRoles">
            <summary>
            Gets a collection all application roles that are defined in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole"/> that contains all application roles 
            defined in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.AsymmetricKeys">
            <summary>
            Gets a collection of all assymetric keys in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> that contains all assymetric keys in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.Certificates">
            <summary>
            Gets a collection of all certificates in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> that contains all certificates in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.CollationInfo">
            <summary>
            Gets the collation that is used by the database.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that represents the database collation.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.CompatibilityLevel">
            <summary>
            Gets the compatibility level for the database.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel"/> that represents the database compatibility level.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.DefaultSchemaName">
            <summary>
            Gets the name of the database default schema.
            </summary>
            <value>The name of the database default schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.Owner">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents the database owner.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents the database owner.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.Roles">
            <summary>
            Gets a collection of all roles that are defined in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> that contains all roles defined in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.Schemas">
            <summary>
            Gets a collection of all schemas in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> that contains all schemas in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.Triggers">
            <summary>
            Gets a collection of all triggers in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger"/> that contains all trigers in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase.Users">
            <summary>
            Gets a collection of all users in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> that contains the collection of all users in the database.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase">
            <summary>
            Represents a mutable SQL Server database.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.ApplicationRoles">
            <summary>
            Gets a collection of all application roles that are defined in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole"/> that contains all application roles defined in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.AsymmetricKeys">
            <summary>
            Gets a collection of all asymemtric keys in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> that contains all asymmetric keys in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.Certificates">
            <summary>
            Gets a collection all certificates in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> that contains all certificates in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.CompatibilityLevel">
            <summary>
            Gets or sets the compatibility level of the database.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Common.DatabaseCompatibilityLevel"/> that represents the database compatibility level.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.DefaultSchemaName">
            <summary>
            Gets or sets the name of the database default schema.
            </summary>
            <value>The name of the database default schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.Owner">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents the database owner.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents the database owner.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.Roles">
            <summary>
            Gets a collection of all roles that are defined in the database.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> that contains all roles defined in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.Schemas">
            <summary>
            Gets a collection of all schemas in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> that contains all schemas in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.Triggers">
            <summary>
            Gets a collection of all triggers in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger"/> that contains all trigers in the database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabase.Users">
            <summary>
            Gets a collection of all users in the database.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> that contains the collection of all users in the database.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger">
            <summary>
            Represents a database DDL trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger.DatabaseDdlEvents">
            <summary>
            Gets a set of database DDL event types.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITriggerEventTypeSet"/> object 
            that contains the database DDL event types.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger.IsQuotedIdentifierOn">
            <summary>
            Gets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseDdlTrigger">
            <summary>
            Represents a mutable database DDL trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseDdlTrigger.DatabaseDdlEvents">
            <summary>
            Gets a set of database DDL event types.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTriggerEventTypeSet"/> object 
            that contains the database DDL event types.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseDdlTrigger.IsQuotedIdentifierOn">
            <summary>
            Gets or sets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject">
            <summary>
            Defines methods and properties that are common to all database objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject.IsSystemObject">
            <summary>
            Gets a value that indicates whether this is a system object.
            </summary>
            <value><c>true</c> if this is a system object; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned by 
            the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object.</typeparam>
            <param name="visitor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value that is returned by the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseObject">
            <summary>
            Defines methods and properties that are common to all mutable database objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseObject.IsSystemObject">
            <summary>
            Gets or sets a value that indicates whether this is a system object.
            </summary>
            <value><c>true</c> if this is a system object; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1">
            <summary>
            Represents a database object visitor. 
            </summary>
            <typeparam name="T">The type of the database object visitor.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IServer)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.
            </summary>
            <param name="server">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObject">
            <summary>
            Represents a metadata object that is owned by an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObject.Database">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that owns this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that owns this object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned by the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1"/> object.</typeparam>
            <param name="visitor">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value that is returned by the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1"/> 
            object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseOwnedObject">
            <summary>
            Represents a mutable metadata object that is owned by an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1">
            <summary>
            Represents a SQL Server database-owned object visitor.
            </summary>
            <typeparam name="T">The type of the database-owned object.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IApplicationRole)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object.
            </summary>
            <param name="applicationRole">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object.
            </summary>
            <param name="assymetricKey">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object.
            </summary>
            <param name="certificate">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger"/> object.
            </summary>
            <param name="databaseDdlTrigger">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseDdlTrigger"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> object.
            </summary>
            <param name="databaseRole">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> object.
            </summary>
            <param name="fileGroup">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme"/> object.
            </summary>
            <param name="partitionScheme">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object.
            </summary>
            <param name="schema">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUser)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object.
            </summary>
            <param name="user">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission">
            <summary>
            Represents a SQL Server database permission.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission.DatabasePrincipal">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that has the permission.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that has the permission.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission.PermissionType">
            <summary>
            Gets the permission type.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DatabasePermissionType"/> value that represents the permission type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission.TargetObject">
            <summary>
            Gets the target object of the permission.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> object that represents the target of the permission</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission.PermissionState">
            <summary>
            Gets the permission state.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState"/> value that represents the permission state.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission.Grantor">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that grants the permission.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that grants the permission.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabasePermission">
            <summary>
            Represents a mutable SQL Server database permission.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabasePermission.PermissionState">
            <summary>
            Gets or sets the permission state.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState"/> value that represents the permission state.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal">
            <summary>
            Represents a SQL Server database-level principal object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal.Permissions">
            <summary>
            Gets a collection of permissions granted or denied to this principal.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal.MemberOfRoles">
            <summary>
            Gets a collection of database roles this principal is a member of.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabasePrincipal">
            <summary>
            Represents a mutable SQL Server database-level principal object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabasePrincipal.Permissions">
            <summary>
            Gets a collection of database roles this principal is a member of.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabasePrincipal.MemberOfRoles">
            <summary>
            Gets a collection of database roles this principal is a member of.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole">
            <summary>
            Represents a SQL Server database security role.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole.IsFixedRole">
            <summary>
            Gets a value that indicates whether the database role
            is a fixed role or a user-defined role.
            </summary>
            <value><c>true</c> if the database role is a fixed role; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseRole.Owner">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents the owner 
            of the database role.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that 
            represents the owner of the database role.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseRole">
            <summary>
            Represents a mutable SQL Server database security role.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseRole.IsFixedRole">
            <summary>
            Gets or sets a value that indicates whether the database role
            is a fixed role or a user-defined role.
            </summary>
            <value><c>true</c> if the database role is a fixed role; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseRole.Owner">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents the owner 
            of the database role.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that 
            represents the owner of the database role.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseTable">
            <summary>
            Represents a database table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseTable.CollationInfo">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object collections.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that is used by the object collections.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseTable.Constraints">
            <summary>
            Gets a collection of table constraints.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint"/> that contains all the table constraints.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseTable.Indexes">
            <summary>
            Gets a collection of table indexes.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex"/> that contains all table indexes.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseTable.Statistics">
            <summary>
            Gets a collection of table statistics.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics"/> that contains all table statistics.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseTable">
            <summary>
            Represents a database table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseTable.Constraints">
            <summary>
            Gets a collection of table constraints.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IConstraint"/> that contains all the table constraints.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseTable.Indexes">
            <summary>
            Gets a collection of table indexes.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex"/> that contains all table indexes.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDatabaseTable.Statistics">
            <summary>
            Gets a collection of table statistics.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics"/> that contains all table indexes.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType">
            <summary>
            Represents a SQL Server data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType.IsScalar">
            <summary>
            Gets a value that indicates whether this is a scalar data type.
            </summary>
            <value><c>true</c> if this is a scalar data type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType.IsTable">
            <summary>
            Gets a value that indicates whether this is a table data type.
            </summary>
            <value><c>true</c> if this is a table data type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType.IsCursor">
            <summary>
            Gets a value that indicates whether this is a cursor data type.
            </summary>
            <value><c>true</c> if this is a cursor data type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType.IsUnknown">
            <summary>
            Gets a value that indicates whether the data type instance is a placeholder 
            unknown type.
            </summary>
            <value><c>true</c> if the data type instance is a placeholder unknown type; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDataType">
            <summary>
            Represents a mutable SQL Server data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDataType.IsUnknown">
            <summary>
            Gets or sets a value that indicates whether the data type instance is a placeholder unknown type.
            </summary>
            <value><c>true</c> if the data type instance is a place holder unknown type; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart">
            <summary>
            Represents a date-part built-in function argument (for example, hh, iso_week, and so on).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint">
            <summary>
            Represents a SQL Server default constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint.IsSystemNamed">
            <summary>
            Gets a value that indicates whether the constraint 
            is named by the system or by the user.
            </summary>
            <value><c>true</c> if the constraint is named by the system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint.Text">
            <summary>
            Gets the Transact-SQL statement that defines the default constraint.
            </summary>
            <value>The Transact-SQL statement that defines the default constraint.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDefaultConstraint">
            <summary>
            Represents a mutable SQL Server default constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDefaultConstraint.IsSystemNamed">
            <summary>
            Gets or sets a value that indicates whether the constraint 
            is named by the system or by the user.
            </summary>
            <value><c>true</c> if the constraint is named by the system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDefaultConstraint.Text">
            <summary>
            Gets or sets the Transact-SQL statement that defines the default constraint.
            </summary>
            <value>The Transact-SQL statement that defines the default constraint.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo">
            <summary>
            Provides the SQL Server identity column specification.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo"/> class using the
            specified seed and increment values.
            </summary>
            <param name="seed">The identity seed of the identity column.</param>
            <param name="increment">The identity increment of the identity column.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo.#ctor(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo"/> class using the
            specified seed and increment values.
            </summary>
            <param name="seed">The identity seed of the identity column.</param>
            <param name="increment">The identity increment of the identity column.</param>
            <param name="notForReplication"><c>true</c> to indicate that the identity is not for replication; otherwise, <c>false</c>.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo.Increment">
            <summary>
            Gets the identity increment of the identity column.
            </summary>
            <value>The identity increment of the identity column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo.Seed">
            <summary>
            Gets the identity seed of the identity column.
            </summary>
            <value>The identity seed of the identity column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IdentityColumnInfo.NotForReplication">
            <summary>
            Gets a value that indicates whether the identity is not for replication. 
            </summary>
            <value>><c>true</c> to indicate that the identity is not for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger">
            <summary>
            Represents a SQL Server DML trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableViewBase"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableViewBase"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.NotForReplication">
            <summary>
            Gets a value indicating whether the DML trigger is available for 
            replication.
            </summary>
            <value><c>true</c> if the trigger is available for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.InsteadOf">
            <summary>
            Gets a value indicating whether the DML trigger 
            executes instead of the triggering Transact-SQL statement.
            </summary>
            <value><c>true</c> if the trigger execute instead of the triggering Transact-SQL statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.Insert">
            <summary>
            Gets a value indicating whether the DML trigger
            activates on an INSERT statement.
            </summary>
            <value><c>true</c> if the DML trigger activates on an INSERT statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.InsertActivationOrder">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for INSERT event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for INSERT event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.Update">
            <summary>
            Gets a value indicating whether the DML trigger
            activates on an UPDATE statement.
            </summary>
            <value><c>true</c> if the DML trigger activates on an UPDATE statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.UpdateActivationOrder">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for UPDATE event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for UPDATE event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.Delete">
            <summary>
            Gets a value indicating whether the DML trigger
            activates on an DELETE statement.
            </summary>
            <value><c>true</c> if the DML trigger activates on a DELETE statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.DeleteActivationOrder">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for DELETE event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for DELETE event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger.IsQuotedIdentifierOn">
            <summary>
            Gets a value indicating whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger">
            <summary>
            Represents a mutable SQL Server DML trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.NotForReplication">
            <summary>
            Gets or sets a value indicating whether the trigger is available for 
            replication.
            </summary>
            <value><c>true</c> if the trigger is available for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.InsteadOf">
            <summary>
            Gets or sets a value indicating whether the DML trigger 
            executes instead of the triggering Transact-SQL statement.
            </summary>
            <value><c>true</c> if the trigger execute instead of the triggering Transact-SQL statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.Insert">
            <summary>
            Gets or sets a value indicating whether the DML trigger
            activates on an INSERT statement.
            </summary>
            <value><c>true</c> if the DML trigger activates on an INSERT statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.InsertActivationOrder">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for INSERT event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for INSERT event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.Update">
            <summary>
            Gets or sets a value indicating whether the DML trigger
            is activated on an UPDATE statement.
            </summary>
            <value><c>true</c> if the DML trigger activates on an UPDATE statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.UpdateActivationOrder">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for UPDATE event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for UPDATE event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.Delete">
            <summary>
            Gets or sets a value indicating whether the DML trigger
            activates on a DELETE statement.
            </summary>
            <value><c>true</c> if the DML trigger activates on a DELETE statement; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.DeleteActivationOrder">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for DELETE event.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ActivationOrder"/> value that specifies activation order for DELETE event.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableDmlTrigger.IsQuotedIdentifierOn">
            <summary>
            Gets or sets a value indicating whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext">
            <summary>
            Represents a SQL Server user-defined module execution context.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext.ContextType">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType"/> value that indicates the execution context 
            for the module.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ExecutionContextType"/> value that indicates the execution context 
            for the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext.Login">
            <summary>
            Gets the SQL Server login that can be used in an EXECUTE AS clause.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that represents the SQL Server login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext.User">
            <summary>
            Gets the user that can be used in an EXECUTE AS clause.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser"/> object that represents a user name.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure">
            <summary>
            Represents a SQL Server extended stored procedure.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup">
            <summary>
            Represents a SQL Server filegroup.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup.IsDefault">
            <summary>
            Gets a value that indicates whether the filegroup
            is the default filegroup for the database.
            </summary>
            <value><c>true</c> if the filegroup is the default file group for the database; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup.IsFileStream">
            <summary>
            Gets a value that indicates whether the filegroup 
            is of type FILESTREAM.
            </summary>
            <value><c>true</c> if the filegroup is of type FILESTREAM; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup.IsReadOnly">
            <summary>
            Gets a value that indicates whether the filegroup 
            is read-only.
            </summary>
            <value><c>true</c> if the filegroup is read-only; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn">
            <summary>
            Represents a SQL Server foreign key column.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn.ReferencingColumn">
            <summary>
            Gets the referencing column.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents the referencing column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn.ReferencedColumn">
            <summary>
            Gets the referenced column.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents the referenced column.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint">
            <summary>
            Represents a SQL Server FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.Columns">
            <summary>
            Gets the columns that are included in the foreign key.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn"/> that contains the columns
            that are included in the foreign key.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.DeleteAction">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken 
            when a row that is referenced by the foreign key is deleted. 
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken
            when a row that is referenced by the foreign key is deleted.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.IsEnabled">
            <summary>
            Gets a value that indicates whether the FOREIGN KEY constraint is enabled.
            </summary>
            <value><c>true</c> if the FOREIGN KEY constraint is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.IsChecked">
            <summary>
            Gets a value that indicates whether the FOREIGN KEY constraint applies to new data only or also to existing data. 
            </summary>
            <value><c>true</c> if the FOREIGN KEY constraint applies to both existing data and newly added data; <c>false</c>
            if it applies only to newly added data.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.NotForReplication">
            <summary>
            Gets a value that indicates whether the FOREIGN KEY constraint is available for replication.
            </summary>
            <value><c>true</c> if the FOREIGN KEY constraint is available for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.ReferencedTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object that contains the primary key that is referenced
            by the foreign key.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object that contains the primary key that is
            referenced by the foreign key.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint.UpdateAction">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken 
            when a row that is referenced by the foreign key is updated. 
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken
            when a row that is referenced by the foreign key is deleted.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint">
            <summary>
            Represents a mutable SQL Server FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.Columns">
            <summary>
            Gets the columns that are included in the foreign key.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn"/> that contains the columns
            that are included in the foreign key.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.DeleteAction">
            <summary>
            Gets or sets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action 
            taken when a row that is referenced by the foreign key is deleted. 
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken
            when a row that is referenced by the foreign key is deleted.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.IsEnabled">
            <summary>
            Gets or sets a value that indicates whether the FOREIGN KEY constraint is enabled.
            </summary>
            <value><c>true</c> if the FOREIGN KEY constraint is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.IsChecked">
            <summary>
            Gets or sets a value that indicates whether the FOREIGN KEY constraint applies to new data only or also to existing data.
            </summary>
            <value><c>true</c> if the FOREIGN KEY constraint applies to both existing data and newly added data; <c>false</c>
            if it applies only to newly added data.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.NotForReplication">
            <summary>
            Gets or sets a value that indicates whether the FOREIGN KEY constraint is available for replication.
            </summary>
            <value><c>true</c> if the FOREIGN KEY constraint is available for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.ReferencedTable">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object that contains the primary key that is referenced
            by the foreign key.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object that contains the primary key that is
            referenced by the foreign key.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableForeignKeyConstraint.UpdateAction">
            <summary>
            Gets or sets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken 
            when the row that is referenced by the foreign key is updated. 
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ForeignKeyAction"/> value that specifies the action taken
            when a row that is referenced by the foreign key is deleted.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFunction">
            <summary>
            Represents a SQL Server function.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableFunction">
            <summary>
            Defines common mutable interface for all SQL server functions.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFunctionModuleBase">
            <summary>
            Common base interface for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFunction"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICallableModule"/> interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IFunctionModuleBase.Parameters">
            <summary>
            Gets a collection that contains the parameters that the function or module accepts.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter"/> that contains the
            parameters that the function or module accepts.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableFunctionModuleBase">
            <summary>
            Common base interface for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableFunction"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCallableModule"/> interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableFunctionModuleBase.Parameters">
            <summary>
            Gets a collection that contains the parameters that the function or module accepts.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataOrderedCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter"/> that contains the
            parameters that the function or module accepts.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex">
            <summary>
            Represents SQL Server index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.Type">
            <summary>
            Gets the type of the index.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IndexType"/> value that specifies the type of the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.DisallowPageLocks">
            <summary>
            Gets a value that indicates whether the index allows 
            page locks.
            </summary>
            <value><c>true</c> if the index does not allow page locks; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.DisallowRowLocks">
            <summary>
            Gets a value that indicates whether the index allows 
            row locks.
            </summary>
            <value><c>true</c> if the index does not allow row locks; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.FillFactor">
            <summary>
            Gets the percentage of an index page to fill when the index is created or
            re-created.
            </summary>
            <value>The percentage of an index page to fill when the index is created or re-created.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.IgnoreDuplicateKeys">
            <summary>
            Gets a value that indicates whether the index ignores 
            duplicate keys.
            </summary>
            <value><c>true</c> to ignore duplicate keys; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.IsDisabled">
            <summary>
            Gets a value that indicates whether the index is 
            disabled.
            </summary>
            <value><c>true</c> if the index is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndex.PadIndex">
            <summary>
            Gets a value that indicates whether space is left open
            on each page of the intermediate levels of the index.
            </summary>
            <value><c>true</c> if the index is padded; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex">
            <summary>
            Represents mutable SQL Server index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex.DisallowPageLocks">
            <summary>
            Gets or sets a value that indicates whether the index allows 
            page locks.
            </summary>
            <value><c>true</c> if the index does not allow page locks; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex.DisallowRowLocks">
            <summary>
            Gets or sets a value that indicates whether the index allows 
            row locks.
            </summary>
            <value><c>true</c> if the index does not allow row locks; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex.FillFactor">
            <summary>
            Gets or sets the percentage of an index page to fill when the index is created or
            re-created.
            </summary>
            <value>The percentage of an index page to fill when the index is created or re-created.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex.IgnoreDuplicateKeys">
            <summary>
            Gets or sets a value that indicates whether the index ignores 
            duplicate keys.
            </summary>
            <value><c>true</c> to ignore duplicate keys; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex.IsDisabled">
            <summary>
            Gets or sets a value that indicates whether the index is 
            disabled.
            </summary>
            <value><c>true</c> if the index is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndex.PadIndex">
            <summary>
            Gets or sets a value that indicates whether space is left open
            on each page of the intermediate levels of the index.
            </summary>
            <value><c>true</c> if the index is padded; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn">
            <summary>
            Represents a SQL Server column that is participating in an index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn.ReferencedColumn">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents the column that is 
            referenced by the indexed column.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object that represents the column 
            that is referenced by the indexed column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn.SortOrder">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder"/> value that specifies whether the indexed
            column is sorted in descending or ascending order.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder"/> value that specifies the sort order of the indexed column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn.IsIncluded">
            <summary>
            Gets a value that indicates whether the column is included in the index.
            </summary>
            <value><c>true</c> if the column is included in the index; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndexedColumn">
            <summary>
            Represents a mutable SQL Server column that is participating in an index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndexedColumn.SortOrder">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder"/> value that specifies whether the indexed
            column is sorted in descending or ascending order.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder"/> value that specifies the sort order of the indexed column.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableIndexedColumn.IsIncluded">
            <summary>
            Gets or sets a value that indicates whether the column is included in the index.
            </summary>
            <value><c>true</c> if the column is included in the index; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable">
            <summary>
            Defines a local variable or parameter.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable.IsScalarVariable">
            <summary>
            Gets a value that indicates whether this is a scalar variable.
            </summary>
            <value><c>true</c> if this is a scalar variable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable.IsTableVariable">
            <summary>
            Gets a value that indicates whether this is a table variable.
            </summary>
            <value><c>true</c> if this is a table variable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable.IsCursorVariable">
            <summary>
            Gets a value that indicates whether this is a cursor variable.
            </summary>
            <value><c>true</c> if this is a cursor variable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable.IsParameter">
            <summary>
            Gets a value that indicates whether this is a parameter.
            </summary>
            <value><c>true</c> if this is a parameter; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILocalVariable.DataType">
            <summary>
            Gets the local variable data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDataType"/> that represents the local variable data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin">
            <summary>
            Represents a SQL Server login.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.LoginType">
            <summary>
            Gets the type of the login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType"/> value that indicates the login type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.AsymmetricKey">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with this login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.Certificate">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with this login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.Credential">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> object that is associated with this login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.DefaultDatabase">
            <summary>
            Gets the default database that the login account is assigned to after
            logging on to the instance of SQL Server.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that represents the 
            default database for the login account.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.Language">
            <summary>
            Gets the language that is required by the login account for date formats 
            and system messages.
            </summary>
            <value>The language that is required by the login account.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.Password">
            <summary>
            Gets the password that is associated with this login. 
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword"/> that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin.Sid">
            <summary>
            Gets the security identifier (SID) for the login account.
            </summary>
            <value>The SID for the login account.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin">
            <summary>
            Represents a mutable SQL Server login.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.AsymmetricKey">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with this login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.Certificate">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with this login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.Credential">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> object that is associated with this login.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.DefaultDatabase">
            <summary>
            Gets or sets the default database that the login account is assigned to after
            logging on to the instance of SQL Server.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object that represents the default database for the login account.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.Language">
            <summary>
            Gets or sets the language that is required by the login account for date formats 
            and system messages.
            </summary>
            <value>The language that is required by the login account.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.Password">
            <summary>
            Gets or sets the password that is associated with this login. 
            A password is set only for logins that are created from source.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword"/> object that is associated with this login.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableLogin.Sid">
            <summary>
            Gets or sets the security identifier (SID) for the login account.
            </summary>
            <value>The SID for the login account.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1">
            <summary>
            Defines size, enumerators, lookup and filtering methods for all metadata 
            object collections. The interface provides read-only access to the elements 
            in the collection.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained to 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
            <value>The number of elements in the collection.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.Item(System.String)">
            <summary>
            Gets the element in the collection by name.
            </summary>
            <param name="name">The name of the element.</param>
            <return>The <typeparamref name="T"/> object that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.Contains(System.String)">
            <summary>
            Determines whether the collection contains an element that has the specified name.
            </summary>
            <param name="name">The name of the element to locate in the collection.</param>
            <return><c>true</c> if element is found; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the specified <typeparamref name="T"/> object.
            </summary>
            <param name="item">The <typeparamref name="T"/> object to locate in the collection.</param>
            <return><c>true</c> if object is found; otherwise, <c>false</c>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves all elements in the collection that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to search for.</param>
            <return>An enumerator over all the elements that match the conditions defined by the specified predicate.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.FindAll(System.String)">
            <summary>
            Retrieves all elements in the collection that have the specified name.
            </summary>
            <param name="name">The element name to find.</param>
            <return>An enumerator over all the elements that have the specified name.</return>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1.AsMetadataObjectCollection">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> object that contains this collection.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> that contains this collection.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1">
            <summary>
            Defines methods to manipulate collections of objects that implement the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/> interface.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained to 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Item(System.String)">
            <summary>
            Gets or sets the element in the collection by name.
            </summary>
            <param name="name">The name of the element.</param>
            <return>The <typeparamref name="T"/> object that has the specified name.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Add(`0)">
            <summary>
            Adds an element to the end of the collection.
            </summary>
            <param name="item">
            The element to add to the end of the collection. The value cannot be a null reference.
            </param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements in the specified collection to the end of this collection.
            </summary>
            <param name="collection">
            The collection of elements to be added to the end of this collection. 
            The collection itself cannot be null nor it can contain elements that are null.
            </param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Remove(System.String)">
            <summary>
            Removes the first element that has the specified name from the collection.
            </summary>
            <param name="name">
            The name of the element to remove. This value cannot be a null reference.
            </param>
            <return>
            <c>true</c> if the element is successfully removed; <c>false</c> if the element was not found or if it was not 
            successfully removed from the collection.
            </return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">
            The object to remove. This value cannot be a null reference.
            </param>
            <return>
            <c>true</c> if the element is successfully removed; <c>false</c> if the element was not found or if it was not 
            successfully removed from the collection.
            </return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Clone">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> instance that is 
            a copy of this object, except for the elements.
            </summary>
            <return>An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/>.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1.Clone(System.Boolean)">
            <summary>
            Creates an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> instance that is 
            a copy of this object and, if specified,
            also copies the elements.
            </summary>
            <param name="copyData">
            <c>true</c> to copy the elements to the newly created collection; otherwise, <c>false</c>.
            </param>
            <return>An instance of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/>.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject">
            <summary>
            Represents a SQL Server metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject.Name">
            <summary>
            Gets the name of the metadata object.
            </summary>
            <value>The name of the metadata object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned from the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.</typeparam>
            <param name="visitor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value that is returned by the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataObject">
            <summary>
            Defines common interface of all mutable metadata objects.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1">
            <summary>
            Represents a SQL Server metadata object visitor.
            </summary>
            <typeparam name="T">The type of the metadata object visitor.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object.
            </summary>
            <param name="builtInFunction">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IBuiltInFunction"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint"/> object.
            </summary>
            <param name="checkConstraint">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICheckConstraint"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType"/> object.
            </summary>
            <param name="clrDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object.
            </summary>
            <param name="collation">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICollation"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object.
            </summary>
            <param name="column">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType"/> object.
            </summary>
            <param name="cursorDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter"/> object.
            </summary>
            <param name="cursorParameter">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorParameter"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/> object.
            </summary>
            <param name="cursorVariable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICursorVariable"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission"/> object.
            </summary>
            <param name="databasePermission">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePermission"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart"/> object.
            </summary>
            <param name="datePart">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatePart"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint"/> object.
            </summary>
            <param name="defaultConstraint">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDefaultConstraint"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger"/> object.
            </summary>
            <param name="dmlTrigger">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object.
            </summary>
            <param name="executionContext">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn"/> object.
            </summary>
            <param name="foreignKeyColumn">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyColumn"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint"/> object.
            </summary>
            <param name="foreignKeyConstraint">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IForeignKeyConstraint"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn"/> object.
            </summary>
            <param name="indexedColumn">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IPrimaryKeyConstraint)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPrimaryKeyConstraint"/> object.
            </summary>
            <param name="primaryKeyConstraint">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPrimaryKeyConstraint"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex"/> object.
            </summary>
            <param name="relationalIndex">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object.
            </summary>
            <param name="scalarExpression">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object.
            </summary>
            <param name="scalarDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object.
            </summary>
            <param name="scalarParameter">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/> object.
            </summary>
            <param name="scalarVariable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex"/> object.
            </summary>
            <param name="spatialIndex">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics"/> object.
            </summary>
            <param name="statistics">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object.
            </summary>
            <param name="systemDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemClrDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemClrDataType"/> object.
            </summary>
            <param name="systemClrDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemClrDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object.
            </summary>
            <param name="tableDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ITableParameter)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableParameter"/> object.
            </summary>
            <param name="tableParameter">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableParameter"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> object.
            </summary>
            <param name="tableVariable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> object.
            </summary>
            <param name="udtDataMember">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod"/> object.
            </summary>
            <param name="udtMethod">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraint)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraint"/> object.
            </summary>
            <param name="uniqueConstraint">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraint"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IVirtualTable)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IVirtualTable"/> object.
            </summary>
            <param name="virtualTable">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IVirtualTable"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IVoidDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IVoidDataType"/> object.
            </summary>
            <param name="voidDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IVoidDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType"/> object.
            </summary>
            <param name="xmlDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeMethod)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeMethod"/> object.
            </summary>
            <param name="xmlDataTypeMethod">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeMethod"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeTableMethod)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeTableMethod"/> object.
            </summary>
            <param name="xmlDataTypeMethod">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeTableMethod"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlIndex)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlIndex"/> object.
            </summary>
            <param name="xmlIndex">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlIndex"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1">
            <summary>
            Represents a collection of metadata objects where the element ordering is preserved.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained 
            to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <return>The element at the specified index.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataOrderedCollection`1">
            <summary>
            Represents a mutable collection of metadata objects where the element ordering is preserved.
            </summary>
            <typeparam name="T">The type of the elements in the collection, constrained 
            to <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataObject"/>.</typeparam>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IndexType">
            <summary>
            Indicates the type of the index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.IndexType.Relational">
            <summary>
            Represents a relational index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.IndexType.Spatial">
            <summary>
            Represents a spatial index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.IndexType.Xml">
            <summary>
            Represents an xml index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter">
            <summary>
            Represents a SQL Server parameter.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter.IsOutput">
            <summary>
            Gets a value that indicates whether the parameter is an output parameter.
            </summary>
            <value><c>true</c> if the parameter is an output parameter; otherwise, <c>false</c>.</value>
            <remarks>This property applies only to module parameters.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter.IsReadOnly">
            <summary>
            Gets a value that indicates that this parameter is read-only.
            </summary>
            <value><c>true</c> if the parameter is read-only; otherwise, <c>false</c>.</value>
            <remarks>This property applies only to module parameters of <c>table</c> data types.</remarks>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IParameter.DefaultValue">
            <summary>
            Gets the default value of the parameter.
            </summary>
            <value>The default value of the parameter.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme">
            <summary>
            Represents a SQL Server partition scheme.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme.FileGroups">
            <summary>
            Gets a collection of filegroups that are defined in the database.
            </summary>
            <value>An <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> that contains the filegroups 
            that are defined in the database.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword">
            <summary>
            Represents a SQL Server login password.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword.Value">
            <summary>
            Gets the password value. 
            </summary>
            <value>The password value.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword.IsHashed">
            <summary>
            Gets a value that indicates whether the password is hashed.
            </summary>
            <value><c>true</c> if the password is hashed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword.MustChange">
            <summary>
            Gets a value that indicates whether the password must be changed.
            </summary>
            <value><c>true</c> if the password must be changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword.CheckPolicy">
            <summary>
            Gets a value that indicates whether password policy is enforced for this login account.
            </summary>
            <value><c>true</c> if password policy is enforced for this login account; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IPassword.CheckExpiration">
            <summary>
            Gets a value that indicates whether the password for the login account will automatically expire.
            </summary>
            <value><c>true</c> if the password will automatically expire; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword">
            <summary>
            Represents a mutable SQL Server login password.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword.Value">
            <summary>
            Gets or sets the password value. 
            </summary>
            <value>The password value.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword.IsHashed">
            <summary>
            Gets or sets a value that indicates whether the password is hashed.
            </summary>
            <value><c>true</c> if the password is hashed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword.MustChange">
            <summary>
            Gets or sets a value that indicates whether the password must be changed.
            </summary>
            <value><c>true</c> if the password must be changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword.CheckPolicy">
            <summary>
            Gets or sets a value that indicates whether password policy is enforced for this login account.
            </summary>
            <value><c>true</c> if password policy is enforced for this login account; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutablePassword.CheckExpiration">
            <summary>
            Gets or sets a value that indicates whether the password for the login account will automatically expire.
            </summary>
            <value><c>true</c> if the password will automatically expire; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPrimaryKeyConstraint">
            <summary>
            Represents a SQL Server PRIMARY KEY constraint.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex">
            <summary>
            Represents a SQL Server relational index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.CompactLargeObjects">
            <summary>
            Gets a value that indicates whether to compact the 
            large object (LOB) data in the index.
            </summary>
            <value><c>true</c> to compact the LOB data in the index; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.FileGroup">
            <summary>
            Gets the filegroup in which the index pages are stored.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> object that 
            represents the filegroup in which the index pages are stored.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.FileStreamFileGroup">
            <summary>
            Gets the filegroup of the index file stream.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> object that 
            represents the filegroup of the index file stream.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.FileStreamPartitionScheme">
            <summary>
            Gets the partition scheme name for the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme"/> object that 
            represents the partition scheme for the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.FilterDefinition">
            <summary>
            Gets the index filter definition text.
            </summary>
            <value>The index filter definition text.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.IndexedColumns">
            <summary>
            Gets the collection of columns that are participating in the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn"/> that contains the columns that are participating in the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.IndexKey">
            <summary>
            Gets the index key that is associated with the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraintBase"/> object that represents the 
            index key that is associated with the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.IsClustered">
            <summary>
            Gets a value that indicates whether the index is 
            clustered.
            </summary>
            <value><c>true</c> if the index is clustered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.IsSystemNamed">
            <summary>
            Gets a value that indicates whether the index was 
            named automatically by the system.
            </summary>
            <value><c>true</c> if the index was named automatically by the system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.IsUnique">
            <summary>
            Gets a value that indicates whether the index is 
            unique.
            </summary>
            <value><c>true</c> if the index is unique; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.NoAutomaticRecomputation">
            <summary>
            Gets a value that indicates whether statistics are 
            regenerated when the index is created.
            </summary>
            <value><c>true</c> if statistics are not regenerated when the index is created; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IRelationalIndex.PartitionScheme">
            <summary>
            Gets the partition scheme that is associated with the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme"/> object that represents 
            the partition scheme that is associated with the index.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex">
            <summary>
            Represents a mutable SQL Server relational index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.CompactLargeObjects">
            <summary>
            Gets or sets a value that indicates whether to compact the 
            large object (LOB) data in the index.
            </summary>
            <value><c>true</c> to compact the LOB data in the index; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.FileGroup">
            <summary>
            Gets or sets the filegroup in which the index pages are stored.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> object that 
            represents the filegroup in which the index pages are stored.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.FileStreamFileGroup">
            <summary>
            Gets or sets the filegroup of the index file stream.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IFileGroup"/> object that 
            represents the filegroup of the index file stream.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.FileStreamPartitionScheme">
            <summary>
            Gets or sets the partition scheme name for the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme"/> object that 
            represents the partition scheme for the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.FilterDefinition">
            <summary>
            Gets or sets the index filter definition text.
            </summary>
            <value>The index filter definition text.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.IndexedColumns">
            <summary>
            Gets the collection of columns that are participating in the index. 
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IIndexedColumn"/> that contains the columns that are participating in the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.IndexKey">
            <summary>
            Gets or sets the index key that is associated with the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraintBase"/> object that represents the 
            index key that is associated with the index.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.IsClustered">
            <summary>
            Gets or sets a value that indicates whether the index is 
            clustered.
            </summary>
            <value><c>true</c> if the index is clustered; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.IsSystemNamed">
            <summary>
            Gets or sets a value that indicates whether the index was 
            named automatically by the system.
            </summary>
            <value><c>true</c> if the index was named automatically by the system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.IsUnique">
            <summary>
            Gets or sets a value that indicates whether the index is 
            unique.
            </summary>
            <value><c>true</c> if the index is unique; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.NoAutomaticRecomputation">
            <summary>
            Gets or sets a value that indicates whether statistics are 
            regenerated when an index is created.
            </summary>
            <value><c>true</c> if statistics are not regenerated when the index is created; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableRelationalIndex.PartitionScheme">
            <summary>
            Gets or sets the partition scheme that is associated with the index.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IPartitionScheme"/> object that represents 
            the partition scheme associated with the index.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedSynonym">
            <summary>
            Represents a resolved synonym.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedSynonym.Synonym">
            <summary>
            Gets the synonym the object was resolved from.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedTableSynonym">
            <summary>
            Represents a synonym resolved to a table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedTableSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedViewSynonym">
            <summary>
            Represents a synonym resolved to a view.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedViewSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedExtendedStoredProcedureSynonym">
            <summary>
            Represents a synonym resolved to an extended stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedExtendedStoredProcedureSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedScalarValuedFunctionSynonym">
            <summary>
            Represents a synonym resolved to a scalar valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedScalarValuedFunctionSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedStoredProcedureSynonym">
            <summary>
            Represents a synonym resolved to a stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedStoredProcedureSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedTableValuedFunctionSynonym">
            <summary>
            Represents a synonym resolved to a table valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedTableValuedFunctionSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedUserDefinedAggregateSynonym">
            <summary>
            Represents a synonym resolved to a user defined aggregate.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IResolvedUserDefinedAggregateSynonym.TargetObject">
            <summary>
            Gets the target object of a synonym.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar">
            <summary>
            Represents a scalar metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar.ScalarType">
            <summary>
            Gets the scalar type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType"/> value that represents the scalar type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar.DataType">
            <summary>
            Gets the scalar data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> value that represents the scalar data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalar.Nullable">
            <summary>
            Gets a value that indicates whether the column accepts null values.
            </summary>
            <value><c>true</c> if the column accepts null values; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalar">
            <summary>
            Represents a mutable scalar metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalar.DataType">
            <summary>
            Gets or sets the scalar data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> value that represents the scalar data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalar.Nullable">
            <summary>
            Gets or sets a value that indicates whether the column accepts null values.
            </summary>
            <value><c>true</c> if the column accepts null values; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType">
            <summary>
            Represents a SQL Server scalar data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType.IsSystem">
            <summary>
            Gets a value that indicates whether this is a system data type.
            </summary>
            <value><c>true</c> if this is a system data type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType.IsClr">
            <summary>
            Gets a value that indicates whether this is a CLR data type.
            </summary>
            <value><c>true</c> if this is a CLR data type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType.IsXml">
            <summary>
            Gets a value that indicates whether this is an <c>xml</c> data type.
            </summary>
            <value><c>true</c> if this is an <c>xml</c> data type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType.IsVoid">
            <summary>
            Gets a value that indicates whether this data type represents the
            neutral void type which, is the type for NULL expression.
            </summary>
            <value><c>true</c> if this is a void type; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType.BaseSystemDataType">
            <summary>
            Gets the base system data type that the user-defined data type is derived from.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> that represents the base system data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalarDataType">
            <summary>
            Represents a mutable SQL Server scalar data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalarDataType.BaseSystemDataType">
            <summary>
            Gets or sets the base system data type that the user-defined data type is derived from.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType"/> object that represents the base system data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarExpression">
            <summary>
            Represents a scalar expression such as literals, for example: 1, 'hello', and so on; and the evaluation of scalar expressions, 
            for example: 1 + 5, 12 * dbo.test('a'), and so on.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarFunction">
            <summary>
            Represents a SQL Server scalar function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarFunction.IsAggregateFunction">
            <summary>
            Gets a value that indicates whether this is an aggregate function.
            </summary>
            <value><c>true</c> if this is an aggregate function; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalarFunction">
            <summary>
            Represents a mutable SQL Server scalar function.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarParameter">
            <summary>
            Represents a SQL Server scalar parameter.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction">
            <summary>
            Represents a SQL Server scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction.ReturnsNullOnNullInput">
            <summary>
            Gets a value that indicates whether to call the function if at least one of 
            the function arguments is null.
            </summary>
            <value><c>true</c> to call the function if at least one of the function arguments is null; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalarValuedFunction">
            <summary>
            Represents a mutable SQL Server scalar-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableScalarValuedFunction.ReturnsNullOnNullInput">
            <summary>
            Gets or sets a value that indicates whether to call the function if at least 
            one of the function arguments is null.
            </summary>
            <value><c>true</c> to call the function if at least one of the function arguments is null; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable">
            <summary>
            Represents a SQL Server scalar variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarVariable.DataType">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object that represents the scalar variable
            data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarDataType"/> object that represents the scalar variable
            data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema">
            <summary>
            Represents a SQL Server schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.Owner">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents the owner 
            of the schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents 
            the owner of the schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.Tables">
            <summary>
            Gets the collection of tables that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> that contains the tables that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.Views">
            <summary>
            Gets the collection of views that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> that contains the views that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.UserDefinedAggregates">
            <summary>
            Gets the collection of user-defined aggregates that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate"/> that contains the 
            user-defined aggregates that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.TableValuedFunctions">
            <summary>
            Gets the collection of table-valued functions that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> that contains the table-valued functions 
            that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.ScalarValuedFunctions">
            <summary>
            Gets the collection of scalar-valued functions that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> that contains the scalar-valued 
            functions that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.StoredProcedures">
            <summary>
            Gets the collection of stored procedures that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> that contains the stored procedures that 
            belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.ExtendedStoredProcedures">
            <summary>
            Gets the collection of extended stored procedures that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure"/> that contains the extended stored 
            procedures that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.UserDefinedDataTypes">
            <summary>
            Gets the collection of user-defined data types that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType"/> that contains the user-defined 
            data types that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.UserDefinedTableTypes">
            <summary>
            Gets the collection of user-defined table types that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType"/> that contains the user-defined table 
            types that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.UserDefinedClrTypes">
            <summary>
            Gets the collection of user-defined CLR types that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedClrType"/> that contains the user-defined 
            CLR types that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema.Synonyms">
            <summary>
            Gets the collection of synonyms that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> that contains the synonyms that 
            belong to this schema.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema">
            <summary>
            Represents a mutable SQL Server schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.Owner">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents the 
            owner of the schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabasePrincipal"/> object that represents 
            the owner of the schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.Tables">
            <summary>
            Gets the collection of tables that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> that contains the tables that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.Views">
            <summary>
            Gets the collection of views that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> that contains the views that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.UserDefinedAggregates">
            <summary>
            Gets the collection of user-defined aggregates that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate"/> that contains the 
            user-defined aggregates that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.TableValuedFunctions">
            <summary>
            Gets the collection of table-valued functions that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> that contains the table-valued 
            functions that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.ScalarValuedFunctions">
            <summary>
            Gets the collection of scalar-valued functions that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> that contains the scalar-valued 
            functions that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.StoredProcedures">
            <summary>
            Gets the collection of stored procedures that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> that contains the stored procedures that 
            belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.ExtendedStoredProcedures">
            <summary>
            Gets the collection of extended stored procedures that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure"/> that contains the extended stored 
            procedures that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.UserDefinedDataTypes">
            <summary>
            Gets the collection of user-defined data types that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType"/> that contains the user-defined 
            data types that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.UserDefinedTableTypes">
            <summary>
            Gets the collection of user-defined table types that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType"/> that contains the user-defined 
            table types that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.UserDefinedClrTypes">
            <summary>
            Gets the collection of user-defined CLR types that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedClrType"/> that contains the user-defined 
            CLR types that belong to this schema.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchema.Synonyms">
            <summary>
            Gets the collection of synonyms that belong to this schema.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> that contains the synonyms
            that belong to this schema.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject">
            <summary>
            Represents a metadata database object that is owned by a schema.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject.Schema">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that owns this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is the owner of this object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned by the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1"/> object.</typeparam>
            <param name="visitor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value that is returned by the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSchemaOwnedObject">
            <summary>
            Represents a mutable metadata object that is owned by a schema.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1">
            <summary>
            Represents a SQL Server schema-owned object visitor.
            </summary>
            <typeparam name="T">The type of the schema-owned object visitor.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure"/> object.
            </summary>
            <param name="extendedStoredProcedure">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExtendedStoredProcedure"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> object.
            </summary>
            <param name="scalarValuedFunction">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IScalarValuedFunction"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> object.
            </summary>
            <param name="storedProcedure">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object.
            </summary>
            <param name="synonym">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ITable)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object.
            </summary>
            <param name="table">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> object.
            </summary>
            <param name="tableValuedFunction">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate"/> object.
            </summary>
            <param name="userDefinedAggregate">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedClrType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedClrType"/> object.
            </summary>
            <param name="userDefinedClrType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedClrType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType"/> object.
            </summary>
            <param name="userDefinedDataType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType"/> object.
            </summary>
            <param name="userDefinedTableType">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchemaOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IView)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> object.
            </summary>
            <param name="view">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer">
            <summary>
            Represents an instance of SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer.CollationInfo">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that represents the server collation. 
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.CollationInfo"/> object that represents the server collation.
            This is the collation used by the master database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer.Databases">
            <summary>
            Gets the collection of databases on the server.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> that contains the
            databases on the server.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer.Credentials">
            <summary>
            Gets the collection of server credentials.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> that contains the
            server credentials.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer.Logins">
            <summary>
            Gets the collection of server logins.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> that contains the
            server logins.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer.Triggers">
            <summary>
            Gets the collection of server DDL triggers.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> that contains the
            server DDL triggers.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer">
            <summary>
            Represents a mutable instance of SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer.Databases">
            <summary>
            Gets the collection of databases on the server.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> that contains the
            databases on the server.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer.Credentials">
            <summary>
            Gets the collection of server credentials.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> that contains the
            server credentials.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer.Logins">
            <summary>
            Gets the collection of server logins.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> that contains the
            server logins.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServer.Triggers">
            <summary>
            Gets the collection of server DDL triggers.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> that contains the
            server DDL triggers.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger">
            <summary>
            Represents a SQL Server DDL trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger.ServerDdlEvents">
            <summary>
            Gets a set of server DDL event types.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITriggerEventTypeSet"/> object 
            that contains the server DDL event types.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger.IsQuotedIdentifierOn">
            <summary>
            Gets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServerDdlTrigger">
            <summary>
            Represents a mutable SQL Server DDL trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServerDdlTrigger.ServerDdlEvents">
            <summary>
            Gets a set of server DDL event types.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITriggerEventTypeSet"/> object 
            that contains the server DDL event types.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServerDdlTrigger.IsQuotedIdentifierOn">
            <summary>
            Gets or sets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObject">
            <summary>
            Represents a metadata object that is owned by an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObject.Server">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that owns this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object that owns this object.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObject.Accept``1(Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor{``0})">
            <summary>
            Accepts a visit from the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1"/> object.
            </summary>
            <typeparam name="T">The type of the value returned by the 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1"/> object.</typeparam>
            <param name="visitor">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1"/> object that 
            performs the visit.</param>
            <return>The value that is returned by the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1"/> object.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableServerOwnedObject">
            <summary>
            Represents a mutable metadata object that is owned by an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServer"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1">
            <summary>
            Represents a server-owned object visitor.
            </summary>
            <typeparam name="T">The type of the server-owned object visitor.</typeparam>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> object.
            </summary>
            <param name="credential">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICredential"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object.
            </summary>
            <param name="database">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabase"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object.
            </summary>
            <param name="login">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerOwnedObjectVisitor`1.Visit(Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger)">
            <summary>
            Visits the specified <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> object.
            </summary>
            <param name="serverDdlTrigger">The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IServerDdlTrigger"/> object
            to visit.</param>
            <return>The <typeparamref name="T"/> object that is returned by the visit.</return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex">
            <summary>
            Represents a SQL Server spatial index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.BoundingBoxXMax">
            <summary>
            Gets the x-coordinate of the upper-right corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.BoundingBoxXMin">
            <summary>
            Gets the x-coordinate of the lower-left corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.BoundingBoxYMax">
            <summary>
            Gets the y-coordinate of the upper-right corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.BoundingBoxYMin">
            <summary>
            Gets the y-coordinate of the lower-left corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.CellsPerObject">
            <summary>
            Gets the maximum number of cells per object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.IndexedColumn">
            <summary>
            Gets the column on which index is defined. Column must be of a spatial type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.Level1Density">
            <summary>
            Gets the density of level 1 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.Level2Density">
            <summary>
            Gets the density of level 2 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.Level3Density">
            <summary>
            Gets the density of level 3 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.Level4Density">
            <summary>
            Gets the density of level 4 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISpatialIndex.NoAutomaticRecomputation">
            <summary>
            Gets a value that indicates whether statistics are 
            regenerated when the index is created.
            </summary>
            <value><c>true</c> if statistics are not regenerated when the index is created; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex">
            <summary>
            Represents a SQL Server spatial index.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.BoundingBoxXMax">
            <summary>
            Gets or sets the x-coordinate of the upper-right corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.BoundingBoxXMin">
            <summary>
            Gets or sets the x-coordinate of the lower-left corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.BoundingBoxYMax">
            <summary>
            Gets or sets thse y-coordinate of the upper-right corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.BoundingBoxYMin">
            <summary>
            Gets or sets the y-coordinate of the lower-left corner of a bounding box. 
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.CellsPerObject">
            <summary>
            Gets or sets the maximum number of cells per object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.IndexedColumn">
            <summary>
            Gets or sets the column on which index is defined. Column must be of a spatial type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.Level1Density">
            <summary>
            Gets or sets the density of level 1 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.Level2Density">
            <summary>
            Gets or sets the density of level 2 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.Level3Density">
            <summary>
            Gets or sets the density of level 3 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.Level4Density">
            <summary>
            Gets or sets the density of level 4 grid.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSpatialIndex.NoAutomaticRecomputation">
            <summary>
            Gets or sets a value indicating whether statistics are 
            regenerated when the index is created.
            </summary>
            <value><c>true</c> if statistics are not regenerated when the index is created; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics">
            <summary>
            Represents a Sql Server statistics object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics.Type">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.StatisticsTYpe"/> value that indicates type of statistics object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics.Parent">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics.FilterDefinition">
            <summary>
            Gets the index filter definition text.
            </summary>
            <value>The index filter definition text.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics.NoAutomaticRecomputation">
            <summary>
            Gets a value indicating whether statistics are 
            regenerated when the index is created.
            </summary>
            <value><c>true</c> if statistics are not regenerated when the index is created; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatistics.Columns">
            <summary>
            Gets the collection of columns that are participating in the statistics.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatisticsColumn"/> that contains the columns that are participating in the statistics.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStatistics">
            <summary>
            Represents a Sql Server statistics object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStatistics.Type">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.StatisticsTYpe"/> value that indicates type of statistics object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStatistics.Parent">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that is the parent of this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStatistics.FilterDefinition">
            <summary>
            Gets or sets the index filter definition text.
            </summary>
            <value>The index filter definition text.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStatistics.NoAutomaticRecomputation">
            <summary>
            Gets or sets a value indicating whether statistics are 
            regenerated when the index is created.
            </summary>
            <value><c>true</c> if statistics are not regenerated when the index is created; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStatistics.Columns">
            <summary>
            Gets or sets the collection of columns that are participating in the statistics.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStatisticsColumn"/> that contains the columns that are participating in the statistics.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure">
            <summary>
            Represents a SQL Server stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure.BodyText">
            <summary>
            Gets the Transact-SQL statements that define the module.
            </summary>
            <value>The Transact-SQL statements that define the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure.ForReplication">
            <summary>
            Gets a value that indicates whether the stored procedure is available for 
            replication.
            </summary>
            <value><c>true</c> if the stored procedure is available for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure.IsRecompiled">
            <summary>
            Gets a value that indicates whether the stored procedure is recompiled before
            execution.
            </summary>
            <value><c>true</c> if the stored procedure is recompiled before execution; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure.IsSqlClr">
            <summary>
            Gets a value that indicates whether this is a CLR module.
            </summary>
            <value><c>true</c> if this is a CLR module; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure.Startup">
            <summary>
            Gets a value that specifies whether the stored procedure runs when the instance 
            of SQL Server starts up.
            </summary>
            <value><c>true</c> if the stored procedure runs when the instance of SQL Server starts up; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IStoredProcedure.IsQuotedIdentifierOn">
            <summary>
            Gets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure">
            <summary>
            Represents a mutable SQL Server stored procedure.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure.BodyText">
            <summary>
            Gets or sets the Transact-SQL statements that define the module.
            </summary>
            <value>The Transact-SQL statements that define the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure.ForReplication">
            <summary>
            Gets or sets a value that indicates whether the stored procedure is available 
            for replication
            </summary>
            <value><c>true</c> if the stored procedure is available for replication; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure.IsRecompiled">
            <summary>
            Gets or sets a value that indicates whether the stored procedure is recompiled 
            before execution.
            </summary>
            <value><c>true</c> if the stored procedure is recompiled before execution; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure.IsSqlClr">
            <summary>
            Gets or sets a value that indicates whether this is a CLR module.
            </summary>
            <value><c>true</c> if this is a CLR module; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableStoredProcedure.Startup">
            <summary>
            Gets or sets a value that specifies whether the stored procedure runs when the 
            instance of SQL Server starts up.
            </summary>
            <value><c>true</c> if the stored procedure runs when the instance of SQL Server starts up; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym">
            <summary>
            Represents a synonym.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym.BaseType">
            <summary>
            Gets the base type of the target object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISynonym.BaseObjectName">
            <summary>
            Gets the fully qualified name of the target object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSynonym">
            <summary>
            Represents a mutable synonym.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSynonym.BaseType">
            <summary>
            Gets or sets the base type of the target object.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableSynonym.BaseObjectName">
            <summary>
            Gets or sets the fully qualified name of the target object.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemClrDataType">
            <summary>
            Represents a SQL Server system CLR data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType">
            <summary>
            Represents a SQL Server built-in system data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType.TypeSpec">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that provides the type specification.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.DataTypeSpec"/> object that provides the type specification.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType.Length">
            <summary>
            Gets the length of the data type. 
            </summary>
            <value>The length of the data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType.NumericPrecision">
            <summary>
            Gets the numeric precision of the data type.
            </summary>
            <value>The numeric precision of the data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ISystemDataType.NumericScale">
            <summary>
            Gets the numeric scale of the data type.
            </summary>
            <value>The numeric scale of the data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable">
            <summary>
            Represents a SQL Server database table.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTable">
            <summary>
            Represents a mutable SQL Server database table.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType">
            <summary>
            Represents a SQL Server table data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableDataType">
            <summary>
            Represents a mutable SQL Server table data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableParameter">
            <summary>
            Represents a parameter of table type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction">
            <summary>
            Represents a SQL Server table-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction.IsInline">
            <summary>
            Gets a value that indicates whether the table-valued function is an inline
            function.
            </summary>
            <value><c>true</c> if the table-valued function is an inline function; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableValuedFunction.TableVariableName">
            <summary>
            Gets the variable name of the return table .
            </summary>
            <value>The variable name of the return table.</value>
            <remarks>
            This property is set only for table-valued funtions that are not inline.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableValuedFunction">
            <summary>
            Represents a mutable SQL Server table-valued function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableValuedFunction.IsInline">
            <summary>
            Gets or sets a value that indicates whether the table-valued function is an inline
            function.
            </summary>
            <value><c>true</c> if the table-valued function is an inline function; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableValuedFunction.TableVariableName">
            <summary>
            Gets or sets a return table variable name.
            </summary>
            <value>The return table variable name.</value>
            <remarks>
            This property is set only for table-valued funtions that are not inline.
            </remarks>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable">
            <summary>
            Represents SQL server table variable.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableVariable.DataType">
            <summary>
            Gets the local variable data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableDataType"/> that represents the local variable data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableViewBase">
            <summary>
            Base interface for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITable"/> 
            and <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView"/> interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableViewBase.Triggers">
            <summary>
            Gets a collection of DML triggers.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> 
            of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger"/> that contains the DML triggers.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITableViewBase.IsQuotedIdentifierOn">
            <summary>
            Gets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableViewBase">
            <summary>
            Base interface for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTable"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView"/> interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableViewBase.Triggers">
            <summary>
            Gets a collection of DML triggers.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataCollection`1"/> 
            of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IDmlTrigger"/> that contains the DML triggers</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTableViewBase.IsQuotedIdentifierOn">
            <summary>
            Gets or sets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular">
            <summary>
            Defines a common interface for all tabular metadata objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular.TabularType">
            <summary>
            Gets the tabular type.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType"/> value that specifies the tabular type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular.Columns">
            <summary>
            Gets the collection of columns that belong to this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataOrderedCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> that contains the columns that belong to this object.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular.Unaliased">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that this object is an alias for.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that this object is an alias for. 
            If this object is not a table alias, this instance is returned.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular">
            <summary>
            Defines a common mutable interface for all tabular metadata objects.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTabular.Columns">
            <summary>
            Gets the collection of columns that belong to this object.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableMetadataOrderedCollection`1"/> of 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IColumn"/> that contains the columns that belong to this object.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger">
            <summary>
            Represents a SQL Server trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger.BodyText">
            <summary>
            Gets the Transact-SQL statements that define the module.
            </summary>
            <value>The Transact-SQL statements that define the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger.IsEncrypted">
            <summary>
            Gets a value indicating whether the module is encrypted.
            </summary>
            <value><c>true</c> if the module is encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger.IsEnabled">
            <summary>
            Gets a value indicating whether the module is enabled.
            </summary>
            <value><c>true</c> if the module is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger.IsSqlClr">
            <summary>
            Gets a value indicating whether this is a CLR module.
            </summary>
            <value><c>true</c> if this is a CLR module; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.ITrigger.ExecutionContext">
            <summary>
            Gets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies the module
            execution context.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies 
            the module execution context.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTrigger">
            <summary>
            Represents a mutable SQL Server trigger.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTrigger.BodyText">
            <summary>
            Gets or sets the Transact-SQL statements that define the module.
            </summary>
            <value>The Transact-SQL statements that define the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTrigger.IsEncrypted">
            <summary>
            Gets or sets a value indicating whether the module is encrypted.
            </summary>
            <value><c>true</c> if the module is encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTrigger.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the module is enabled.
            </summary>
            <value><c>true</c> if the module is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTrigger.IsSqlClr">
            <summary>
            Gets or sets a value indicating whether this is a CLR module.
            </summary>
            <value><c>true</c> if this is a CLR module; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTrigger.ExecutionContext">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies the module
            execution context.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies 
            the module execution context.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITriggerEventTypeSet">
            <summary>
            Represents a set of trigger events.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.ITriggerEventTypeSet.Contains(System.String)">
            <summary>
            Determines whether an element is in the set.
            </summary>
            <param name="item">The element to locate in the set.</param>
            <returns><c>true</c> if item is found in the set; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTriggerEventTypeSet">
            <summary>
            Represents a set of mutable trigger events.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTriggerEventTypeSet.Add(System.String)">
            <summary>
            Adds an object to the set.
            </summary>
            <param name="item">
            The object to add to the set. This value cannot be a null reference.
            </param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTriggerEventTypeSet.Remove(System.String)">
            <summary>
            Removes an object from the set.
            </summary>
            <param name="item">
            The object to remove from the set. This value cannot be a null reference.
            </param>
            <returns>
            <c>true</c> if the item is successfully removed. <c>false</c> if the item is not successfully removed,
            or if the item is not found in the set.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableTriggerEventTypeSet.Clear">
            <summary>
            Removes all elements from the set.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtDataMember">
            <summary>
            Represents a user-defined type property or field.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMember">
            <summary>
            Defines a common interface for all user-defined type members.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMember.UserDefinedType">
            <summary>
            Gets the CLR type of this user-defined type member.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IClrDataType"/> object that represents
            the CLR type of this member.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMember.IsStatic">
            <summary>
            Gets a value that indicates whether this is a static member.
            </summary>
            <value><c>true</c> if this is a static member; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUdtMethod">
            <summary>
            Represents a SQL Server user-defined type method.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraint">
            <summary>
            Represents a SQL Server UNIQUE constraint.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraintBase">
            <summary>
            Base interface for UNIQUE and PRIMARY KEY constraints.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUniqueConstraintBase.AssociatedIndex">
            <summary>
            Gets the associated unique index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser">
            <summary>
            Represents a SQL Server user.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.UserType">
            <summary>
            Gets the type of the user.
            </summary>
            <value>A <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType"/> value that indicates the type of the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.AsymmetricKey">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.Certificate">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.Login">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that is associated with the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.Password">
            <summary>
            Gets the <see cref="T:System.String"/> password value that is associated with the user.
            </summary>
            <value>The <see cref="T:System.String"/> password value that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUser.DefaultSchema">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is default schema for the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is default schema for the user.</value>        
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser">
            <summary>
            Represents a mutable SQL Server user.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser.AsymmetricKey">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey.IAsymmetricKey"/> object that is
            associated with the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IAsymmetricKey"/> object that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser.Certificate">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICertificate"/> object that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser.Login">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that is associated with the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ILogin"/> object that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser.Password">
            <summary>
            Gets or sets the <see cref="T:System.String"/> password value that is associated with the user.
            </summary>
            <value>The <see cref="T:System.String"/> password value that is associated with the user.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUser.DefaultSchema">
            <summary>
            Gets or sets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is default schema for the user.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ISchema"/> object that is default schema for the user.</value>        
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedAggregate">
            <summary>
            Represents a SQL Server user-defined aggregate.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedClrType">
            <summary>
            Represents a SQL Server user-defined CLR type (UDT).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedClrType">
            <summary>
            Represents a mutable SQL Server user-defined CLR type (UDT).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType">
            <summary>
            Represents a user-defined data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedDataType.Nullable">
            <summary>
            Gets a value that indicates whether the type is nullable.
            </summary>
            <value><c>true</c> if the type is nullable; otherwise, <c>false.</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedDataType">
            <summary>
            Represents a mutable user-defined data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedDataType.Nullable">
            <summary>
            Gets or sets a value that indicates whether the type is nullable.
            </summary>
            <value><c>true</c> if the type is nullable; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction">
            <summary>
            Represents a user-defined function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction.BodyText">
            <summary>
            Gets the Transact-SQL string that defines the module.
            </summary>
            <value>The Transact-SQL string that defines the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction.IsSchemaBound">
            <summary>
            Gets a value that indicates whether the user-defined function is bound to a schema.
            </summary>
            <value><c>true</c> if the user-defined function is bound to a schema; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction.IsSqlClr">
            <summary>
            Gets a value that indicates whether this is a CLR module.
            </summary>
            <value><c>true</c> if this is a CLR module; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction.IsQuotedIdentifierOn">
            <summary>
            Gets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunction">
            <summary>
            Represents a mutable user-defined function.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunction.BodyText">
            <summary>
            Gets or sets the Transact-SQL string that defines the module.
            </summary>
            <value>The Transact-SQL string that defines the module.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunction.IsSchemaBound">
            <summary>
            Gets or sets a value that indicates whether the user-defined function is 
            bound to a schema.
            </summary>
            <value><c>true</c> if the user-defined function is bound to a schema; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunction.IsSqlClr">
            <summary>
            Gets or sets a value that indicates whether this is a CLR module.
            </summary>
            <value><c>true</c> if this is a CLR module; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunction.IsQuotedIdentifierOn">
            <summary>
            Gets or sets a value that indicates whether identifiers delimited by double quotation marks are Transact-SQL reserved keywords or contain characters not usually allowed by the Transact-SQL syntax rules. 
            </summary>
            <value><c>true</c> if quoted identifiers are used to allow characters not usually allowed by the Transact-SQL syntax rules; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunctionModuleBase">
            <summary>
            Common base interface for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunction"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ICallableModule"/> interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunctionModuleBase.IsEncrypted">
            <summary>
            Gets a value that indicates whether the module is encrypted.
            </summary>
            <value><c>true</c> if the module is encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedFunctionModuleBase.ExecutionContext">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies the module
            execution context.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies the module
            execution context.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunctionModuleBase">
            <summary>
            Common base interface for the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunction"/> and 
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableCallableModule"/> interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunctionModuleBase.IsEncrypted">
            <summary>
            Gets or sets a value that indicates whether the module is encrypted.
            </summary>
            <value><c>true</c> if the module is encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedFunctionModuleBase.ExecutionContext">
            <summary>
            Gets or sets an <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies the 
            module execution context.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IExecutionContext"/> object that specifies the module
            execution context.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedTableType">
            <summary>
            Represents a user-defined table type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedTableType">
            <summary>
            Represents a mutable user-defined table type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IUserDefinedType">
            <summary>
            Defines a common interface for all user-defined types. These types include user-defined data types, user-defined table types, 
            and user-defined CLR types.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableUserDefinedType">
            <summary>
            Defines a common interface for all mutable user-defined types. These types include user-defined data types, user-defined table types, 
            and user-defined CLR types.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IView">
            <summary>
            Represents a SQL Server database view.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IView.IsEncrypted">
            <summary>
            Gets a value that indicates whether the view is encrypted.
            </summary>
            <value><c>true</c> if the view is encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IView.IsSchemaBound">
            <summary>
            Gets a value that indicates whether a schema is bound to the view. 
            </summary>
            <value><c>true</c> if a schema is bound to the view; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IView.QueryText">
            <summary>
            Gets the Transact-SQL string that defines the view query.
            </summary>
            <value>The Transact-SQL string that defines the view query.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IView.ReturnsViewMetadata">
            <summary>
            Gets a value that indicates whether the metadata is returned with the 
            view data.
            </summary>
            <value><c>true</c> if the metadata is returned with the view data; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IView.HasCheckOption">
            <summary>
            Gets a value that indicates whether the view uses the WITH CHECK option.
            </summary>
            <value><c>true</c> if the view uses the WITH CHECK option; othewise, <c>false</c>. </value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IView.HasColumnSpecification">
            <summary>
            Gets or sets a value that indicates whether the view explicitly specifies column names
            </summary>
            <value><c>true</c> if the view explicitly specifies column names; othewise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView">
            <summary>
            Represents a mutable SQL Server database view.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView.IsEncrypted">
            <summary>
            Gets or sets a value that indicates whether the view is encrypted.
            </summary>
            <value><c>true</c> if the view is encrypted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView.IsSchemaBound">
            <summary>
            Gets or sets a value that indicates whether a schema is bound to the view. 
            </summary>
            <value><c>true</c> if a schema is bound to the view; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView.QueryText">
            <summary>
            Gets or sets the Transact-SQL string that defines the view query.
            </summary>
            <value>The Transact-SQL string that defines the view query.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView.ReturnsViewMetadata">
            <summary>
            Gets or sets a value that indicates whether the metadata is returned with 
            the view data.
            </summary>
            <value><c>true</c> if the metadata is returned with the view data; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView.HasCheckOption">
            <summary>
            Gets or sets a value that indicates whether the view uses the WITH CHECK OPTION option.
            </summary>
            <value><c>true</c> if the view uses the WITH CHECK OPTION option; othewise, <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableView.HasColumnSpecification">
            <summary>
            Gets or sets a value that indicates whether the view explicitly specifies column names
            </summary>
            <value><c>true</c> if the view explicitly specifies column names; othewise, <c>false</c>.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IVirtualTable">
            <summary>
            Represents a virtual table (a table that is not database-persisted).
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IVirtualTable.TargetTable">
            <summary>
            Gets the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents the actual table that 
            provides the collection of columns. For example, a DML INSERT/DELETE table has a target table that is different than the virtual table.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ITabular"/> object that represents the actual table that 
            provides the collection of columns.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMutableVirtualTable">
            <summary>
            Represents a mutable virtual table (a table that is not database-persisted).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IVoidDataType">
            <summary>
            Represents the SQL Server VOID data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType">
            <summary>
            Represents the SQL Server <c>xml</c> data type.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType.IsXmlNode">
            <summary>
            Gets whether the <c>xml</c> data type is representing an xml node. 
            Xml node values can be used only in some of the expressions.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType.Methods">
            <summary>
            Gets the collection of methods that are supported by the 
            <c>xml</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeMethod"/> that contains the
            methods that are supported by the <c>xml</c> data type.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataType.TableMethods">
            <summary>
            Gets the collection of table methods that are supported by the 
            <c>xml</c> data type.
            </summary>
            <value>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IMetadataCollection`1"/> of
            <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeTableMethod"/> that contains the
            methods that are supported by the <c>xml</c> data type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeMethod">
            <summary>
            Represents a method that can be called on a scalar of the <c>xml</c> data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlDataTypeTableMethod">
            <summary>
            Represents a table valued method that can be called on a scalar of the <c>xml</c> data type.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.IXmlIndex">
            <summary>
            Represents a SQL Server XML index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType">
            <summary>
            Specifies the login type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType.AsymmetricKey">
            <summary>
            The login is mapped to an asymmetric key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType.Certificate">
            <summary>
            The login is mapped to a certificate.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType.Sql">
            <summary>
            A SQL Server standard login. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType.Windows">
            <summary>
            The login is mapped to a Windows user or group.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.LoginType.External">
            <summary>
            The login is mapped to a AAD user or group.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState">
            <summary>
            Specifies SQL Server permission state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState.Deny">
            <summary>
            The permission has been denied.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState.Grant">
            <summary>
            The permission has been granted.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState.GrantWithGrant">
            <summary>
            The permission has been granted with the ability to grant access to other users.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.PermissionState.Revoke">
            <summary>
            The permission has been revoked.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType">
            <summary>
            Defines the scalar object types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.Column">
            <summary>
            A column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.Expression">
            <summary>
            The evaluation of an expression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.Literal">
            <summary>
            A literal.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.Null">
            <summary>
            A placeholder scalar.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.ScalarFunction">
            <summary>
            A scalar function. A scalar function can be a user-defined, built-in, or aggregate function.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.ScalarVariable">
            <summary>
            A scalar variable or parameter.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.ScalarType.UdtMember">
            <summary>
            A user-defined type member.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder">
            <summary>
            Defines item sort order.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder.Ascending">
            <summary>
            The items are sorted in ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SortOrder.Descending">
            <summary>
            The items are sorted in descending order.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType">
            <summary>
            Specifies the SQL Server built-in data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.None">
            <summary>
            The data type is unknown.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.BigInt">
            <summary>
            A 64-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Binary">
            <summary>
            A fixed-length byte array ranging between 1 and 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Bit">
            <summary>
            An unsigned bit value that can be 0, 1, or a null reference.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Char">
            <summary>
            A fixed-length byte array of non-Unicode (256 code page) characters 
            ranging between 1 and 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Date">
            <summary>
            Represents any valid Gregorian calendar date between 
            '0001-01-01' CE and '9999-12-31' CE.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.DateTime">
            <summary>
            A date and time between January 1, 1753 and December 31, 9999 to an accuracy of 3.33 milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.DateTime2">
            <summary>
            An extension of the existing <c>datetime</c> data type with 
            a large date range and large default fractional precision. Values that 
            represent any valid Gregorian calendar date between ‘0001-01-01’ CE and 
            ‘9999-12-31’ CE combined with any valid time of day based on a 24-hour clock.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.DateTimeOffset">
            <summary>
            A valid Gregorian calendar date between `0001-01-01’ and 
            ‘9999-12-31’ with any valid time of day based on a 24-hour format between 
            ’00:00:00’ and max ’23:59:49.9999999’. Included in the <c>datetimeoffset</c> value is a time 
            zone offset that must be between ‘-14:00’ and ‘+14:00’.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Decimal">
            <summary>
            A fixed precision and fixed scale numeric value between -1038 -1 and +1038 -1.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Float">
            <summary>
            An 8-byte floating point number within the range of -1.79E +308 through 1.79E +308.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Geography">
            <summary>
            Represents data in a round-earth coordinate system. 
            The <c>geography</c> data type stores ellipsoidal (round-earth) data, 
            such as GPS latitude and longitude coordinates. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Geometry">
            <summary>
            Represents data in a Euclidean (flat) coordinate system.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.HierarchyId">
            <summary>
            A position in a hierarchy.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Image">
            <summary>
            A variable-length byte array ranging from 0 to 231 -1 (or 2,147,483,647) bytes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Int">
            <summary>
            A 32-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Money">
            <summary>
            A <c>decimal</c> value that specifies a currency value ranging from -263 (or -922,337,203,685,477.5808) to  
            263 -1 (or +922,337,203,685,477.5807)with an accuracy of 1 in 10,000 of a currency unit.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.NChar">
            <summary>
            A fixed-length byte array of Unicode characters ranging between 1 and 4,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.NText">
            <summary>
            A variable-length byte array of Unicode data with a maximum length of 230 - 1 
            (or 1,073,741,823) characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Numeric">
            <summary>
            A fixed precision and fixed scale numeric value between -1038 -1 and +1038 -1.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.NVarChar">
            <summary>
            A variable-length byte array of Unicode characters ranging between 1 and 
            2^63 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.NVarCharMax">
            <summary>
            The <c>nvarchar(max)</c> data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Real">
            <summary>
            A 4-bit floating point number within the range of -3.40E +38 through 3.40E +38.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.SmallDateTime">
            <summary>
            A date and time between January 1, 1900 and June 6, 2079 to an accuracy of one minute.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.SmallInt">
            <summary>
            A 16-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.SmallMoney">
            <summary>
            A <c>decimal</c> value that specifies a currency value ranging from
            -214,748.3648 to +214,748.3647 with an accuracy of 1 in 10,000 of a currency unit.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.SysName">
            <summary>
            A system name string.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Text">
            <summary>
            A variable-length byte array of non-Unicode (256 code page) data with a 
            maximum length of 231 -1 (or 2,147,483,647) characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Time">
            <summary>
            A time of day based on a 24-hour clock between '00:00:00' and max '23:59:59:9999999'. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Timestamp">
            <summary>
            An automatically generated byte array value, which is guaranteed to be 
            unique within a database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.TinyInt">
            <summary>
            An 8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.UniqueIdentifier">
            <summary>
            A globally unique identifier (or GUID).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.VarBinary">
            <summary>
            A variable-length byte array ranging between 1 and 2^64 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.VarBinaryMax">
            <summary>
            A <c>varbinary(max)</c> type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.VarChar">
            <summary>
            A variable-length byte array of non-Unicode (256 cod epage) characters 
            ranging between 1 and 2^64 characters.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.VarCharMax">
            <summary>
            A <c>varchar(max)</c> data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Variant">
            <summary>
            A special data type that can contain numeric, string, binary, date data,
            and the SQL Server values Empty and Null. This data type is assumed if no
            other type is declared.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.Xml">
            <summary>
            An <c>xml</c> data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SqlDataType.XmlNode">
            <summary>
            An <c>xmlnode</c> data type. This is a special data type used by columns returned from xml.nodes() method.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.StatisticsType">
            <summary>
            Indicates the type of the statistics.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.StatisticsType.Explicit">
            <summary>
            Indicates that this statistics object is created explicitly.
            For example: by using CREATE STATISTICS statement.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.StatisticsType.ImplicitViaIndex">
            <summary>
            Indicates that this statistics object is created implicitly as part of index creation.
            For exmaple: by using CREATE INDEX statement.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.StatisticsType.Auto">
            <summary>
            Indicates that this statistics object is created automatically by Sql Server.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType">
            <summary>
            The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType"/> enumeration contains constant values that specify the type of synonym. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.None">
            <summary>
            Synonym has no type.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.ClrAggregateFunction">
            <summary>
            Synonym is a CLR aggregate function.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.ClrScalarFunction">
            <summary>
            Synonym is a CLR scalar function.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.ClrStoredProcedure">
            <summary>
            Synonym is a CLR stored procedure.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.ClrTableValuedFunction">
            <summary>
            Synonym is a CLR table-valued function.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.ExtendedStoredProcedure">
            <summary>
            Synonym is an extended stored procedure.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.ReplicationFilterProcedure">
            <summary>
            Synonym is a replication filter procedure.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.SqlInlineTableValuedFunction">
            <summary>
            Synonym is a SQL Server inline table-valued function.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.SqlScalarFunction">
            <summary>
            Synonym is a SQL Server scalar-valued function.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.SqlStoredProcedure">
            <summary>
            Synonym is a SQL Server stored procedure.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.SqlTableValuedFunction">
            <summary>
            Synonym is a SQL Server table-valued function.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.Table">
            <summary>
            Synonym is a SQL Server table.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.SynonymBaseType.View">
            <summary>
            Synonym is a SQL Server view.
            </summary> 
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType">
            <summary>
            Defines a tabular object type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.CommonTableExpression">
            <summary>
            A common table expression (CTE).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.DerivedTable">
            <summary>
            A derived table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.DmlInsertedDeleted">
            <summary>
            A DML INSERT/DELETE table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.DmlTableSource">
            <summary>
            A DML table source.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.PivotTable">
            <summary>
            A pivot table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.Table">
            <summary>
            A table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.TableAlias">
            <summary>
            A table alias.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.TableDataType">
            <summary>
            A <c>table</c> data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.TableValuedFunction">
            <summary>
            A table-valued function.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.TableVariable">
            <summary>
            A table variable.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.TemporaryTable">
            <summary>
            A temporary table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.UnpivotTable">
            <summary>
            An unpivot table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.TabularType.View">
            <summary>
            A pivot view.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType">
            <summary>
            Specifies the user type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType.AsymmetricKey">
            <summary>
            A user based on the asymmetric key. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType.Certificate">
            <summary>
            A user based on the certificate. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType.NoLogin">
            <summary>
            A user that cannot log in to SQL Server.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType.SqlLogin">
            <summary>
            A user based or SQL Server login. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType.Password">
            <summary>
            A user based on the password. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Metadata.UserType.External">
            <summary>
            A user based on external authentication
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.BitWidthTypeCompactor.Node">
            <summary>
            Node
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.BitWidthTypeCompactor.PackedTypeBucket">
            <summary>
            PackedTypeBucket
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.BitWidthTypeCompactor.PackedValue">
            <summary>
            PackedValue
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.BitWidthTypeCompactor.PackedField">
            <summary>
            PackedField
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.DeserializationException">
            <summary>
            The exception that is thrown when the deserializer encounters error.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.DeserializationException.#ctor">
            <summary>
            Initializes a new instance of the DeserializationException class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.DeserializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DeserializationException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.DeserializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DeserializationException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.InvalidXmlException">
            <summary>
            The exception that is thrown when the deserializer encounters XML error.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.InvalidXmlException.#ctor">
            <summary>
            Initializes a new instance of the InvalidXmlException class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.InvalidXmlException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidXmlException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.InvalidXmlException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidXmlException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.XmlNestingType">
            <summary>
            Defines a Nesting Type for object definition in XML file.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.XmlNestingType.Standalone">
            <summary>
            Object will be serialized as a top level standalone element. 
            The header element defining type of the object will be written.
            Object definition will appear only once in the file.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.XmlNestingType.InlineDynamicType">
            <summary>
            Object will be nested inline referencing property. 
            The header element defining type of the object will be written.
            </summary>
            <remarks>
            Every reference to an object will cause writing a definition.
            This does not preserve identity of the object.
            </remarks>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.XmlNestingType.InlineStaticType">
            <summary>
            Object will be nested inline referencing property.
            The header element defining type of the object will NOT be written
            - type of the object will be inferred from return type of the property.
            </summary>
            /// <remarks>
            Every reference to an object will cause writing a definition.
            This does not preserve identity of the object.
            </remarks>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.XmlMetadataDeserializer.ReadMetadataObject(Microsoft.SqlServer.Management.SqlParser.MetadataSerialization.XmlScanner,System.Int32,Microsoft.SqlServer.Management.SqlParser.Metadata.MetadataTypeInfo)">
            <summary>
            
            </summary>
            <param name="scanner"></param>
            <param name="id">Object id for inline nesting, 0 otherwise</param>
            <param name="typeInfo">Object type for static nesting, null otherwise</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataServices.MetadataUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration">
            <summary>
            Represents a completion list item.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration.Title">
            <summary>
            Gets the displayed title of the completion list item.
            </summary>
            <value>The displayed title of the completion list item.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration.Description">
            <summary>
            Gets the description of the completion list item.
            </summary>
            <value>The description of the completion list item.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration.DatabaseQualifiedName">
            <summary>
            Gets the database-qualified name of the completion list item.
            of the completion list item if applicable (i.e. belongs to a database);
            otherwise, it returns null.
            </summary>
            <value>The database-qualified name of the completion list item, or a null reference if the list item does not
            belong to a database.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration.Type">
            <summary>
            Gets a <see cref="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType"/> that specifies the type of the 
            completion list item.
            </summary>
            <value>One of the enumeration values that specifies the type of the completion list item.</value>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration.ToString">
            <summary>
            Returns the description of the completion list item.
            </summary>
            <return>The description of the completion list item.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration.CompareTo(Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration)">
            <summary>
            Compares the value of the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration"/> object with 
            another object of the same type.
            </summary>
            <param name="other">The object to compare against.</param>
            <return>
            A 32-bit signed integer that indicates whether the current <see cref="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration"/>
            object is less than, equal to, or greater than the specified object.
            </return>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType">
            <summary>
            Specifies the <see cref="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration"/>
            type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ApplicationRole">
            <summary>
            An application role.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.AsymmetricKey">
            <summary>
            An asymmetric key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.BuiltInFunction">
            <summary>
            A built-in function or global variable.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Certificate">
            <summary>
            A certificate.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.CheckConstraint">
            <summary>
            A CHECK constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Collation">
            <summary>
            A system collation.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Column">
            <summary>
            A column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Credential">
            <summary>
            A credential.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.CursorDataType">
            <summary>
            A cursor data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.CursorParameter">
            <summary>
            A cursor parameter.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.CursorVariable">
            <summary>
            A cursor variable.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Database">
            <summary>
            A database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.DatabaseDdlTrigger">
            <summary>
            A database DDL trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.DatabasePermission">
            <summary>
            A database permission.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.DatabaseRole">
            <summary>
            A database role.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.DatePart">
            <summary>
            A date-part function argument.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.DefaultConstraint">
            <summary>
            A column default constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.DmlTrigger">
            <summary>
            A DML trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ExecutionContext">
            <summary>
            A user-defined module execution context.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ExtendedStoredProcedure">
            <summary>
            An extended stored procedure.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.FileGroup">
            <summary>
            A file group.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ForeignKeyColumn">
            <summary>
            A foreign key column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ForeignKeyConstraint">
            <summary>
            A FOREIGN KEY constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.IndexedColumn">
            <summary>
            An indexed column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Login">
            <summary>
            A login account.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.PartitionScheme">
            <summary>
            A partition scheme.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.PrimaryKeyConstraint">
            <summary>
            A PRIMARY KEY constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.RelationalIndex">
            <summary>
            A relational index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ScalarExpression">
            <summary>
            A general scalar expression.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ScalarDataType">
            <summary>
            A scalar data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ScalarParameter">
            <summary>
            A scalar parameter.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ScalarValuedFunction">
            <summary>
            A user-defined scalar-valued function.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ScalarVariable">
            <summary>
            A scalar variable.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Schema">
            <summary>
            A schema.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Server">
            <summary>
            A server.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.ServerDdlTrigger">
            <summary>
            A server DDL trigger.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.SpatialIndex">
            <summary>
            A spatial index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Statistics">
            <summary>
            A statistics object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.StoredProcedure">
            <summary>
            A stored procedure.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Synonym">
            <summary>
            A synonym.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.SystemDataType">
            <summary>
            A system data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.Table">
            <summary>
            A table.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.TableDataType">
            <summary>
            A table data type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.TableParameter">
            <summary>
            A table parameter.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.TableValuedFunction">
            <summary>
            A user-defined table-valued function.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.TableVariable">
            <summary>
            A table variable.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.User">
            <summary>
            A user.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UdtDataMember">
            <summary>
            A UDT data member (field or property).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UdtMethod">
            <summary>
            A UDT member method.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UniqueConstraint">
            <summary>
            A UNIQUE constraint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UserDefinedAggregate">
            <summary>
            A user-defined aggregate.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UserDefinedClrType">
            <summary>
            A user-defined CLR type (UDT).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UserDefinedDataType">
            <summary>
            A user-defined data type (UDDT).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.UserDefinedTableType">
            <summary>
            A user-defined table type (UDTT).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.View">
            <summary>
            A view.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.VirtualTable">
            <summary>
            A script virtual table (pivot table, derived table, common table expression (CTE), and so on).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.XmlDataTypeMethod">
            <summary>
            An xml data type method.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.SqlParser.Intellisense.DeclarationType.XmlIndex">
            <summary>
            An XML index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver">
            <summary>
            Provides IntelliSense features.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.FindCompletions(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider)">
            <summary>
            Returns the completion list at the specified location.
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number.</param>
            <param name="col">The column number.</param>
            <param name="displayInfoProvider">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/> 
            object that is used to display the completion list.</param>
            <return>A list of <see cref="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Declaration"/> objects that represent 
            the completion list items.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.GetQuickInfo(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider)">
            <summary>
            Gets the IntelliSense Quick Info data for the code object at the specified location.
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number of the cursor position.</param>
            <param name="col">The column number of the cursor position.</param>
            <param name="displayInfoProvider">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/> 
            object that is used to display the Quick Info text.</param>
            <return>The Quick Info for the specified location.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.GetBlockInformation(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32)">
            <summary>
            Gets a language block at the specified location. This is either the top-level statement or a whole batch of Transact-SQL statements.
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number.</param>
            <param name="col">The column number.</param>
            <return>The BlockInformation that represents either the top-level statement or a whole batch of Transact-SQL statements.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.FindRegionObjects(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult)">
            <summary>
            Finds all regions in the specified SQL code.
            </summary>
            <param name="parseResult">The ParseResult to search.</param>
            <return>An enumeration of objects that should be represented as regions.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.FindMethods(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider)">
            <summary>
            Gets a list of help text for the method at the specified location.
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number.</param>
            <param name="col">The column position.</param>
            <param name="displayInfoProvider">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/>
            object that is used to display the method help text.</param>
            <return>A list of help text for the method.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.GetMethodNameAndParams(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32,Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider)">
            <summary>
            Gets the method name and parameter delimiters at a specified location in the script.
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number.</param>
            <param name="column">The column number.</param>
            <param name="displayInfoProvider">An <see cref="T:Microsoft.SqlServer.Management.SqlParser.MetadataProvider.IMetadataDisplayInfoProvider"/>
            object that is used to display the help text.</param>
            <return>The <see cref="T:Babel.MethodNameAndParamLocations"/> object that contains the method names and parameter delimiters.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.FindPairMatch(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32)">
            <summary>
            Finds a token pair match at the specified location.
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number.</param>
            <param name="col">The column number.</param>
            <return>The <see cref="T:Microsoft.SqlServer.Management.SqlParser.Parser.PairMatch"/> object if a pair is found; 
            otherwise, a null reference.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.FindBreakPointInformation(Microsoft.SqlServer.Management.SqlParser.Parser.ParseResult,System.Int32,System.Int32)">
            <summary>
            Gets a language block at the specified location. 
            </summary>
            <param name="parseResult">The ParseResult object that the background parse produced.</param>
            <param name="line">The line number.</param>
            <param name="col">The column number.</param>
            <return>If Valid Breakpoint Location returns BlockInformation, else NULL.</return>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.ExtractBPLocation(Microsoft.SqlServer.Management.SqlParser.SqlCodeDom.SqlCodeObject,Babel.ParserGenerator.LexLocation)">
            <summary>
            Fetch exact location of BreakPoint
            </summary>
            <param name="codeObject">SqlCodeObject of the contruct</param>
            <param name="lexLocation">LexLocation where BP is placed</param>
            <returns>BlockInformation containing start and end of BP</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.BlockInformation">
            <summary>
            Provides information about the code block.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.BlockInformation.#ctor(Microsoft.SqlServer.Management.SqlParser.Parser.Location,Microsoft.SqlServer.Management.SqlParser.Parser.Location,System.String)">
            <summary>
            Constructor used for BreakPoint Location
            </summary>
            <param name="startLocation">Starting Location of BreakPoint</param>
            <param name="endLocation">Ending Location of BreakPoint</param>
            <param name="description">Description of type of SqlCodeObject</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.BlockInformation.Start">
            <summary>
            Gets the start location.
            </summary>
            <value>The start location.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.BlockInformation.End">
            <summary>
            Gets the end location.
            </summary>
            <value>The end location.</value>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.Intellisense.Resolver.BlockInformation.Description">
            <summary>
            Gets the description (the name of the type).
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ChangeResult">
            <summary>
            This class represents the differences between two object model graphs.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ChangeResult.CreatedObjects">
            <summary>
            Collection of the new objects on the target graph that don't exist on the source graph.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ChangeResult.DeletedObjects">
            <summary>
            Collection of the objects on the source graph that don't exist on the target graph.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ChangeResult.SourceModifiedObjects">
            <summary>
            Collection of ObjectDifferences corresponding to source graph elements.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ChangeResult.TargetModifiedObjects">
            <summary>
            Collection of ObjectDifferences corresponding to target graph elements.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ChangeResult.IsEmpty">
            <summary>
            Returns false if the changeresult does not contain any changes
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.Differencer">
            <summary>
            This class lets users compare two object models rooted with IDatabaseObject types and 
            get a change result that captures all changes between the two models.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.Differencer.Compare(Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject,Microsoft.SqlServer.Management.SqlParser.Metadata.IDatabaseObject,Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.IDifferencerFilter)">
            <summary>
            Compare source and target database objects and return a ChangeResult instance.
            </summary>
            <param name="source">Root of the source object graph</param>
            <param name="target">Root of the target object graph</param>
            <param name="differenceFilter">Filter to custom compare any properties</param>
            <returns>Change Result instance containing differences between source and the target graphs</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.DifferencerException">
            <summary>
            This exception is thrown if Differencer encounters a non-recoverable error.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.DifferencerException.#ctor">
            <summary>
            Initializes a new instance of the DifferencerException class.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.DifferencerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DifferencerException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.DifferencerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DifferencerException class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ObjectDifference">
            <summary>
            This class represents the collection of changes between given two object graphs.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ObjectDifference.ChangedObjectSource">
            <summary>
            Changed Object on the source side of the graphs being compared.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ObjectDifference.ChangedObjectTarget">
            <summary>
            Changed Object on the target side of the graphs being compared.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ObjectDifference.PropertyDifferences">
            <summary>
            Collection of the property differences.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.OrderedCollectionDifference">
            <summary>
            This class is a specialization of PropertyDifference that represents the changes in
            a collection whose children are reordered.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.OrderedCollectionDifference.OrderDifferences">
            <summary>
            Collection of the children who are re-ordered.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.OrderedScalarDifference">
            <summary>
            This class is specialization of ScalarDifference that represents an index change 
            of any child in a collection.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.OrderedScalarDifference.SourceIndex">
            <summary>
            Value of the index of the child on the source of graphs being compared
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.OrderedScalarDifference.TargetIndex">
            <summary>
            Value of the index of the child on the target of graphs being compared
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.PropertyDifference">
            <summary>
            This class holds a property whose value is different on any two object graphs.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.PropertyDifference.Name">
            <summary>
            The name of the property whose value differs on any two graphs
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ScalarDifference">
            <summary>
            This class is specialization of PropertyDifference that represents the changes in 
            value (non-child) properties on any two object graphs.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ScalarDifference.SourceValue">
            <summary>
            Value of the property on the source of graphs being compared
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.SqlParser.MetadataDifferencer.ScalarDifference.TargetValue">
            <summary>
            Value of the property on the target of graphs being compared
            </summary>
        </member>
    </members>
</doc>
